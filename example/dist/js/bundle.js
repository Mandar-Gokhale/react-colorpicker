(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */var React = require('react');
var ColorPicker = require('../lib/index');

document.addEventListener('DOMContentLoaded', function () {
  var container = document.getElementById('container');
  React.renderComponent(ColorPicker(null ), container);
});

},{"../lib/index":7,"react":144}],2:[function(require,module,exports){
/** @jsx React.DOM */var React = require('react');
var husl = require('husl');
var tiny = require('tinytinycolor');
var Details = require('./details.react');
var Map = require('./map.react');
var Sample = require('./sample.react');
var Slider = require('./slider.react');

var ColorPicker = React.createClass({displayName: 'ColorPicker',

  propTypes: {
    color: React.PropTypes.instanceOf(tiny)
  },

  getDefaultProps: function () {
    return {
      color: tiny('#808080')
    };
  },

  getInitialState: function () {
    return this.props.color.toHsl();
  },

  handleSliderChange: function (lightness) {
    this.setState({
      l: lightness
    });
  },

  handleMapChange: function (hue, sat) {
    this.setState({
      h: hue,
      s: sat
    });
  },

  render: function () {
    var color = tiny(husl.toHex(this.state.h, this.state.s * 100, this.state.l * 100));

    return (
      React.DOM.div( {className:"colorpicker"}, 
        Map( {h:this.state.h, s:this.state.s, l:this.state.l, onChange:this.handleMapChange} ),
        Slider( {value:this.state.l, onChange:this.handleSliderChange} ),
        Details( {h:this.state.h, s:this.state.s, l:this.state.l} ),
        Sample( {color:color} )
      )
    );
  }

});

module.exports = ColorPicker;

},{"./details.react":3,"./map.react":4,"./sample.react":5,"./slider.react":6,"husl":9,"react":144,"tinytinycolor":145}],3:[function(require,module,exports){
/** @jsx React.DOM */var React = require('react');
var tiny = require('tinytinycolor');

var Details = React.createClass({displayName: 'Details',

  propTypes: {
    h: React.PropTypes.number.isRequired,
    s: React.PropTypes.number.isRequired,
    l: React.PropTypes.number.isRequired
  },

  render: function () {
    var color = tiny({
      h: this.props.h,
      s: this.props.s,
      l: this.props.l
    });

    var rgb = color.toRgb();
    var hex = color.toHex();
    var hsl = {
      h: Math.round(this.props.h),
      s: Math.round(this.props.s * 100),
      l: Math.round(this.props.l * 100)
    };

    return (
      React.DOM.div( {className:"details"}, 
        React.DOM.ul( {className:"rgb"}, 
          React.DOM.li(null, React.DOM.label(null, "R:"), " ", React.DOM.span( {className:"value"},  rgb.r )),
          React.DOM.li(null, React.DOM.label(null, "G:"), " ", React.DOM.span( {className:"value"},  rgb.g )),
          React.DOM.li(null, React.DOM.label(null, "B:"), " ", React.DOM.span( {className:"value"},  rgb.b ))
        ),
        React.DOM.ul( {className:"hsl"}, 
          React.DOM.li(null, React.DOM.label(null, "H:"), " ", React.DOM.span( {className:"value"},  hsl.h )),
          React.DOM.li(null, React.DOM.label(null, "S:"), " ", React.DOM.span( {className:"value"},  hsl.s )),
          React.DOM.li(null, React.DOM.label(null, "L:"), " ", React.DOM.span( {className:"value"},  hsl.l ))
        ),
        React.DOM.ul( {className:"hex"}, 
          React.DOM.li(null, React.DOM.label(null, "#"), " ", React.DOM.span( {className:"value"},  hex ))
        )
      )
    );
  }

});

module.exports = Details;

},{"react":144,"tinytinycolor":145}],4:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var tiny = require('tinytinycolor');
var huslMap = require('../utils/huslMap');

var Map = React.createClass({displayName: 'Map',

  propTypes: {
    h: React.PropTypes.number.isRequired,
    s: React.PropTypes.number.isRequired,
    l: React.PropTypes.number.isRequired,
    onChange: React.PropTypes.func
  },

  getDefaultProps: function () {
    return {
      onChange: function () {}
    };
  },

  getInitialState: function () {
    return {
      active: false
    };
  },

  componentDidMount: function () {
    document.addEventListener('mousemove', this.handleMouseMove);
    document.addEventListener('mouseup', this.handleMouseUp);
  },

  handleMouseDown: function () {
    this.setState({
      active: true
    });
  },

  handleMouseMove: function (e) {
    if (! this.state.active) return;
    var el = this.getDOMNode();
    var rect = el.getBoundingClientRect();
    var hue = (e.clientX - rect.left) / rect.width;
    var sat = (e.clientY - rect.top) / rect.height;

    if (hue < 0) hue = 0;
    else if (hue > 1) hue = 1;
    hue *= 360;

    if (sat < 0) sat = 0;
    else if (sat > 1) sat = 1;
    sat = 1 - sat;

    this.props.onChange(hue, sat);
  },

  handleMouseUp: function () {
    if (! this.state.active) return;
    this.setState({
      active: false
    });
  },


  render: function () {
    var lightness = this.props.l >= 1 ? 0.99 : this.props.l;
    lightness = Math.floor(lightness * 100);

    return (
      React.DOM.div( {className:"map", onMouseDown:this.handleMouseDown}, 
        React.DOM.img( {className:"background", src:
          'data:image/jpg;base64,' + huslMap[lightness]
        } ),
        React.DOM.div( {className:"pointer", style:{
          top: (100 - this.props.s * 100) + '%',
          left: this.props.h / 360 * 100 + '%'
        }} )
      )
    );
  }

});

module.exports = Map;

},{"../utils/huslMap":8,"react":144,"tinytinycolor":145}],5:[function(require,module,exports){
/** @jsx React.DOM */var React = require('react');
var tiny = require('tinytinycolor');

var Sample = React.createClass({displayName: 'Sample',

  propTypes: {
    color: React.PropTypes.instanceOf(tiny).isRequired
  },

  render: function () {
    return (
      React.DOM.div( {className:"sample", style:{
        background: this.props.color.toHexString()
      }} )
    );
  }

});

module.exports = Sample;

},{"react":144,"tinytinycolor":145}],6:[function(require,module,exports){
/** @jsx React.DOM */var React = require('react');
var tiny = require('tinytinycolor');

var Slider = React.createClass({displayName: 'Slider',

  propTypes: {
    value: React.PropTypes.number.isRequired,
    onChange: React.PropTypes.func
  },

  getDefaultProps: function () {
    return {
      onChange: function () {}
    };
  },

  getInitialState: function () {
    return {
      active: false
    };
  },

  componentDidMount: function () {
    document.addEventListener('mousemove', this.handleMouseMove);
    document.addEventListener('mouseup', this.handleMouseUp);
  },

  handleMouseDown: function () {
    this.setState({
      active: true
    });
  },

  handleMouseMove: function (e) {
    if (! this.state.active) return;
    var el = this.getDOMNode();
    var rect = el.getBoundingClientRect();
    var value = (e.clientY - rect.top) / rect.height;

    if (value < 0) value = 0;
    else if (value > 1) value = 1;
    
    value = 1 - value;

    this.props.onChange(value);
  },

  handleMouseUp: function () {
    if (! this.state.active) return;
    this.setState({
      active: false
    });
  },

  render: function () {
    return (
      React.DOM.div( {className:"slider", onMouseDown:this.handleMouseDown}, 
        React.DOM.div( {className:"track"} ),
        React.DOM.div( {className:"pointer", style:{
          top: (100 - this.props.value * 100) + '%'
        }} )
      )
    );
  }

});

module.exports = Slider;

},{"react":144,"tinytinycolor":145}],7:[function(require,module,exports){
module.exports = require('./components/colorpicker.react');

},{"./components/colorpicker.react":2}],8:[function(require,module,exports){


var map = [
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzOiiikaBRRRSEFFFFMQUUUUCCiiigAooooEFJS0lABRRRQAUUUUCCiiigAooopgFFFFABRRRQAUtJS0CCkpaSmAUUUUDCiiimAtFFFNCCiiitFsNBRRRUsoKKKKkYUUUUhhRRRSAKKKKBhRRRSAKKKKQBRRRSEwooopiCiiigQUlLRQAUUUUCCkpaSgAooooAKKKKBBRRRQAUUUUwCiiigAooooAKWkpaBBSUUUxhRRRQAUUUUwFooopoQUUUVothoKKKKllBRRRUjCiiikMKKKKQBRRRQMKKKKQBRRRSAKKKKQmFFFFMQUUUUCCiiigAooooEFJS0lABRRRQAUUUUCCiiigAooopgFFFFABRRRQAUtJRQAUUUUwCiiigAooopgFLRRTQBRRRVrYAooopMoKKKKkYUUUUhhRRRSAKKKKQwooooAKKKKQBRRRQIKKKKBBRRRQIKKKKACiiigQUlLSUAFFFFABRRRQIKKKKACiiimAUUtFACUUtFACUUUUAFFFFMAooooAKWkpaYBRRRTAKKKKtbAFFFFSygooopDCiiikAUUUUhhRRRSAKKKKBhRRRSEFFFFABRRRQIKKKKBCUtJS0AFFFFAgpKWkoAKKKKACiiigQUUUUAFLSUtMAooooAKKKSgAooopgFFFFABRRRQAUtJS0AFFFFUAUUUVS2AKKKKTKCiiikMKKKKQBRRRSGFFFFIAooooAKKKKQBRRRQAUUUUCCiiigQlLSUtABRRRQIKSlpKACiiigAooooEFFFFABS0lLTAKKKKAEooopgFFFFABRRRQAUUUUAFLSUtABRRRTAKKKKtAFFFFIoKKKKQwooopAFFFFIYUUUUgCiiigAooopAFFFFABRRRQIKKKKBCUtJS0AFFFFAgpKWkoAKKKKACiiigQUUUUAFLSUtMApKKKACiiimAUUUUAFFFFABRRRQAUtJRQAtFFFMAoooqwCiiikUFFFFIYUUUVIBRRRQMKKKKQBRRRQAUUUUgCiiigAooooJCiiigBKWkpaACiiigQUlLSUAFFFFABRRRQIKKKKAClpKKYBRRRQAUUUUwCiiigAooooAKKKKACiiigBaKKKYBRRRVAFFFFIoKKKKQwooopAFFFFABRRRSGFFFFABRRRSAKKKKBBRRRQIKKKKAEpaSloAKKKKBBSUtJQAUUUUAFFFFAgooooAKKKKYBRRRQAUUUUwCiiigAooooAKKKKACiiigBaKKKYBRRRVAFFFFIoKKKKQBRRRSGFFFFABRRRSGFFFFABRRRSAKKKKBBRRRQIKKKSgApaSloAKKKKBBSUtJQAUUUUAFFFFAgooopgFFFFABRRRQAUUUUwCiiigAooooAKKKWgBKWiigAooopgFFFFUMKKKKQwooopAFFFFIYUUUUAFFFFIAooooGFFFFIAooooEFFFFAgpKWkoAKWkpaACiiigQUlLSUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAtFFFMAooooAKKKKACiiimAUUUUxhRRRQMKKKKQBRRRSGFFFFABRRRSAKKKKACiiikAUUUUAFFFFAgpKWkoAKWkpaACiiigQUlLSUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAtFFFMAooooAKKKKACiiigAoooqhhRRRSGFFFFABRRRSGFFFFABRRRSAKKKKACiiikAUUUUAFFFFAgpKWkoAKWkpaBBRRRQAUlLSUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAUtJS0AFFFFMAooooAKKKKACiiiqGFFFFIAooooGFFFFIAooooGFFFFIAooooAKKKKQBRRRQAUUUUCEooooAKWkpaBBRRRQAUlLSUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAUtJS0AFFFFMAooooAKKKKAEpaKKYwooooAKKKKQwooooAKKKKBhRRRSAKKKKACiiikAUUUUCCiiigBKKKKAClpKWgQUUUUAFJS0lABRRRQAUUUUAFFFFMQUUUUAFFFFABRRRQAUUUUAFLSUUALRRRTAKKKKACiiigAooopjCiiigAooopDCiiigAooopAFFFFAwooooAKKKKQBRRRQIKKKSgAooooAWiiigQUUUUAFJS0lABRRRQAUUUUAFFFFMQUUUUAFFFFABRRRQAUUUUAFFFFAC0UUUwCiiigAooooAKKKKYwooooAKKKKQwooooAKKKKACiiikAUUUUDCiiikAUUUUCCkpaSgAooooAWiiigQUUUUAFJS0lABRRRQAUUUUAFFFFMQUUUUAFFFFABRRRQAUUUUAFFFFAC0UUUwCiiigAooooAKKKKYwooopAFFFFAwooooAKKKKQBRRRQAUUUUDCiiikIKKKKACkoooAKKKKAFooooEFFFFABSUtJQAUUUUAFFFFABRRRTAKKWigBKKWigBKWiigQUUUUAFFFFABRRRQAUUUUwCiiigAooooGFFFFABRRRQMKKKKQBRRRQAUUUUAFFFFABRRRSAKKKKACiiimAUUUUCCiiikAUUUUAFFFFMAooooAKKKKACiiigAooooAKKKKACiiigQUUUUAFFFFABRRRQAUUUUwCiiigAopKWgYUUUUAFFFFAwooopAFFFFABRRRQAUUUUAFFFFIAooopgFFFFABRSUtAgooopAFFFFABRRRTAKKKKACiiigAooooAKKKKACiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRTASlpKWgYUUUUAFFFFAwooooAKKKKQBRRRQAUUUUAFFFFIAooopgFFFFACUtJS0CCiiikAUUUUAFFFFABRRRTAKKKKACiiigAooooAKKKKACiiigQUUUUAFFFFABRRRQAUUUUAFFFFMBKWkpaBhRRRQAUUUUAFFFFAwooopAFFFFABRRRQAUUUUAFFFFABSUUUCFooopAFFFFABRRRQAUUUUAFFFFMAooooAKKKKACiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFMYUUUUAFFFFABRRRSAKKKKBhRRRQAUUUUAFFFFABRRSUCClpKWgAooopAFFFFABRRRQAUUUUAFFFFMAooooAKKKKACiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAwooopgFFJRSAKKKKAClpKKAFopKWgAooooGFFJRQIKKKWgAooopAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUwCiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUDCiiigAooooAKSlooASilooASilpKACiiigAooooAKKKKAFooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//Z",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzWiiipNwooopEsKKKKZIUUUUCCiiigAooooEFJS0lAhaSlpKBBRRRQIKKKKYBRRRQIWkoopgFFFFMYUUUUCClpKWmAUUUUAFFJS0wCiiiqQCUopKWtVsUgpaSlqWaIKKKKgYUUUUhhRRRSGFFJRUgFFFFIYUUUVLAKKKKRLCiiimSFFFFAgooooAKKKKBBSUtJQIKKKKBBRRRQIKKKKYBRRRQIKKKKYwooopgFFFFAgpaSloAKKKKYCUtFFMAoooqkAlKKSlFarYpBS0lLUM0QUUUVLGFFFFIYUlLRUgJRS0UhiUUtJSAKKKKkYUUUUEsKKKKCQooooEFFFFAgooooAKSlooEFJS0UCEooooEFLSUtMApKKKACiiimAUUUUALRRRTAKKKKACiiimAUUUUwCiiiqQCUtJS1othoKWkoqWWhaKKKllBRRRUjCiiikAUUUUhiUtJRSAKKKKkAooooEwooooJCiiigQUUUUCCiiigAooooEJS0lLQISiiigQUtJS0wEooooAKKKKYBRRRQAtFJS0wCiiigApKWkpgLRRRTAKKKKaAKKKK1Ww0FLSUtSy0FFFFSUFFFFSAUUUUhhSUtJSGFFFFIAoooqQCiiigTCiiigkKKKKBBRRRQIKKKKACiiigQlLSUtAhKKKKBBRRRTAKKKKYBRRRQAUUUUAFLSUtMAooooAKSlpKYC0UUUwCiiimgCiiitFsNBS0lLUstBRRRUjCiiikMKKKKQxKKWikAlFFFIYUUUVIBRRRQJhRRRQSFFFFAgooooEFFFFABRRRQISlpKWgQlFFFABRRRTEFFFFMAopaKAEopaKACiiimAUUUUAFFFFMAooopgFFFFNAFFFFaLYaCiilqWWgopKWpGFFFFIYUUUUgCiiikMKKSlpDEooopAFFFFIlhRRRQIKKKKBBRRRQIKKKKBBRRRQAlLSUtAhKKKKYBRRRQIKKKKYC0UUUAFFFFABRRRTAKKKKACiiimAUUUUAFFFFUgCiiirWw0FLSUtJloKKKKkYUlLSUhi0UUlIBaKKSkMKKKKQBRRRSGFFFFIlhRRRQIKKKKBBRRRQIKKKKBBRRRQAlFFFAgooopgFFFFAgooopgLRRRQAUUUUAFFFFMApKKKAFooopgFFFFABRRRTQBRRRWi2GgoooqWWLRRRSGFFFFIApKWikMSilpKQBRRRSGFFFFIAooopCYUUUUCCiiigQUUUUCCiiigQUUUUAJRRRQIKKKKYBRRRQIKKKKYC0UUUAFFFFABRRRTASilooAKKKKACiiimAUUUU0AUUUVaGgoopaRQlLSUVJQtFJS0AFFFFIYUUUUgCkpaKQxKKKKQBRRRSEwooooJCiiigQUUUUAFFFFAgooopgJRS0lAgopaSgAopaKBCUtFFMAooooAKKKKACiiimAUUUUAFFFFABRRRTAKKKKaAKKKKsaClpKKTKFpKWipGJS0lFIYUtJRQMKWkopAFLSUUhhRRRSAKKKKQmFFFFBIUUUUCCiiigAooopiCiiigAooooEFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFMAooooAKKKKACiiimAUUUU0MKKKKoEFFFFIoWikopDFooopDEopaKQCUUUUDCiiikAUUUUhhRRRSJYUUUUCCiiigQUUUUwCiiigQUUUUAFFFFAgooooAKKKKBBRRRTAKKKSgApaSloAKKKKYBRRRQMKKKKACiiimAUUUUwCiiiqBBRRRSKCiiikMWikopDFoopKQC0lLSUhhRS0lABRRRSAKKKKQgooooEFFFFAgooopgFFFFAgooooAKKKKBBRRRQAUUUUCCiiimMSilooASloooAKKKKYBRRRQAUUUUAFFFFMAooopgFFFFUAUUUUigooopDCiiikMKKKKQBRRRSAKWkooGFFFFIAooooEFFFFAgooooEFFFFABRRRQIKKKKACiiigQUUUUAFFFFABRRRTAKKKKACiiigAooopgFFFFABRRRQAUUUUAFFFFMAoooqgCiiikUFLSUtIYlFFLQAlFFFIYUUUUgCiiigAooopDCiiigQUUUUCCiiigQUUUUAFFFFAgooooAKKKKBBSUtJQAtJRRQAtFFFMAooooAKKKKACiiimAUUUUAFFFFABRRRQAUUUUwCiiiqAKKKKRQUUUUhhS0lFABS0lFIAopaSkMKKKKACiiikAUUUUAFFFFAgooooEFFFFABRRRQAUUUUCCiiigQUlLSUAFFFFMBaKKKACiiigAooooAKKKKYBRRRQAUUUUAFFFFABRRRTAKKKKYBRRRQUFFFFIAooopDCiiigAooopDCiiigAooopAFFFFAgooooAKKKKBBRRRQAUUUUAFFFFAgooooAKSlooEJRS0UwCiiigAooooAKKKKACiiimAUUUUAFFFFABRRRQAUUUUwCiiimMKKKKQBRRRQMKKKKQwooooAKKKKQBRRRQMKKKKQBRRRQIKKKKBBRRRQAUUUUAFFFFABRRRQIKKKKACiiigQUUUUwCiiigAooooAKKKKACiiimAUUUUAFFFFABRRRQAUUUUwCiiimMKKKKQBRRRQMKKKKQBRRRQMKKKKQBRRRQAUUUUgCiiigAooooEFFFFABRRRQAUUUUAFFFFAgooooAKKKKBBRRRTAKKKKACiiigAooooAKKKKACiiigAooopgFFFFABRRRQAUUUUxhRRRQAUUUUhhRRRQAUUUUhhRRRQAUUUUAFFFFIAooooAKKKKBBRRRQAUUUUAFFFFABRRRQIKKKKACiiigQUUUUwCiiigAooooAKKKKACiiigAooooAKKKKACiiimAUUUUAFFFFMYUUUUAFFFFIYUUUUAFFFFABRRRSGFFFFABRRRSAKKKKBBRRRQAUUUUAFFFFABRRRQIKKKKACiiigAooooEFFFFABRRRTAKKKKACiiigAooooAKKKKACiiigAooopgFFFFABRRRTGFFFFIAooooGFFFFABRRRQAUUUUgCiiigAooooAKKKKQBRRRQAUUUUAFFFFABRRRQIKKKKACiiigAooooAKKKKYgooooAKKKKACiiigAooooAKKKKACiiigAooopjCiiigAooooAKKKKACiiigAooooGFFFFIAooooAKKKKACiiigAooooAKKKKBBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRTAKKKKACiiigAooopAFFFFAwooooAKKKKACiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRTAKKKKQBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH//Z",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzekooqWdItFFFIlhRRRQSFFFFBIUUUUCCiiigQlFFFAgooooEFFFFBIUUlLTAKKKKYgooopgFFFFMAooooAKKKKYBRRRTAKKKKYBRRRVIANAoNArdbFRFoooqGbIKKKKhlBRRRUjCiiikAUUUVIwoooqWAUUUVLGFFFFIlhRRRQQFFFFAgooooEFFFFAhKKKKBBRRRQIKKKKCRKWiimAUUUUwCiiimIKKKKYBRRRQAUUUUxhRRRTAKKKKYgoooqkAGgUUCtlsVEWiiioZshaKSlqWMKKKKljCikpakYUlFFIAoooqWMKKKKljCiiikQwooooJCiiigQUUUUCCiiigQlFFFAgooooEFFFFAgooopiCiiimAUUUUwCiiimAUUUUAFFFFMAooopgFFFFMAoooqkIDQKKBWq2LiLRRRUs0QUUtFQUJRS0UhiUUUVIwooopAFFFFSxhSUtFSwCiiikSwooooJCiiigQUUUUCCiiigQlFFFAgooooEFFFFAgooopiCiiimAUUUUwCiiimAUUUUAFFFFMAooooAKKKKYBRRRVIAoFFKK2WxUQoopahmiCikpakoKKKKkYUUUUgCkoopDCiiipGFFFFSwCiiikSwooooJCiiigQUUUUCCiiigQUlLSUCCiiimIKKKKBBRRRTEFFFFABRRRTAKKKKYBRRRQAUUUUwCiiigAooopgFFLRVIBKUUlKK1WxSClpKKlmiFoooqWMSiloqRiUUUUhhRRRSGFFFFSwCiiipYwooopEsKKKKCQooooEFFFFAgooooEFJS0lAgooopiCiiigQUUUUxBRRRQAUUUUwCiiimAUUUUAFFFFMAooooAKKKKYC0lFFUgClpKWtFsUgpaSlqWaIKKKKkYUUUUhhRRRSGFJS0VICUUtJSGFFFFSwCiiikJhRRRQSFFFFAgooooEFFFFAgpKWkoEFFFFMQUUUUCCiiigQUUUUwCiiimAUUUUwCiiigAooooAKKKKYBRRRTAKWiiqQCUtJS1otikFFFFSy0LRRRUsoKSlopDCiikpDCiiipAKKKKQwoooqWAUUUUiWFFFFBIUUUUCCiiigApKWkpiFpKWkoEFFFFAgooooEFFFFMQUUUUwCiiigAooopgFFFFABRRS0AJRRRTAKWkpaYBRRRTQBRRRWi2KQUtJS1LLCiiikUFFFFSMKKKKQCUUtFIYlFFFIAoooqWMKKKKRLCiiigkKKKKBBRRRQIKSlpKYC0lLSUCCiiigQUUUUCCiiimAUUUUxBRRRQMKKKKYBRRRQIKKKKACiiimMKWkpaYgooopoYUUUVothoKWkpalloKKKKkYUUUUhhRRSUhi0UlFIYUUUUgCiiipYBRRRQJhRRRQSFFFFAgooooEFFFFABSUtJQIKKKKBBRRRQIKKKKYBRRRTAKKKKACiiimAUUUUCCiiigYUUUUwCloooASlpKWqQBRRRVrYaClpKWkywoooqRhRRRSGFFFFIYlFLRSASiiikMKKKKkAooooEwooooJCiiigQUUUUCCiiigApKWkoEFFFFAgooooEFFFFMAooopgFFFFABRRRQAUUUUwCiiigAooopgFLSUtACUtFFUAUUUVY0FLSUVJYtFFFIYUlLRSGFFFJSAWiiikMKSilpAJRRRSYwooopEsKKKKBBRRRQIKKKKBBRRRQAUUUUCEooooEFFFFAgooopgFFFFABRRRTAKKKKACiiimAUUUUAFFFLTASloooAKKKKaAKKKKsaCiilpFhRRRSGFFFFIApKWikMKSlpKQwooopAFFFFIAooopCYUUUUCCiiigQUUUUCCiiigAooooEJRRRQIKKKKACiiimIKKKKACiiimAUUUUwCiiigAooooAWiiimAUUUUAFFJS0wCiiirGgpaSipKFooopDEpaKKQwooooGFFFFIBKKWikMSiiikAUUUUhMKKKKCQooooAKKKKBBRRRQAUUlLQISilpKBBRRRQAUUUUxBRRRTAKKKKACiiimAUUUUAFFFFABS0lLQAUUUUwCiiimAUUUVQ0LSUtFIoKKSlpDCiiikMSloopDCikooAKWkopDCiiikAUUUUhBRRRQSFFFFABRRRQIKKKKBCUtJS0AFJS0lMQUUUUAFFFFAgooopgFFFFABRRRTAKKWigBKKWigAooooAKSlpKYxaKKKYgoooqhoKWkpaRQUlLSUhi0UUlIYtFFFIApKWigYlFLSUgFpKKKQBRRRSEFFFFAgooooEFFFFABRRRQISloooAKSlpKYgooooAKKKKBBRRRTGFFFFABS0lLQAUUUUxBRRRQAUUUUAFJS0lMYtFFFABRRRVAFFFFIoWikpaQwpKWigApKKKQxaKSloAKKSlpDEooopAFFFFAgooooEFFFFAgooooAKKKKBBRRRQAUUUUCEooooAKKKKACiiimAUUUUAFLSUUALRRRTEFFFFABRRRQMKKKKYBRRRQAUUUVQBRRS0ihKWkpaQwopKWgAooopAJRS0UDEooopAFFLSUgCiiigAooooEFFFFAgooooAKKKKBBRRRQAUUUUCCkpaSgAooooAKKWimAlLRRQAUUUUAFFFFMAooooAKKKSgApaSloAKKKKYBRRRTGFLSUUDFpKWikAlFFFIYUUUUALRRSUhi0UlLQAlFFFIAooooEFFFFABRRRQIKKKKACiiigQUUUUAFFFFABSUtJQIKKKKAFooopgFFFFABRRRQAUUUUAFFFFMApKKWgBKWiigAooopgFFFFMYUUUUhhS0lLQAUUlFIYUUtFACUUUUgCiiigYUUtJSAKKKKBBRRRQIKKKKACiiigAooooEFFFFACUtJS0AFFFFAhKKKWgAooopgFFFFABRRRQAUUUUAFFFFMAooooAKKKKACiiigAooopjCiiigAooooGFFFFIYtFJRQAtFJRSAKKWigApKKKQBRRRQAUUUUCCiiigAooooAKKKKBBRRRQAlLSUUALRRRQIKKKKYBRRRQAUUUlAC0lFFABS0lLQAUUUUwCiiigAooooAKKKKACiiimMKWkooAKKKKQwopaSgAooooGFFFFIAooooAKKKKQBRRRQIKKKKACiiigAooooAKKKKBBRRRQAlFLSUALRSUtABRRSUxC0lFFABRS0UAJRS0UAJS0UUAFFFFMAooooAKKKKACiiigAooopjCiiikMKKKKAClpKKAFpKWkpAFFFFABRRRQAUUUUAFFFFIAooooAKKKKACiiigQUUUUAFFFFABRRRTAKKKKACiiigAooooAKKKKBBRRRQAUUUUAFFFFABRRRTAKKKKACiiigAooooGFFFFABRRRQMKKKKQBRRRQAUUUUAFFFFABRRRQAUUUUgCiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRTAKKKKACiiigQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQMKKKKACiiimAUUUUgCiiigAooooAKKKKACiiigYUUUUAFFFFAgooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDziiiipZ1hRRRUkMWiiikQwooooEFFFFBIlLSUtAhKKKKYgooooExKKKKCWFFFFUSFLSUtMBKKKKYC0UUUwCiiimAUUUUAFFFFMAoooqgCiiiqQCGgUHpQK6FsXAWlpKWs2boKKKKhlBRRRUjCiiipGJRS0lIAoooqWMKKKKhgFFFFSSxaKKKCGFFFFBIUUUUCEpaSloEJRRRQIKKKKBMSiiimSwooopiFpKWkpgLRRRTEFFFFMAooopgFFFFABRRRTAKKKKYBRRRVoBDQKDQK3WxcRaWiioZugoooqGMKKKKkoKKKKkAooopDEoooqGMKKKKlgFFFFSSxaKKKCGFFFFBIUUUUCEpaSloEJRRRQIKKKKBCUUtJTJYUUUtMQlFFFMBaKKKYBRRRTAKKKKYgooooGFFFFMAooopgFFFFWgENKKDQK2WxURaKKKhmyCiiioZQUUUVLGFFFFIYUUUVICUUtJUsYUUUVLGFLSUtSQwooooJYUUUUEhRRRQIKKKKBCUUUUCCiiimIKSlpKCWLSUtJTQgpaSlpgFFFFMAooopgFFFFMAooooAKKKKYBRRRTAKKKKpABoFFFbLYqItFFFSzZBRRRUMoKKKKkYUUUUhhRRRUgFJRRUsYUUUVLAKWkpaklhRRRQSwooooJCiiigQUUUUCEooopiCiiigQUlLSUEsWkoopoQUtFFMAooopgFFFFMAooooAKKKKYBRRRTAKKKKYBRRRVIANAoorVbFRFoooqWbIKKKKljCiiipGFFFFIYUUUVIwoooqWAlFFFSxhS0lLSJYUUUUEMKKKKBBRRRQIKKKKBCUUUUCCiiigQUUUUEiUtJS0wCiiimIKKKKYBRRRTAKKKKACiiimAUUUUwCiiimAUUUVSAKBRQK1WxcRaKKKhmiCiiipZQUUUUhhRRRUjCiiikMKKKKlgFJS0lSxhS0UUiGFFFFBLCiiigQUUUUCCiiigQlFFFAgooooEFJS0lBIUtJS0wCiiimIKKKKYBRRRTGFFFFABRRRTAKKKKYBRRRQAUUUVSAKBRRWq2KiLRRRUs0QUUUVJQUUUVIwooopAFFFFIYUUUVLGJRRRUsBaKKKRLCiiigkKKKKBBRRRQIKKKKBCUUUUCCiiigQUUUUCCiiimIKKKKYBRRRTAKKKKYBRRRQAUUUUwCiiigAooopgFFFFUgClpKWtFsUgoooqWaIKKKKkYUUUUhhRRRSGFFFFIYUUUVIwpKWkqWAtFFFIlhRRRQSFFFFAgooooEJS0UUCEopaSgQUUUUCCiiigQUUUUxBRRRTAKKKKYBRRRTAKKKKACiiimAUUUUAFFFFMAoooqkAUtJS1otikFFFFSy0FFFFSUFFFFIYUUUUhhRRRSAKKKKljCkpaSpYC0UUUhMKKKKCQooooEFFFFAgooooEFJS0lAgooooEFFFFMQUUUUxBRRRTAKKKKACiiimAUUUUAFFFFABRRRTAKKKKYBS0UU0AUUUVotikFFFFSy0FFFFIoKKKKQwooopDCiiipAKKKKQwoooqWAUUUUiWFFFFBIUUUUCCiiigAooooEFJS0lAgooopiCiiigQUUUUxBRRRTAKKKKACiiimAUUUUAFFFLQAlFFFMApaSimAtFFFNAFFFFWtikFFFFJloKKKKkYUUUUhhRRRSGFFFFIYUUUUgCiiipYwooopEsKKKKCQooooEFFFFAgoopKYC0lLSUCCiiigQUUUUCCiiimIKKKKYBRRRQAUUUUxhRRRQIKKKKACiiimMKKKWgAoooqkAUUUVfQaCiiikywoooqRhRRRSGFFFFIYUUUUgCiiikMKKKKTAKKKKQmFFFFBIUUUUCCiiigQUUUUAFJS0lAgooooEFFFFAgooopgFFFFMAooooAKKKKYBRRS0CEooooGFFFFMApaSloAKKKKoAoooqhoKKKKRYUUUUhhRRRSGFFFFIAooopDCiiikMKKKKTAKKKKRLCiiigQUUUUCCiiigQUUUUAFJS0lAgooooEFFFFAgooopgFFFFMAooooAKKKKACiiimAUUUUAFFFFMApaKKACiiimAUUUVY0FFFFIpBRRRUlBRRRQAUUUUhhRRRSGFFFFIAooopAFFFFITCiiigQUUUUCCiiigQUUUUAFFFFAhKKKKBBRRRQAUUUUxBRRRTAKKKKACiiigAooopgFFFFAC0UlLTAKKKKACiiimAUUUVQ0FFFFIoKKKKQwooopDCiiigYUUUUgCiiikMKKKKQBRRRSEwooooJCiiigAooooEFFFFABRRRQIKSlpKBBRRRQAUUUUxBS0lLTAKSiigAooopgFFFFABRRRQAUtFFABRRRTAKKKKYBRRRVDCiiikUFFFFIYUUUUhhRRRSAKKKKBhRRRSAKKKKQBRRRSEwooooEFFFFABRRRQIKKKKACiiigQUlLSUxBRRRQAUUUUCCiiimAUUUUDCiiloAKKKKYgooooAKKKKACiiigAoooqhhRRRTAKKKKRQUUUUDCiiikAUUUUhhRRRQAUUUUhhRRRSAKKKKQgooooEFFFFMQUUUUAFFFFABRRRQIKKKKBCUUUtABSUUUAFFFFMAooooAKWkpaACiiimIKKKKACiiigYUUUUAFFFFMAoooqgCiiikUFFFFIYUUUUAFFFFIAooooGFFFFIYUUUUgCiiigQUUUUCCiiigQUUUUAFFFFAgooooAKKKKBBSUtJQAUUUUAFFLRTAKKKKACiiigAooopgFFFFABRRRQAUUUUAFF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pDCiikqQCilpKljClpKWkSwooooJCikpaBCUUUtAhKKKKBBRRRQIKKKKBCUUtJTEFFFFMQUUUUwCiiigApaSlpgFFFFABRRSUAFLSUtMAooopgFFFFUgClpKWrWxSCiiiky0FFFFSUFFFFIYUUUUhhRRRUgFFFFIYlFFFSwFooopCYUUUUEhRRRQISloooEJRS0lAgooooEFFFFAgpKWkpiCiiimIKKKKYBRS0UAJS0UUwCiiigAooopgFFFFABRRRTAKKKKaGFLSUtaLYaCiiipZaCiiikUFFFFSAUUUUhhRRRSGFFFFIYUlLSVLAWiiikSwooooJCiiigQUUUUCCkpaSgAooooEFFFFMQUlLSUCCiiimIKWkpaYBRRRQAUUUUwCiiigAooooAKKKKYwooooAKKKKpAFLRRV9BoKKKKTLQUUUVIwooopDCiiikMKKKKQwooopAFJS0VLGFFFFIlhRRRQSFFFFAhKWkpaYgpKKKACiiigQUUUUCCkpaSgQUUUtMBKWiimIKKKKBhRRRTAKKKKACiiigAooopgFFFFABRRRVALRRRVDQUUUUi0FFFFIYUUUUhhRRRSAKKKKQwooopDCiiikwCiiikJhRRRQSFFFFAgooooEFJS0UAJRRRQIKKKKBBRRRQIKKKKYBRRRTAKKKKAEpaKKYBRRRQAUUUUAFFFFMAooooAKWkpaYBRRRVjQUUUUigoooqSgooooAKKKKQwooopDCiiikAUUUUgCiiikJhRRRQIKKKKBBRRRQIKKKSgAoopaBCUUUUCCiiigQUUUUwCiiimAUUUUAFFFFMAooooAKKKKAClpKWgApKWkpgFLSUtNAFFFFUNBRRRSKCiiikMKKKKQwooooGFFFFIAooopDCiiikAUUUUhMKKKKCQooooAKKKKBBSUtJQIKWkooAKKKKBBRRRQAUUUUxBRRRTAKKKKACiiimAUUUUAFFFFABRRS0AJRRRTGLRSUtMQUUUVQ0FFFFIoKKKKQwooopDCiiikAUUUUDCiiikAUUUUgCiiikIKKKKBBRRRQIKKSloAKSlpKBBRRRQAUUUUxBRRRQAUUUUCCiiimAUUUUDCiiigAopaKYgooooAKKKSgAooopjCloooAKKKKoAooopFBRRRSGFFFFABRRRSGFFFFABRRRSGFFFFIAooooEFFFFAgooooEFFFFABSUtFAhKKWkoAWkopaBCUUUUAFFFFABRRRTAKKKKACiiigBaKKKYgooooAKSiigYUtJS0AFFFFMAoooqhhRRRSGFFFFIYUUUUgCiiigAooopDCiiigAooopAFFFFABRRRQIKKKKBBRRRQAUUUUCCkpaSgApaSloASiiigQUUUUAFFFLTASloooAKKKKACiiigApKKKYBRRRQAUUUUALRRRTAKKKKYwooopDCiiigAooopDCiiigAooopDCiiigAooopAFFFFAgooooEFFFFABRRRQAUUUUCCkpaSgAooooAWkpaSgQUUUUALRRRTAKKKSgBaKSigAoopaAEopaKYCUUtFABRRRQAUUUUAFFFFMYUUUUAFFFFAwooopDCiiigAooopAFFFFABRRRSAKKKKACiiigQUUUUAFFFFABRRRQIKSlpKACiiigApaSloEJS0UlMBaSiigAooooAKKKKACiiigBaKKKYBRRRQAUUUUAFFFFABRRRTGFFFFABRRRSGFFFFABRRRQMKKKKQBRRRQAUUUUgCiiigQUUUUAFFFFABRRRQIKKKKACiiigBKKKKACiiigAooopgFFFLQAlFLRQISilooASilooASloooAKKKKYBRRRQAUUUUAFFFFAwooooAKKKKBhRRRQAUUUUgCiiigAooooAKKKKACiiigAooooAKKKKQgooooAKKKKACiiigAooopgFFFFABRRRQAUUUUAFFFFAgooooAKKKKACiiigAooooAKKKKYBRRRQAUUUUDCiiigAooooGFFFFIAooooAKKKKACiiigAooooEFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzqiiioZ2hS0UVJDFooopGbCiiiglhRRRQISiiigQUUUUEhSUtFMliUlLSUEsKKKWqRIUUUVQCUtFFUAUUUUAFFFFMQUUUUxhRRS0xCUUUtUgEopaSrQCHpQKDQK6Y/Ca09xaWiis2dCCiiis2WFFFFSxhRRRUsYUUUVLGJRS0lQwCiiis2MWiiipIYtFFFIzYUUUUEsKKKKBCUUUUCCiiimSFFFFBLEpKWkoJYUtJS1SJCiiiqAKKKKoAooooAKKKKYBRRRTAKWiimAlLRRTQBRRRVoBDSClNArpj8JpDcWiiis2dCCiiioZQUUUVDGFFFFSxhRRRUsYUUUVLGJRRRWbAWiiipIYtFFFBDCiiikSFFFFMQUlLSUEhRRRQIKKKKBMSiiimQxKWkpapCCiiimIKKKKoAooooAKKKKYBRRRTAWiiimAlLRRTAKKKKtAIaBQaBXRHY0gLRRRWbN0FFLRUMsSiiipGFFFFSxhRRRUsYUUUVLGFJS0lQwFooFFQQxaKKKCGFFFFBIUUUUCCkpaSgkKKKKBBRRRQISiiimQwoooqkIKKKKYBRRRTELSUtJTGFFFFMQtFFFMAooopgFFFFMYUUUVaAQ0Cg0ordbFwClpKWoZuhKKWis2UFFFJUsYUUUUhhRRRUsYUUUVLGFJS0VDAKWkpaglhRRRQZsKKKKBBRRRQIKSlpKCQooooEFFFFMQlFFFBDCiiiqQgooopgFLRSUwClpKWmAUUUUwCiiimAUUUUAFFFFUAUUUVSAKBRQK3WxcRaKKKhmyCiiioZYUUUVIwpKWipGJRRRSYwoooqWMKKKKhgFLSUtSQwooopEMKKKKBBRRRQSFJS0lAgooooEFFFFMTEooooJYUUUVSJCiilpgFJRRTAKWiimAUUUUwCiiigAooopgFFFFMAoooq0AGiiitlsXEWiiioZsgoooqWUFFFFSUFFFFSAlFLRSGJRRRUsYUUUVDGFLSUtSQwooopEMKKKKCQooooEFFFFAhKKKKYgooooExKKKKCWFFFFUiQpaKKYCUUtFMAooopgFFFFMAooooAKKKKYBRRRTAKKKKpDCiigVstioi0UUVLNkFFFFQygoooqWMKKKKQwoooqRiUUUUmMKKKKhgLRRRUksKKKKCGFFFFBIUUUUCCiiigQlFFFAgooooEFJS0lMlhS0lLTQhKWkpaoAooooAKKKKYBRRRTAKKKKACiiimAUUUUwCiiiqQBS0lLWq2KiFFFFSzVBRRRUsoKKKKkoKKKKQwoooqQCkpaKljEoooqWMWiiipIYUUUUEhRRRQSFFFFAgooooEJRS0UCEooooEFJS0lMlhRS0lNCFoooqgCiiigAooopgFFFFABRRRTAKKKKYBRRRTAKKKKpAFLRRWi2LiFFFLUs0QUlFLUlCUUUUhhRRRUjCiiikMKSloqWMSiiipYC0UUVJLCiiighhRRRQIKKKKBBRRRQIKKKKYhKKKKBBSUtFBLCkpaKYgooopgFFFFMAooopgFFFFABRRRTAKKKKYwooooEFFFLVIYUUUVqtikFLSUtSzRBRRRUlBSUUtSMSilpKQwooopAFFFFSxhSUtJUsYtFFFIhhRRRSJYUUUUxBRRRQIKKKKBBSUtJQIKKKKBBRRRQJiUtFFMQUUUVQBRRRQAUUUUwCiiigAooopgFFFFABRRRTAWiiiqQBRRRWi2KQtFJS1LLQUUUVJQUUUUhiUUtJSGFFFFIYUUUVIwpKWipYBRRRSJYUUUUEhRRRQIKKKKBBRRRQIKSlpKBBRRRQIKKKKBBRRRVCCiiimAUUUUAFFFFMAooooAKKKKYBRRRQAUUUUwFoooqkAUUUVa2KQtFFFJloKKKKkoKKKKQwooopDCkopakBKKKKQwoooqWMKKKKRLCiiigkKKKKBBRRRQIKKKKBBSUtJQIWkpaSgQUUUUxBRRRTEFFFFMAooooAKKKKYBRRRQAUUUtMBKKWigBKWkpaYBRRRTQBRRRVrYpC0UUUmWgoooqRhRRRSKCiiikAlFLRSGJRRRSGFFFFSwCiiikSwooooJCiiigQUUUUAFFFFAgpKWkpiFpKWkoEFFFFAgooopiCiiimAUUUUAFFFFMYUUUUCClpKWgApKWkpgFLRRTGFFFFNAFFFFWNC0UUUmWgoooqRhRRRSGFFFFIYUUUUgCkoopDCiiipYBRRRQJhRRRQSFFFFAgooooEFFFFABSUtFAgpKWkoEFFFFAgooopgFFFFMAooooAKKKKYBS0UUAFFFFACUUUUwClpKWgAoooqkAUUUVQ0LRRRSKCiiikUFFFFIYUUUUgCiiikMSilopDCkoopMAooopCYUUUUEhRRRQIKKKKBBRRRQAUUUUCEopaKBCUUUUCCiiimAUUUUwCiiigAoopaACiiimAUlFFAC0UUUwCiiigAooopgFFFFWNC0UUUikFFFFSUFFFFIAooooGFFFFIYlLRRSASilpKQBRRRSEwoopaBCUUUUCCiiigQUUUUAFFFFAgooooEJRS0lABRRRTEFLSUtMAooooAKKKKACkoopgFFFFAC0UUUAFFFFMAooopgFFFFUNC0UUUigooopDCiiikMKKKKQBRRRQMKKKKQxKKWkpAFFFFITCiiigkKKKKBBRRRQAUUUUCCiiigApKWkpiFpKWkoAKKKKBBS0UUwCiiigAopKWgAooopgFFFFABRRRQAUUUUwCiiimMKKKKYIWiiigoKKKKQwooopDCiiikAUUUUDCiiikA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gCiiitFsXEWiiipZogoooqSgooopDCiiipGJRS0UhiUUUVLGFFFFSwCiiipJYUUUtBAlFLSUCCiiigQUUUUCCiiigQUUUUxCUUUUEsKKKKYgoooqgCiiloASloopgFFFFABRRRTAKKKKYwooooEFFFFUhhRRRWi2KQtFFFJmiCiiipGFFFFSUFFFFIApKWikMSiiipGFFFFSxhRRRSIYUtFJSJFpKWkpiCiiigQUUUUCCiiigQUUUUCEopaSgTCiiimIKKKKoBaKKKACiiimAUUUUAFFFFMAooooAKKKKYBRRRVIApaSlrRbFIKKKKlloKKKKkoKKKKQwooopDCiiikMKKKSpGFFLSVLAKWkpaRLCkpaSgkWkoooEFFFFAgooooEFFFFAgooooEFJS0lAgoooqhC0UUUwCiiigAooopgFFFFABRRRTAKKKKACiiimAUUUU0AUtJS1otikFFFFSy0FFFFIoKKKKQwoooqRhRRRSAKSlopDEoooqWAtFFFITCkpaKCRKKWkoEFFLSUCCiiigQUUUUCCiiigQUlLSUxBS0lLTEFFFFABRRRTAKKKKYBRRRQAUUUUwCiiigAooopgFFFFNDClpKWrQ0FFFFJloKKKKkYUUUUhhRRRSGFFFFIYUUUUgCkpaSpYxaKKKRLCiiigkKSiloEJRRRQAUUUUCCiiimIKKKKBBSUtFAgooopiCiiimAUUUUDCiiimAUUUUCCiiigAooopjCiiimAUUUU0AUtJS1Y0FFFFSWgooopDCiiikMKKKKQwooopAFFFFIYUlLRUgFFFFAmFFFFBIlLRRQISiiigQUUUUAFFFFAgooooEFFFFAgooopgFFFFMAooooAKKKKYBRRRQAUUUUAFFFFMAooooAKKKKaAWiiirGgooopFBRRRSKCiiikAUUUUhhRRRSGFFFFIAooopDCiiikSwooooEFFFFAgpKWkoELSUtJQAUUUUCCiiigQUUUUCCiiimAUUUUwCiiigAooopgFFFFABRRRQAUUUUwCiiigAooopoBaKKKoaCiiikUFFFFIYUUUUhhRRRQMKKKKQBRRRSGFFFFIAooopCYUUUUEiUtJS0AJRRRQIWkpaSgQUUUUAFFFFAgooopgFFFFAgooopgFFFFABRRRTAKKKKACiiigAooooAKKKKYBRRRTGLRRRVAgooopFBRRRSGFFFFIYUUUUgCiiigYUUUUhhRRRSEFFFFITCiikoELRRRQISiiigBaSiigQUUUUwCiiigQUUUUAFFFFAgooopgFFFFABRRRQAUUUUwCiiigYUUUUAFFFFMAooooAWiiiqAKKKKRQUUUUhhRRRQAUUUUhhRRRSAKKKKBhRRRSAKKKKBBSUtFAgpKWigQlFLSUAFFLRQISiiigAooooEFFFFABRRRQAUUUUwCiiigAooooAKKKKYBRRRQAUUUUAFFFFAC0lLSUwFooopgFFFFBQUUUUhhRRRSAKKKKACiiikMKKKKACiiikAUUUUAFFFFBIUUUUAJRRRQAtFFFAhKKKKACiiigAooooEFFFFABRRRTAKKKKACiiimAUUUUAFFFFABRRRQAUUUUALSUtJTAWiiimMKKKKQwooooAKKKKQwooooAKKKKQBRRRQMKKKKQgooooAKKKKBBSUtJQAUUUUALRRRQISiiigAooooAKKKKBBRRRTAKKKKACiiigAooooAKKKKACiiloASilopgJS0UUAFJS0lABS0lLTGFFFFABRRRSGFFFFABRRRQMKKKKQBRRRQAUUUUgCikpaBBRRSUAFFFFABRRRQAtFJS0CEooooAKKKKACiiigQUUUUwCiiigAooooAKKKKACiiigAooooAWikpaACiiimAUlLSUDFooopgFFFFIAooooGFFFFABRRRQAUUUUgCiiigYUUUUCCiiigBKKWkoAKKKKBBRRRQAUtJS0gEopaKYCUUtFACUUtFACUUtFACUUtFACUUtFACUUtFAhKKWigBKKWigBKWiigAooooAKSlpKYwpaSigBaKKKACiiigAooopDCiiigAooooAKKKKACikooELRSUUAFFFFABRRRQAUUUUAFLSUUALRSUtABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQIKKKKACiiigAoopKBi0lFFABRRRQAtFJRQAtJRRQAUUUUAFLSUUALRSUUALRSUUAf/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzykpaSokegKKdSClrMykFFFFBmwooooJYUUUUEhRRRQIKSlpKCQooopksSkpaSghhRRRVokKKWiqAKKKKoQUUUUwCiiimAUUUtMApKWimAlFLRVIApKWkq4gI3SkWlNA6V1R+E1pbi0tFFZyOpBRRRWbLQUUUVDKCiiipYwoooqGAlFLSVLGFJS0VlIYopaQUtQZyCiiikZsKKKKCWFFFFBIUUUUCCkpaSgkKKKKZLEpKWkoIYUUUtWiQoooqgCiilqgEooopgFFFLTASloooAKKKKoAooopoAoooq4gIelIKU9KBXVH4TWnuLRRRWcjpQUUUVmy0FFFFQxhRRRUsYUUUVLGFJS0VDGJRRRWcgFpaQUtQ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oooEFFFFMAoopaYCUtFFABRRRTAKKKKACiiigAooooAKKKKYBRRRTQBRRRVDQUUUUihaSilpDEpaKSkMWikpaQwpKWigBKKKKQwooopAFFFFITCiiigkKKKKBBRRRQAUUUUCCiiigAooooEJRS0lMAooooEFLRRTAKKKKACiiimAUUUUAFFFFABRRRQAUUUUxhRRRTAKKKKoEFLSUUigooopDFopKKQxaSlpKQBRS0lAwooopAFFFFIAooopCYUUUUCCiiigQUUUUwCiiikIKKKKYBRRRQIKKKKACiiigQUUUUwCiiigYUUUUAFFFFMAooooAKKKKACiiigAooopgFFFFUAUUUUigpaSikMKKKWgBKKKKQwooopAFFFFAwooopAFFFFAgooooEFFFFAgooooAKKKKBBRRRQAUUUUAFFFFAgooooAKKKKYBRRRQAUUUUAFFFFMAooooAKKKKACiiigAooopgFFFFMYUUUUDCiiikAUUUUhhRRRQAtJRRSGFFFFABRRRSAKKKKBBRRRQIKKKKACiiigAooooEFFFFABRRRQAUUUUCCiiimAUUUUAFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiigAoooqhhRRRSAKKKKQwooooAKKKKBhRRRSAKKKKACiiikAUUUUAFFFFAgooooAKKKKACiiigQUUUUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFMAooooAKKKKACiiimMKKKKQBRRRQMKKKKACiiigAooopAFFFFAwooooEFFFFABRRRQAUUUUCCiiigAooopAFFFFMAooooAKKKKACiiigAooooAKKKKACiiigQUUUUAFFFFABRRRQAUUUUAFFFFMYUUUUAFFFFABRRRQAUUUUhhRRRQAUUUUAFFFFABRRRQIKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKBBRRRQAUUUUDCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz2iiiokeiOFLSClrIzkFFFFBkwooooJYUUUUEsKKKKCWFFFFBLEooooJYlJS0hpmcgooorREhS0UVSEFFFFUAUUUUwCiiimAUUUUwCiiiqAKKKKaAKKKWtIgNbpSL0pW6UL0rsi/dNqW4tFFLWUjsQUUUVky0FJS0VDGJRS0VLGJRRRUMYUUUVDGFJS0lZSGOFLSClrMykFLSUtIzYlLRRQQxKKKKBBRRRQSFFFFBLEooopksSkNLSGmQwoopatEBRRRVIAoooqgCiiimAUUUUwCiiimAUUtFMBKWiiqQBRRRWkQEPSkFKaQV1R+E1pbjqKKKzkdaCiiismWgoooqGMKKKKllCUUtFSwEoooqGMKSlorK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AKKKKBMKKKKCRKWiigQlFLSUCCiiigAooooEFFFFAhKKWigQUUUUwCkopaYCUUtFACUUtFMAooooAKKKKACiiimAUUUUAFFFFNALRRRVjQUUUUigoooqSgooooAKKKKQwooopDCiiikAUUUUgCiiikJhRRRQISlpKWgQUlFFAgooooEFFFFABRRRQIKKKSgBaSiimIKWkpaYBRRRQAUUUUwCiiigAooooAKKKKACiiimAUUUU0MWiiiqBBRRRSKCiiikMKKKKQwooopDCiiigAooopDCiiikAUUUUhMKKKSgkKWiigQlFFFABRRRQIKKKKACiiimIKSlooAKKKKBBRRRTAKKKKACiiigAooopgFFFFAwooooAKKKKYBRRRQAtFFFUAUUUUigooooGFFFFIYUUUUgCiiikAUUUUDCiiikAUUUUCYUlLRQIKSlooEJRRRQAUUUtAhKKKKACiiigQUUUUAFFFFABRRRTAKKKKACiiigAooopgFFFFABRRRQAUUUUALSUtJTAWiiiqAKKKKRQUUUUhhRRRSAKKKKACiiikMKKKKACiiikAUUUUCCiiigQUUUlABRRRQAUtJS0CEooooAKKKKACiiigQUUUUwCiiigAooooAKKKKACiiimAUUUUAFFFFABRRRQAtJS0lMBaKSlpjCiiikMKKKKACiiikMKKKKACiiikAUUUUDCiiikIKKKSgBaKKKBBSUUUAFFFFABS0lLQISiiigAooooAKKKKBBRRRTAKKKKACiiigAooooAKKKKACiiigApaKKYBRRRQAUlLSUAFLRRTGFFFFABRRRSGFFFFABRRRQAUUUUhhRRRQAUUUUCEpaKKQBSUUUAFFFFABRRRQAUtJS0CEooooAKKKKACiiigAooopiCiiigYUUUUAFFFFAgooooAKKWigBKWiigAooooAKSlpKYwpaSigBaKKKACiiigYUUUUAFFFFIAooooAKKKKACikooELRSUUAFFFFABRRRQAUUUUAFFFFAC0UlFAC0UlLQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUlAC0UlFAC0UlFABRRRQAUUUUALRSUUALRSUUAFFFFAC0UlFAC0UlFAC0UlFAH//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz+kpaSokemPFLSClrEykLRRRQZMKKKKRDCiiimSFJS0lBLCiiigTEopaSghiUhpaQ0zOQUUUVoiAoopa0QgooopgFFFFMAoooqgCiiimAUUUUwCiiiqQBRS0VpEBrdDSL0pW6Ui9K7YP3DejuOoopaykdqEopaKyZaEopaKzZQlFLSVLGFFFFQxhSUtFQxiUUtJWMhjhS0gpayMZC0UUUjNhRRRQQwooooJYUlLSUEhRRRQJhSUtJTIYlIaWkpmcgooorREC0UUVSAKKKKoAooopgFFFFMQUUtJTAKWiiqAKKKKpAFFFFaRGNPSgUp6Ugrri/dNqW46iiis5HYgooorJloKKKKhlBRRRUMYUlLRUMYlFFFQxhSUtFZSGKKWkFOrIykFFFFIyYUUUUEsKKKKZIUUUUEiUUUUEsKSlpKCWFNp1NNMzkFLSUtaIkKKKKpCCiiiqAKKKWmAlLRRTAKKKKYBRRRTAKKKKpAFFFFaRAQ9KBSmgV1x+E2pbhS0UVlI60FFFFZstCUUtFQyhKKWkqGMKKKKljCkpaKhlCUUtJWUgFFOpBS1kZSCiiigzYUUUUEMKKKKBBRRRQSxKKKKCWFJS0lMlhSGlpDQQxKWiitEQFFFFUgCiilqgCiiimAUUUUwCiiimAUUUUwCiiiqQBRRS1cQENAoNArqj8JrTFoopazkdSEopaKzZaEoooqGUFFFFSxiUUtFSyhKKKKhjCkpaSspAOFLSClrMzkFFFFBmwooopEMKKKKZIUUUUCEopaSglhRRRQSxKQ0tIaZDCiiirRIUUtFUIKKKKoAooopgFFFFMAooopgFFFFMAoopapAFFFFXEYhpRQaBXTH4TSAtFFFZs6UFFFFZstBRRRUsoSilpKhlBRRRUsYUlLSVDGFFLSVnIYopaQUtZmUgooooM2FFFFBLCiiigkKKKKBBSUtJQSFFFFMliUhpaSghhS0lLVokKKKKoAoooqgCiiimAUUUUwCiiloAKSloqgCiiimgCiiirQBQKKBXRHY1gLRRRUM6EFFFFZstBRRRUsYUUUVLKCkpaSpYwoooqGMKSlpKzkMUUtJS1BnIKKKKRmwooooJYUUUUEhRRRTEFJS0UEiUUUUEsSkpaKZLCiiiqRIUUUVQgoooqgCiiimMKKKWgQlLRRTAKKKKYwoooqkAUUUtWgEpRSUordbGkAoopahm6CkpaKhloSiiioZQUUUVLGFFFFSxiUUtJUsYUUUVmxi0UCioM5BRRRQQwooooICiiigQUUUUCCiiigkSiiimSxKKWkoJYUUUVSJCiilqgEoooqgCiiloAKKKKYBRRRTAKKKKYBRRRTQBS0lLVoAoFFFbrY0iLRRRUM3QUUUVDKQUUUVLKEoooqWMKKKKljCkpaKljEopaSs2MWiiipIYUUUUjNhRRRQSwooooEFFFFMQUUUUEhSUtJQJhSUtJQQwoooq0SFFLSUwClpKWmAUUUUwCiiimAUUUUxhRRRTAKKKWmAUUUVaAKKKK2WxcRaKKKhmyCiiioZYUUUVLGFJS0UihKKWkqWMKKKKljCkpaKzYBRRRUkMWkpaSghi0lFFBLCiiigQUUUUEhRRRQIKSlpKBMKSlpKZDCiilqkISlpKWmAUUUUwCiiimAUUUUwCiiimAUtJS0AJS0UVQBRRRVIAooorZbFxFoooqWbIKKKKhlIKKKKllBRRRUjCkpaKTGJRRRUMYUUUVDGFFFLUkMSilooIYlFLRQSJRRRQIKKKKCQooopiCkpaSgQUUUlBLClopKpEi0UUUwCiiimAUUUUwCiiimAUtJS0AFFFFMAooopgFFFFWhhS0lLWq2KiFFFFSzVBRRRUMsKKKKkYUUUUhhRRRUsYlFLSVLGFFFFSxhS0lLUkMKKKKRDCiiigQlFFFMkKKKKBBRRRQIKSlpKBBRRRQSwoooqkIKKKKYBRS0lMAooopgLRRRTAKKKKACiiimAUUUUwCiiiqQBS0lLWq2KiFFFFSzVBRRRUsoKKKKkoKKKKQwoooqRhRRRUsYUlFFSwFoooqSWFFFFBDCkpaSgkKKKKBBRRRQIKKKKBBRRRQISiiimSwooopoQUUUUwCiiimAUtFFMAooooAKKKKYBRRRTAKKKKYBRRRVIYUtJS1otikFFFFSzRC0lFFSygpaSikMKKKKkYUUUUhhRRRUsYUlLSVLGLRRRUkMKKKKCWFFFFBIUlLSUCCiiimIKKKKBBRRRQISiiiglhRRS0xCUUUUwCloopgFFFFMYUUUUCCiiimAUUUUxhRRRQAUUUVSAKWkpa0WxSCiiiky0LSUUtSUJS0lFSUFFFFIYUUUUgCiiipYwpKWipYwooopEsKKKKCApKWkoELSUtJQIKKKKBBRRRQIKKKKBBSUtJQJhRRRTEFLRRVAFFFFABRRRTAKKKKACiiimAUUUUAFFFFMAoooqkAtFFFaLYpBRRRUstC0lFLUlCUtJRSGFFLRSGJRRRUjCiiikMKKKKlgFFFFIlhRRRQSFJS0UCEopaSgQUUUUCCiiigQUUUUCCkpaSmIKWkpaYgooooAKKKKYBRRRTAKKKKACiiimAUUUUAFFFFMAooopoYtFFFaLYaCiiipZaCiiikMWikoqRhRS0lIYUUUUhhRRRSGFFFFSwCiiikJhRRRQQFFFFAgpKWkoAWkoooEFFFFMQUUUUCCkpaKBBRRRTEFFFFABRRRTAKKKKYwooooEFFFFABRRRTGFFFFMAooopoBaKKKsaCiiikWgopaSpGLRSUUhhRS0lIYtJRRSGFFFFIAoooqWMKKKKCWFFFFBIUUUUCCkpaSgQUUtJQAUUUUCCiiigQUUUUCCiiimAUUUUwCiiigAooopgFFFFABRRRQAUUUUwCiiigAopaSmgFoooqxoKKKKRQUtJRSKCiilpDEooopALSUUUhhRRRSGFFFFIAooopEsKKKKBBRRRQIKSlpKBC0lLSUAFFFFAgooooEFFFFABRRRTEFFFFMAooooAKKKKYBRRRQAUUUUAFFFFABRRRTAKWkopoBaKKKoaCiiikULSUUUhhRS0lIYUtJRSGFFFFABRRRSGFFFFIAooopCYUUUUEhRRRQIKSiigBaSlpKBBRRRQAUUUUCCiiimAUUUUCCiiimAUUUUAFFFFMAooooAKKKKACiiigYUUUUwFpKKWmAUUUUwCiiigoKKKKQwooopDFpKKKQBRRRQMKKKKQBRRRSAKKKKBMKKKKQgooooEJRS0lMBaSlooEJRRRQAUUUUCCiiigAooooAKKKKYBRRRQAUUUUAFFFFMAooooAKKKKACiiloAKSlpKYC0UUVQBRRRSKCiiikMKKKKACiiikMKKKKQBRRRQMKKKKQgooooAKKKKBBRRRQIKSiigBaKKKBBSUtJQAUUUUAFFFFAgooooAKKKKYBRRRQAUUUUwCiiigAooooAKKKKACiiigBaSlpKYC0UUUxhRRRSGFFFFABRRRSGFFFFABRRRSAKKKKBhRRRSEFFFFABRRRQIKSlpKACiiigBaKKKBBSUtJQAUUUUAFFFFAgooopgFFFFABRRRQAUUUUAFFFFABS0lLQAUUUUwCiiigApKWkoAWiiimMKKKKACiiikMKKKKACiiigAooopDCiiigAooooEFFFFIAoopKACiiigAooooAWiiigQUlLSUAFFFFABRRRQAUUUUxBRRS0DEopaKAEopaKBCUUtFACUUtFACUtFFABRRRQAUlLSUxi0UlLQAUUUUAFFFFAwooopAFFFFABRRRQAUUUUAFFJS0CCikooAWkoooAKKKKACiiigBaKSloAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigQUUUUAFFFFABRRRQAUlLSUDClpKKAFopKKAFopKKAFopKKAFopKKAFopKKAFopKKAP/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgKSlpKiZ6g8UtIKWsTGQtFFFIyYUUUUEMKKKKCWFJS0lBLCiiiglhSUtJTJYhpDSmkNNGchKWiitEZhRS0laIApaKKYBRRRVCCiiimAUUUUwCiiimgCiiirQBRRS1pEBjdKRelObpSL0rtg/cOihuLS0UVlI7UFFLRWLNEJRS0lQxhRRRUMoKKKKhjCkpaSoYwopaSsZDHClpBS1iYyFooopGTCiiighhRRRQSFFFFMliUUUUCYUlLSUEMDTTTqaaZnIKKKWtEQFFFFaIQUUUUwCiiimAUUUVQBRRS0wEoopaYBRRRVIAooorSIDW6ULSnpSCuyD903o7jqKKKykdiCiiismaIKKKKhlBRRRUMYlFLSVLGFFFFZsYUlLRWUhiinUgpayMZBRRRSM2FFFFBDCiiiglhSUtFBIlFFFAmFJS0lMhhTTTqQ0zOQlLSUtaIgKKKKpAFFFFUAUUUUwCiilpgFFFFMAoooqgCiiiqQBRRRWkQEPSgUpoFdcfhNqW4UtFFZSOtBRRRWTNEFFFFQyhKKWipYxKKKKhjEopaKhjEopaSspDHClpBS1kZSCiiigyYUUUUEsKKKKCQooooJEopaSglhRRRQSxKQ0tJTM5BRRRWiJCiiiqELSUtJVAFLRRTAKKKKYBRRRTAKKKKYBRRS1SAKKKK0iMQ9KBQaUV1R+E1p7hRS0VnI6kJRS0VkzRCUUtJUsoKKKKhjCkpaKljEoooqGMKSlorKQxRS0gpazMpBRRS0jNiUUtJQSwooooJCiiiglhSUtJQSwooopksSkpaQ0EMKKKK0RAUtFFUAUUUVQBRRRTAKKWkpgFFFFMBaKKKYBRRRVIAoooq4gBoFBoFdMfhNaYtFFFRI6kFFFFZstBRRRUMoKSloqWMSiiioYwpKWipYxKKWkrKQxRS0gpazM5BS0UUGbEopaSghhRRRQSFFFFAgooooJYlFFFBLEpDS0GmQxKWkpatEhRRRVIAoooqgClpKWmIKSlopjCiiimAUUUUwCiiimgCiiitEAUCilFdEfhNIBRS0VDOlBSUtFZstCUUUVDKCiiipYwpKWipYxKKKKhlBSUtFZyAUUUUVmZyFooooM2FFFFBLEooooJCiiigQUUUUEiUUUUyWFIaWkoIYUUUVaJCiiiqAKWiiqAKKKKYBRRRTAKKKKACiiimAUUUVSAKWkpatDEpRSUoroWxpAWiiioZugooorNloKKKKllCUUtJUsYUUUVLKCkpaKhjEopaSs2MUUUUtQZyCiiigzYUUUUEsKKKKCQpKKKBBRRRQSJRRRQSwpKWkpksKKKKpEhS0lLVAFFFFMAooopgFFFFMAooopgFFFFMAoooqkAtFFFWgCgUUVutjSAtFFFQzdBRRRWbLQUUUVLGFFFFSyhKKWkqWMKKKKljCkpaSs2MWlpKWoM2FFFFBDCiiiggKKKSgQUUUUCCiiigkKSlpKZLCkpaSglhRRS1SJCiiiqAKKKKoAooooAKKKKYBRRRTAKKKWmAUUUU0AUUUVaGFFFLW62LiFFFFQzZBRRRUMtBRRRUsoKKKKljCiiipYxKKWkqWMKKKKzYwpaSlqSGFFFFBmwooooJCiiigQUlLSUEhRRRQIKSlpKBMKSlopkMSlooqkIKKKKYBRRRTAKKKKYBRRRTAKKKKYBS0UUwCiiimgCiiirQBS0lLWy2LiFFFFQzZBRRRUMtBRRRUsYUUUVLGFFFFJjCkpaKllCUUUVmwClooqSGFFFFBDCiiigkKKKKBBSUtJQSFFFFAgpKWigQlFFFMhhRRRVIQUUUUwCiiimAUUUtMApKKKYBRS0UwCiiigAoooqgCiiiqQwpaSlrZbFRCiilqGaoKSloqWWgpKKWpGJRRRUlBRRRUsYUUUVLGFJS0lQwFoooqSWFFFFBDCiiigkKKKKBBSUtJQSFFFFMQUUUUCEooooJYUUUVSJCiiimAUUUtMAoopKYwopaKYgooooAKKKKYwooopgFFFFWgFooorVbFRClpKWoZqgoooqWUFJS0VJQlFLSUhhRRRUsYUUUVLGFJS0VLGFFFFSQwooooIYUUUUEhRRRQIKSlooEJRRRQIKKKKBCUUtJTJYUUUU0IKKKWmAUUUlMAopaKYBRRRQAUUUUwCiiimAUUUUwClpKWqQBRRRWq2KQUtJS1LNUFFFFQygooopDEpaKSpGFFFFIYUUUVLGFFFFSxhRRRUkMKKKKCWFFFFBIUUUUCCiiigQUlLSUCCiiimIKSlpKCWFFFFMQtFFFMBKKWimAUUUUwCiiigAooopgFFFFMYUUtJTAKWiiqQBRRRWi2KQtFFFSy0FFFFSUFFFFSUFFFFIYUlFFIYUUUVLGFFFFSwCiiikSwooopEhRRRQSFFFFMQUUUUCEoopaBCUUUUCCkpaKCWJS0UUwCiiiqAKKKKACiiimAUUUUAFFFFMAoopaACkpaSmAtFFFUgCiiitFsUhaKKKlloKKKKkoKKKKQwooopDCkopakYlFLSUhhRRRUsAooopEsKKKKCQooooEFFFFAgooooEJS0UUCEooooEFFFFAgoooqhBRRRTAKKKKACiiimAUUUUAFFFFMAopaKACiiimAUUUVSAKKKKtbFIKWiiky0FFFFSUFFFFIYUUUVIwpKKWkAlFLSUhhRRRUsYUUUUiWFFFFBIUUUUCCiiigQUUUUCCiiigQlFLSUxBRRRQIKKKKYgooooAKKWkpgFFFFMAooooAKWkpaACiiimAUUUUxhRRRTQBRRRVjQUtJS0mWgoooqRhRRRSGFFFFIYUlLRSGJRS0lIYUUUVLAKKKKRLCiiigkKKKKYgooooAKKKKBBRRSUCFpKWkoEFFFFAgooopgFFFFMQUUUUDCiiimAtFFFABRRRQAUUUUwCiiigAoooqkAUUUVQ0LRSUtIpBRRRSKCiiikMKKKKQBSUtFIYlLRSUhhRRRUgFFFFAmFFFFBIUUUUCCiiigQUUUUAFFFFAgooooEJRRRQIKKKKYBRRRTAKKWigBKKWimAUUUUAFFFFABRRRQAUUUUwCiiimgCiiirGgpaKSpKFooopDEpaKKQwopKWkMKSlooASlpKKQwooopAFFFFITCiiigkKKKKACiiigQUUUUCCiiigAooooEJRS0lMAooooEFLSUtMAooooAKKKKYBRRRQAUUUUAFFFFABRRRTGFFFFMAoooqgClpKKRQUUtJSGLRSUUhi0UUlIApaKSgYUtJRSGFFFFIQUUUUhMKKKKBBRRRQIKKKKYBRRRSEFFFFMAooooEFFFFABRRRQIKKKKYwooooAKKKKACiiimAUUUUAFFFFABRRRQAUUUUwCiiiqAKKKKRQUtJRSGLSUUtACUUUtIYlFFFIBaKSigYUUUUhBRRRQAUUUUCCiiigQUUUUAFFFFAgooooAKKKKACiiigQUUUUAFFFFMAooooAKKKKYBRRRQAUUUUAFFFFABRRRQAUUUUwCiiimMKKKKQwooooAKKKKQwooooAWkoopDCiiigAooopCCiiigAooooEFFFFABRRRQAUUUUCCiiigAooooAKKKKBBRRRTAKKKKACiiigAooooAKKKKACiiigAooopgFFFFABRRRQAUUUUxhRRRQAUUUUhhRRRQAUUUUDCiiikAUUUUAFFFFAgooopAFFFFABRRRQAUUUUCCiiigAooooAKKKKACiiigAooopiCiiigYUUUUAFFFFAgooooAKKKKACiiigAooopgFFFFAwooooAKKKKACiiigYUUUUAFFFFIAooooAKKKKACiiigQUUUUAFFFFABRRRQAUUUUAFFFFIAooopgFFFFABRRRQAUUUUAFFFFABRRRQAUUUUCCiiigAooooAKKKKACiiigAooooAKKKKBhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgaSlpKiZ6o8UtIKWsGYyFooopGTCiiighhRRRQSwooooJYlFLSUyWFJS0lBDEpDS0hpoykFFFFaxMwoopatAFJS0VQBRRRVAFFFFMAooopgFFLSVSEFFLRVIBKKWitYjGt0pq9Kc3SkXpXbB+4dFDcWloorKR3RCilorFloSiloqGUJRRRUMoKKKKhjEopaSs2MKSlorGYxwp1NFOrExkFFFFIxYUUUUEsKKKKCWFFFFBLCkpaSglhSUtJTIYhpDTjTTTM5BRRRWiMxaKKKtAFFFFUAUUUUxBRRRVAFLRRTAKKKKaAKKKKtAFFFFaRARulIvSlPSkFdkH7p0Udx1FFFZSO2IUUUVky0FFFFQygoooqGUJRS0VDGJRRRUMYUlLSVjIY4U6kFLWJjIKKKKDJhRRRSIYUUUUyWFFFFBLCkpaSgTCiiighiGmmnGmmmZyClpKWtEQFFFFWhBRRS1QBRRRTAKKKKoAooopgFFFFMAoooqkAUUUVpEBD0oFKelArri/dN6W4tFFFZyOyIUUUVky0FFFFQyhKKWioZQlFFFSxhSUtFZsYlFLSVlIY4UtIKWsjGQUUUtIzYlFLRQQxKKKKCWFFFFBLCiikpksKKKKCWJSGlpDTM5BRRRWiICiilqkAUUUVQBRRRTAKKKKYBRRRTAKKKKoAoopapAFFFFXEBDQKDSiuuPwm1PcKWiis5HXEKKKKyZaEopaKhlCUUUVLKCkpaKhjEoooqGMKSlorKQxRS0gpayMpC0UUUGTCiiigliUUtJQSFFFFBLCiiigliUUUUEsSkNLSUyJBRRRWiIFoooqkAUUUVQBRRRTAKKKWmISilpKYwpaKKYBRRRVIAooorSIAaBRQK6Y/Ca0xaKKWs5HUhKKWkrNloKKKKhlBRRRUsoSilpKljCiiioYwpKWkrKQxRS0CiszKQtFFFIzYUUUUEsKSlpKCQooooJCiiimSxKKWkoJYlJTqSmQxKWiirRAUUUVQBRRRVAFFFLTAKKKKYBRRRTAKKKKYBRRRVIApaKKuIxKBRSiumPwmkBaKKKzZ0oKKKKzZaCkpaKllCUUUVDKCiiipYxKKWkqGMKKKKzkMUUtJS1mZyCiiigzYUUUUEMKSlooJEopaSgQUUUUEhSUtJTJYUhpaQ0EMKKKKtEhRRRVAFLSUtUAUUUUwCiiimAUUUUwCilpKYBRS0U0AUUUVogCgUUCuhbGsBaKKKzZ0IKKKKhloKKKKhlBRRRUsYlFFFSxhRRRUMYUlLSVnIYtLSUtQZyCiiikZsKKKKCWFFFFBIUlLSUCCiiimSwpKWkoJYUlLSUyGFFFFUiQoopaoAoooqgCiiigAooopgFLRRTAKSlopjCiiiqQBRRRVoAoFFArdbGkBaKKKhm6CiiioZaCiiioZQUUUVLGFFFFSxiUUUVLKCkpaKzYBS0lLUESCiiigzYUUUUEsKKKKCQpKWkoEFFFFBLCkpaKCWJSUtJTJYUUtFUiQoooqgCiiimAUUUUwCloopgFFFFMAooopgFFFFUgCiiiqQwpaSlrdbFxCiilqGboSiilqGUhKKKKllBRRRUsYUUUVLKCkpaSpYwooorNjClooqDNhRRRQQwooooICiiigQUlLRQISiiimSFFFFAmJRRRQQxKWiirRIUUUtMBKKKKYBRS0UwCiiimAUUUUxhRRRTAKKKKaAKKKKtAFKKKK2WxcQpaKKhmyCiiipZaEopaSoYwooopMoKKKKljCiiipYwpKWkrNjFoooqSGFFFFBmwooooJCiiigQUUUUEhSUtJQIKKKKBMSilpKZDCiiiqQgooopgFLRRTAKKKKYBRRRTAKKKKYBRRRQAUUUVQBS0lLVIAooorZbFxFoooqWbIKKKKhlIKKKKllCUUtJUjCiiipYwoooqWMKSloqGMKKKKkhhRRRQQwooooJCiiigQUlLRQSFJS0lMQUUUUCEopaSglhRRRVIkKWkpaYBRRRTAKKKKYBRRRTAKKKKACiiimAUUUUxhS0lLVoAooorVbFRFoooqWaoKKKKhloKKKKkYUlLRSGJRS0lSMKKKKllBRRRUMAooopEMKKKKRDCiiigQUUUUxBRRRQSFJS0lAgooooEFJS0UEsSlpKWqQgooopgFFFFMQUUUUxhRRRTAKKKKACiiimAUUUtMAoooqkAUUUVqtikLRRRUs1QUUUVLKCiiipKCiiipGJRS0UhiUUUVLGFFFFSwCiiipJYUUUUEMKKKKCQooooEFFFFAgooooEJRRRTEFJS0lBLFooopiCiiimAUUUUwCiiimAUUUUAFFFFMBaSiimAUtFFMAoooqkMKKKWtFsUgoooqWaIKKKKkoKKKKQwoooqRhRRRSGJRRRUsYUUUVLGFFFFSQwooooJYUUUUEhRRRQIKKKKBBRRRTEJRRRQIKKKKCWFFFFMQUUUUwCiiimMKKKKYBRRRQIWiikpjCiiloAKKKKYBRRRVIAoopa0WxSCiiiky0FFFFSUFFFFSMKKKKRQUUUVIBSUtJSYwoooqWMKKKKRLCiiiggKKKKBBRRRQIKKKKBBRRRQISilooEJRRRQJhRRRTEFFFFUAUUUUAFFFLTASlopKACiiimAUtJS0AFFFFMAoooqkAUtJRVrYpC0UUUmWgoooqSgooopDCiiipGFFFFIYUUUlIYUUtJUsAooopEsKKKKCQooooEFFFFAgooooEFFFFAgpKWkoEFFFFMQUUUUxBRRRQAUUtFMBKWikpgFFFFAC0UUUwCiiigAooopjCiiimgClpKKtbDQtFFFJloKKKKkYUUUUhhRRRSGFFFFIYUUUUhiUUtJUsAooopEsKKKKCQooooEFFFFMAooooEFFFFAgpKWkoEFFFFAgooopgFFFLTEFFJRQAUUUUxi0UUUAFFFFABRRRTAKKKKYBRRRTQBRRRVjQtFFFSUgooopFBRRRSGFFFFIYUUUUgCiiikMKSloqWAlFFFAmFFFFBIUUUUCCiiigQUUUUAFFFFAgooooEJRRS0CEpaSlpgFJRS0wEopaKAEpaKKYBRRRQAUUUUAFFFFMAooooAKKKKaAKWkoqxoWiiikUFFFFSMKKKKQwooooGFFFFIYUUUUgCkpaKQBSUUUhMKKKKBBRRRQIKKKKBBRRRQIKKKKACiiigQUUUlAC0lFFMQUtFFMAooooAKKKKYBRRRQAUUUUAFFFFABRRRTGFFFFMAoooqgQtFJS0igoopKQxaKKKQwooopAFFFFAwopKWkMSilopCEooopCYUUUUCCiiigQUUUUAFFFFAgooopgFFFFAgooooAKKKKBBRRRTAKKKKBhRRRQAUUUUAFFFFMAooooAKKKKYBRRRQAUUUVQBS0UlIoWikpaQwooooAKSlopDCiikpALRSUtAxKKWikAlFFFAgooooEFFFFAgooooAKKKKBBRRRQAUUUUAFFFFAgooooAKKKKYBRRRQAUUUUAFFFFMAooooAKKKKACiiigAooopgFFFFMYUtJRSGLSUUtACUUtJSGFLSUUALRSUUhi0UlLQAlFLSUgCiiigQUUUUCCiiigAooooAKKKKBBRRRQAUUUUAFFFFAgooopgFFFFABRRRQAUUUUAFFFFABRRRQAUUUUwCiiigAooooAKKKKYwooooAKKKKQwooooAWikooGLSUUUgCiiloASiiikAUUUUCCiiigAooooAKKKKBBRRRQAUUUUAFFFFABRRRQAUUUUxBRRRQMKKKKACiiigQUUUUAFFFFABRRRQAUUUUwCiiigAooooGFFFFABRRRQMKKKKACiiikAUUUUAFFFFABRRRQIKKKKACiiigAooooAKKKKQBRRRQAUUUUwCiiigAooooAKKKKACiiigAooooAKKKKBBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAwooooAKKKKACiiigAooooAKKKKACiiigD//Z",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgaKWkqJnrDxTqaKdWDMZBRRRSMWFFFFBDCiiiglhRRRQSwpKWkoJYUlLSUyGIaQ0tIaaMpCUtFFaxMwoopa0QgooopgFFFFUAUUUUwCiiiqAKKKKaAKKKWqQCUUtFaxAY3SkXpTm6Ui9K74P3Doobi0tFFYyO+IUUtFYs0QlFFFZsoKKKKhjCkpaKhlCUUtJWbGFJTqSsZjHCnU0U6sDCQUUUUjJhRRRQQwooooJYUUUUyWFJS0lBLCkpaKCGJTTTqaaaMpBRRRWqMxaKKKtAFFFFUgCiiiqAKKWimAlFFLTAKKKKpAFFFFUgCiiitIgI3SkXpSnpQK7YP3Too7i0UUtZSO2IlFLRWTNEJRRRWbKCiiioYxKKWioZQlFFFQxhSUtJWMxjxS0gpaxMZBRRS0jFhSUUUEsKKKKCQooooJYUUUUEsSiiimQxKaadSGmZyEpaSlrRGYUUUVaAKKKKoApaKKoAooopgFFFFMAooopoAoooqkAUtFFaxAQ9KQUp6UCuuL903pbi0UUVnI7IhRRRWTNEFFFFZspBSUtFSxiUUtJUMoKSlorNjCkpaSspDHClpBS1iYyFooooMmFFFFBDCkpaSglhRRRQSFFFFAmJRRRQQxKQ0tIaZnIKKKK1RAUUtFUgCiiiqAKKKKYgooopgFFFLTGJS0UVQBRRRVIAooorSIAaQUpoFdcfhNqW4tFFFZSOuIUUUVmzRBSUtFZsoSilpKljCiiioZQlFLSVDGFFFFZSGKKWgUtZGMgooopGbCiiighhSUtFBLEooooJYUUUUyWJRS0lBLEpDS0hpmcgpaSlrREBRRRVIAoopaoBKKKKYBS0UUwCiiimAUUUVQBRRRTQBRRS1pEYhoFBpRXVH4TWnuFFLRWcjqQlFLRWbNEJRRRUMoKKKKhjCkpaKljEoooqGUFJS0lZSGhwpaQUtZGUgooooMmFFFFBLCiiigkKSlpKCWFFFFBLCkpaSmSwpKWkoIYUUUVoiAoopaoAoooqgCiiimAUUUUwCiiimAUUUUwCiilqkAUUUVpEYlKKKBXTH4TSAtFFFZyOlBRRRWbNEFFFFQykJRS0lSxhRRRUMoKSloqGMSilpKzkMUUtJS1mZSCiiigzYUUUUEsKKKKCQpKWkoJCiiiglhRRSUEsKSlpKZDCiiirRItFFFUIKKKKoYUUUUwCiiimIKKKKYwpaKKYCUtFFUgCiiirQBQKKBXRHY0gLRRS1DOlCUUtJWbLQUUUVDKQUUUVLGFJS0lSygoooqGMKSlpKzkMUUtIKWszOQUUUUGbCiiiggKKKKCQooooEJRRRTJCiiigliUlLSGghhS0lLVokKKKKpAFFFFUAUUUUwCiiigApaSlpgFFFFUAUUUU0AUUUVaGFKKSlFdC2NIBS0UVDN0FFFFZstBSUtFSyhKKKKllBRRRUMYlFLSVLGFFFFZsYtFFFQZyCiiigzYUUUUEsKKKKCQooooEJRRRQSwooooJYlIaWimSxKWiiqRIUUUVQBRRRTAKKWkpgFLRRTAKKKKYBRRRTAKKKKpAFFFFWgClFFArdbGkRaKKKhm6CiiioZaCiiioYwpKWipZQlFFFSxhSUtFSxiUUtJWbGLRRRUESCiiigzYUUUUEsKKKKCQooooEJRS0lBIUUUUyWJRS0lBLCiiiqRIUUUVQC0UUUwEopaKYBRRRTAKKKKYBRRRTAKKKKaAKWkpatDCiiit1sXEWiiioZsgoooqGWgoooqWUFFFFSxiUUtFSxiUUUVLKCkpaKzYBRRRUkMWkpaKRmxKKKKZIUUUUCCiiigkKSlpKBBRRRQJhSUtJTIYUUUVSEFLRRTEFFFFMYUUUUwCiiimAUUUUwCiiimAUUUU0AUtFFWgCiiitlsXEWiiioZsgoooqGUgoooqWUFFFFSMKKKKTKEopaSoYwoooqGAUUUVJDFpKWighiUUUUEhRRRQIKKKKCQpKWkoEFFFFAgpKWkpkMKWkpapCCiiimAUUUUwCiiimAUUUUwCiiimAUUUUAFFFLVAFFFFUhhRRS1stiohRRRUM1QUUUVLLQUUUVJQUUUVIwoooqWMKSloqWMSilpKhjClpKWpIYUUUUEMKKKSgkKKKKBBRRRTJCiiigQlFLSUCCkpaKCWJS0UVSJCiiimAUUUUwCiiimAUUUUwCiiigYUtJS0wEpaSlpgFFFFWgClpKWtVsVEKKKKhmqCiiipZSCiiipKCiiikMKKKKkYUUUVLGJRS0lQxi0UUUiGFFFFBDCkoooJCiiigQUUUUCCiiigQUlLSUCCiiimSwooopoQUUUUwCiiimAUUUUwCiiigAooopgLRRSUwCloopgFFFFUhhS0lLWq2GgoooqWaoKKKKhlBRRRSGFFFFSMKKKKQwoooqWMKSloqWMKKKKklhRRRQQwpKWigkKSlpKBBRRRQIKKKKYgpKWkoEFFFFBLCiiimIKKKKYBRRRTAKKKKYwoopaBCUtFFMAopKWmMKKKKYBRRRVIApaSlrRbFIKKKKlloKKKKllBRRRUlBRRRSGFFFFIYUUUVLGFFFFSwCiiikSwooooJCkpaSgkWkoooEFFFFAgooooEFJS0UCEooooEwooopiCiiiqAKKKKACiilpgJS0UUAFFFJTAWikpaACiiimAUUUVSAKWiitFsUgoooqWWgoooqSgooopDCiiikMKKKKkYUUUUhhRRRUsAooopEsKKKKCQpKWigQlFLSUCCiiigQUUUUCCiiigQlFFFMQUUUUxBRRRQAUUtFMBKWiimAUUUlAC0UUUwCiiigAooopgFFFFNDFooorRbDQUUUVLLQUUUUhhRRRUlBRRRSAKKKKQwooopDCiiipYBRRRSEwooooJCiiigkKSiigAooooEFFFFMQUUUUCCkpaSgQUUUUxBS0lLTAKKKKACiiimAUUUUDCiiigAooopgFFFFMAooopoBaKKKtDQUUUUi0FFFFSMKKKKQwooopDCiiikMKKKKQBRRRUjCiiiglhRRRQSFFFFAhKKWkoEFFLSUAFFFFAgooooEFJS0UCEpaKKYBRRRTAKSlooASloopgFFFFABRRRQAUUUUwCiiigAoopaaAKKKKsaCiiikUFFFFIoKKKKQBRRRSGFFFFIYUUUUhhRRRUgFFFFBLCiiigQUUUUCCkoooELSUtJQIKKKKACiiigQUUUUAFFFFMQUUUUwCiiigAooopgFFFFABRRRQAUUUUAFFFFMAooopgLRRRVDQUUUUigooopDCiiikMKKKKQwooooAKKKKQwooopAFFFFITCiiigkKKKKBCUUUUALSUtJQIKKKKYBRRRQIKKKKACiiigQUUUUwCiiigYUUUUAFFFLTEJRRRQAUUUUDCiiimAUtFJQAtFFFUAUUUUigooopDCiiigAooopDCiiigAooopDCiiikAUUUUCCiiigQUUUUCCikpaACiiigQlFLSUAFFFFABRRRQIKKKKACiiimAUUUUAFFFFABRRRTAKKKKACiiigApaSigBaSlopgFFFFMYUUUUDCiiikAUUUUhhRRRQAUUUUhhRRRQAUUUUgCiiigQUUUUCCiikoAKWkpaACiiigQUlLSUAFFFFABRRRQIKKKKYBRRRQAUUUUAFFFFABRRRQAUUUtMBKKWigBKWiigAooooASlpKWmMKKKKACiiikMKKKKACiiigYUUUUgCiiigAooopAFFFFAgoopKACiiigApaKKBBRRRQAUlLSUAFFFFABRRRQAUUUUwCiiigAooooEFFFFABRRRQAUUUUALRRRQAUUUUwCiiigAopKWgYUUUUAFFFFAwooooAKKKKQBRRRQAUUUUAFFFFABRRSUCFooooAKKKKACiiikAUUUUAFFFFMAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAEpaKKACiiigAoopKAFopK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FLSUCCiiigQUUUUCCiiigQUUUUxBRRRTAKKKKYBRRRTAKKKKACiiimAUUUUAFFFLTASlpKWqQBRRRVrYpBRRRSZaFopKKkoKKWkpDFpKKKkYUUUUhhRRRSGFFFFSwCiiikSwooooJCiiigQUUUUCCkpaSgQUUUUCCiiimIKKKKBBRRRTEFFFFMAooooAKKKKYBRRRQAUUUUDCiiimAUUUUwClpKWmgCiiirGgooopMtBRRRUjClpKKQwooopDCiiikMKKKKQwoooqQCiiiglhRRRSJCiiimIKKKKBBSUtFACUUUUCCiiigQUUUUCCiiimAUUUUwCiiigAooopgFFFFABRRRQAUUUUwCiiigApaKKpAFFFFUNBRRRSZQUUUUigooopDCiiikAUUUUhhRRRSGFFFFSAUUUUCYUUUUEhRRRQIKKKKBBRRRQAlFFLQISiiigQUUUUCCiiimAUUUUwCiiigAooopgFFFFABRRRQAUtJS0AFJRRTAKWiimgCiiiqGgooopFBRRRSGFFFFIYUUUUhhRRRQAUUUUhhRRRSAKKKKQmFFFFBIUUUUAFFJS0CCiikoEFFFFABRRRTEFFFFABRRRQIKKKKYBRRRQAUUUUDCilopiEpaKKACiikoGFFFFMBaKKKYBRRRTAKKKKCgooopDCiiikMKKKKQBRRRQMKKKKQBRRRSAKKKKBBRRRQIKKKKBBRRRQAUUUUCCkpaSgApaSloASiiigQUUUUAFFFLTASilooASilooAKKKKACikopgFFFFABS0lLQAUUUUwCiiimMKKKKBhRRRSAKKKKQwooooAKKKKQwooooAKKKKQBRRRQIKKKKBBRRRQAUUUUAFFFFAgpKWkoAKKKKAFpKKWgQlFFFAC0UUlMBaKSigBaSiigAooooAKKWimAlFLRQAUUUUAFFFFABRRRTGFFFFABRRRSGFFFFABRRRQMKKKKQBRRRQAUUUUgCiiigQUUUUAFFFFABRRRQIKKKKACkpaKAEooooAKKKKACiiimAUUtFACUUtFAhKKWigBKKWigBKWiigAooopgFFFFABRRRQAUUUUDCiiigAooooGFFFFABRRRSAKKKKACiiigAooooAKKKKBBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFF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EBRRRQIKKKKBBRRRQISiiigQUUUUCCiiigQUUUUxBRRRTAKKKKYBRRRTAKKKKACiiimAUUUUAFFFLTAKKKKpAFLSUVa2KQtFFFJloKKKKkoKKKKQwoooqRhRRRSGFFFFIYUlLRUsAoopKRLCiiigkKKKKBBRRRQIKKKSgQtJS0lAgooopiCiiigQUUUUxBRRRTAKKKKACiiimAUUUUAFFFFABRRRTGFLRRTEFFFFNDCiilq0NBRRRSZaCiiipGFFFFIYUUUUhhRRRSGFFFFIYUlLRUsBKKKKRLCiiigkKKKKBBRRRTEFJS0UAFJS0lAgooooEFFFFAgooopgFFFFMAooooAKKKKYBRRRQAUUUUAFFFFMBaKKKACiiiqQBS0lFUNC0UUUmUFFFFIoKKKKQwooopDCiiikAUUUUhhRRRUgFJS0lAmFFFFBIUUUUCCiiigQUUUUAFJS0UCEopaSgQUUUUCCiiimAUUUUAFFFFMAooopgFFFFABRRRQAtFFFMAooooAKKKKYBRRRVDQtFFFIoKKKKQwooopDCiiigYUUUUgCiiikMKKKSkAUUUUhMKKKKCQooooAKKKKBBRRRQISlpKWgApKWkpiCiiigAooooEFFFFMAooooAKKKWgBKWiimAUUUUAFFFFABSUtFMYUUUUwCiiiqAWiiikUFFFFIYUUUUhhRRRSAKKKKBhRRRSAKKKSkAUUUUhBRRRTEFFFFAgooooAKKKKBBRRRQAUUUUCEopaSgAooooAKKWimAlFLRQAlFLRQAUUUUwCiiigAoopKAFopKWgAooopgFFFFUMKWkopDFooopAFFFFIYUUlFAC0UUUhhRRRQMKKKSkIKKKKBBRRRQIKKKKACiiigAooooEFFFFABRSUtABSUtFAhKKWigAooopgFFFFABRRRQAUUlLQAUUUUwCiiigAooooAKKKKACiiimMKKKWgBKKKKQwpaSigYtFJRQAtJRRSAKKWigYlFFFIQUUUUCCiiigAooooAKKKKBBRRRQAUUUUAJRS0UwCiiigAooooAKKKKAEopaKBCUUtFACUtFFABRRRQAUUUUwCiiigAooooAKKKKYwooopAFFFFAwpaSigAooopAFFFFABRRRQAUUUUAFFFFAgooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK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hRRRUsAoooqSWFJS0lBIUUUUyQooooEFFFFAgooooEFJS0UCEooooEFFFFMQUUUtMAoopKYBRRS0wEpaKKACiiimAUUUUAFFFFMAoooqkAUtJS1otikFFFFSy0FFFFSUFFFFIYUUUUhhRRRUjCiiikxhRRRUsAooopEsKSlpKCQooooEFFFFAgooooEFFFFAgooooEJRRRTEFFFLTEFJRRTAKKWigBKWiimAUUUUAFFFFABRRRTAKKKKYBRRRTQwpaSlrRDQUUUVLLQUUUUhhRRRUjCiiikMKKKKQwooopDCiiipYBRRRSEwoopKCAooooEFFFFABRRRTEFFFFAgooooEJRS0lAhaSilpiEpaKKYwooooAKKKKYBRRRQIKKKKBhRRRTAKKKKYBRRRTQBS0lLVjQUUUVLKCiiikUFFFFIYUUUUhhRRRSGFFFFIAoooqQCiiigTCkpaSgkKKWkoEFFFFAgooooAKKKKBBRRRQIKSlooEJS0UUwCiiigAooopgFFFFABRRRTAKKKKACiiimAUUUUAFFFFMApaSlqxoKKKKRQUUUVIwooopDCiiigYUUUUhhRRRSAKKKKQBRRRSEwopKWgQlFFFAgooooEFFFFABRRRQIKKKKYgooooAKKKKBBRRRTAKKKKACiiigAooopgFFFFABRRRQAUUUUwCiiimMKWkpaoAooopFBRRRSGFFFFIYUUUUgCiiigYUUUUhhRRRSEFFFJSEFFFFAgooopiCiiigAooooEFFFFABRRRQIKKKKACiiigAooopgFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiimAUtJS1QBRRRSKCiiikAUUUUhhRRRQMKKKKQBRRRQMKKKKQgooooEFJRRQAUUUUCCiiigAooooEFFFFABRRRQAUUUUCCiiigAooopgFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiigApaSiqGLRRRSAKKKKBhRSUUhi0UUUAFFFFIAooooGFFFJSELSUUUCCiiigAooooAKKKKACiiigQUUUUAFFFFMAooooAKKKKACiiigAooooEFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiimMKWkopAFLSUUDFopKKAFoopKQC0UlLQAlLRRQAlFFFABRRRQIKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig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LYaClpKWpZogoooqSwoooqRhRRRSGJRS0lIYUUUVLGFFFFSxhRRRUkMKKKKCQooooJCiiimISiiigQUUUUCCiiigQlFLSUEsKKKKYgoopaYwooopgFFFFMAooooAKKKKYBRRRQAUUUUwClooqkAUUUVotikFLSUtSy0FFFFSUFFFFIYUUUUhiUUUtSMSiiikxhRRRUsYUUUUiWFFFFBAUUUUCCiiigQlFLRQISilpKBBRRRQIKSlpKYgpaSlpiCiiigAooopgFFFFMAooooAKKKKYBRRRQAUtJRTAKWiiqQwoooq1sNBS0lFJloWiikqRi0UUVJQUUUlIYtJRS0hiUUtJSAKKKKljCiiikSwooooJCiiigkKKKKACkpaSgQtJS0lMQUUUUCCiiigQUUUUxBRRRTAKKKKBhRRRTAKKKKBBS0lFABRRRTGFLSUtMBKWiimgCiiirGgooopMpBS0UlSULRSUtIYlLRSUhi0lFFIYUUUUhhRRRUgFFFFBLCiiigkKKKKBBRRRQIKKKKACkpaSgQUUUUCCiiigQUUUUwCiiimAUUUUAFFFFABS0lFMAooooAKKKWmAlLRRQAUUUU0AUUUVY0FFFFIoKWkoqSgoopaAEooopDFpKKKQwooopDCiiikIKKKKQmFFFFAgooooEFFFFAgooooAKKKKBCUUUUxBRRRQAUUUUCCiiimAtFJRQAUUUUAFFFLTASilooASloooAKKKKYBRRRTGFFFFUAUUUUigooopDCiiikMKKKKQBRRRQMKKKKQwooopCCiiikIKKKKBBRRRTEFFFFABRRRQAUUUUCEopaKBCUUUUAFFFFAgooopjCiiigAoopaACiiimAUUUUAFFFFABRRRQAUUUUwCiiiqAKKKKRQUUUUhhRRRQAUUUUhhRRRSAKKKKBhRRRSEFFFFAgooooAKKKKBBRRRQAUUUUCCiiigAooooEJRS0lABRRRTAKWiigAooooAKKKKACiiimAUUUUAFFFFABRRRQAUUUUwCiiimMKKKKQBRRRQMKKKKQwooooAKKKKQBRRRQMKKKKQgooooAKKKKBBRRRQAUUUUAFFFFAgooooAKKKKACiiigQUUUUwCiiigAooooAKKKKACiiigAooopgFFFFABRRRQAUUUUAFFFFMYUUUUgCiiigYUUUUAFFFFIAooooAKKKKBhRRR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MAopaSmAtFFFUhhRRRWq2GhaKKKlmiCiiioZYUUUUhhRRRUjCiiikMKSloqWUJRRRUsAoooqSWFFFFBDCiiigkKKKKBBRRRTEJS0lLQISiiigQUUUUEsKKKKYgooopgFFFFMYUUUUwCiiigQUUUUxhRRS0AFJS0lUAtFFFNAFFFFaLYpC0UUUmWgoooqSgoooqRhRRRSKCiiipGFJS0UmMSilpKlgFFFFIlhRRRQQFFFFAgooooEFFFFAhKKWigQlFFFAgooooEFFFFUIKKKKYBRRRQAUUUUwCiiigAooopgFLRRQAUUlLTAKKKKpAFFFFWtikLRRRSZaCiiipKCiiikMKKKKkYUUUUhhRRRSGFJRRUsAooopEsKKKKCQooooEFFFFAgooooEFJS0lAhaSlpKYgooooEFFFFMQUUUUAFFFFMYUUUUwCiiigQUtFFABRRSUwFooopjCiiimgClpKKsaFooopMtBRRRUjCiiikMKKKKQwooopDCiiikMKSlpKlgFFFFIlhRRRTJCiiigQUUUUCCiiigApKWigQUlLRQISiiigQUUUUwCiiimAUUUUAFFFFAC0UUUwCiiigApKWimAUUUUAFFFFUgCiiiqGhaKSlpFBRRRSKCiiikMKKKKQBRRRSGFFFFIYUUUlIAooopEsKKKKBBRRRQIKKKKBBRRRQIKKKKACiiigQlFLSUAFFFFMQUUUtMAooooAKKKKACiiimAlFLRQAUUUUAFFFFMAooopoYUUUVQBRRS0igopKKQxaKKKQwooopDCikpaACiiikMSiiikIKKKKQMKKKKCQooooEFFFFMAooooEFFFFABRRRQIKSlooAKKKKBBRRRTAKSlooGJS0UUAFFFFMAooooAKKKKACiiigAooopgFFFFUAUUUUigpaSikMKKKWgBKKKKQxaKSikAtJRS0DEooopCCiiigAooooEFFFFAgooooAKKKKACiiigQUUUUCCiiigApKKWgAooopgFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiimAUUUUxhRRRSAKKKKBhRRRSGFFFFABRRRSAKKKKBhRRRSEFFFFABRRRQIKKKKACiiigAooooEFFFFABRRRQAUUUUCCiiimAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUwCiiigAooopjCiiikAUUUUDCiiigAo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KKKKYBRRRTAKKKKYBRRRQAUUUUwCilpKYC0UUUwCiiiqQwpaSlrVbDQUUUVLNUFFFFSykFFFFSMKKKKkoKKKKQwoooqWMKKKKhgFFFFIlhRRRQQwpKWkoJCiiigQUUUUCCiiigQlFFFMQUUUUEsKKKKYgooopgFFFFMAooopjCiiloEJRS0lMApaSlpjCiiimAUUUVSAKWkpa0WxSCiiipZaCiiipZQUUUVJQUUUUhhRRRUjCiiikxhRRRUsAooopEsKKKKCQpKKKCQooooEFFFFAgooooEJRS0UCEooooJYUUUUwCiiiqAKKKKACiilpgFFFJQAUUUtMAooooAKKKKYBRRRVIApaSlrRbFIKKKKlloKKKKkoKKKKQwoooqRhRRRSGFFFFIYUUUVLAKKKKRLCiiigkKSlpKBBRS0lAgooooEFFFFAgoopKYgooooEFFFFMQUUUUAFLRRTAKSiimAUUUtABRRRQAUUUUwCiiimMKKKKaAKWkpatDQUUUUmWgoooqRhRRRSGFFFFIYUUUUhhRRRSGFFFFSwCiiikSwooooJCkpaKYhKKKKBBRRRQAUUUUCCkpaKBCUUUUCCiilpgJS0UlMQtJRRQMKKWimAUUUUAFFFFABRRRTAKKKKACiiiqQC0UUVQ0FFFFJlBRRRSKCiiikMKKKKQBRRRSGFFFFIYUUUVIBRRRQSwooooEFFJS0CCkoooEFFFFAgooooAKKKKBBRRRQAUUlFMQUtJS0wCiiigAooooAKKKKYBRRRQAUUUUAFFFFMAooopoYtFFFUCCiiikUFFFFIYUUUUhhRRRSGFFFFABRRRSGFFFFIAooopCYUUUlBIUtFJQIKKKKACiiigQUUUUwCiiigQUUUUAFFFFAgooopgFFFFAwooooAKKKKYBRRRQAUUUUAFFFFMAooooAWiiiqAKKKKRQUUUUhhRRRQAUUUUhhRRRSAKKKKBhRRRSEFFFFABRRRQIKKKSgQUUUUAFLSUtAhKKKKACiiigAooooEFFFFABRRRTAKKKKACiiigAooopgFFFFABRRRQAUUUUALSUtJTAWikpaYwooopDCiiigAooopDCiiigAooopDCiiigAooopCCikpaACiikoEFFFFABRRRQAUtJS0CEooooAKKKKACiiigQUUUUwCiiigAooooAKKKKACiiigAooooAWikooAWiiimAUlLSUDClpKWmAUUUUgCiiigYUUUUAFFFFIAooooAKKKKBhRSUUCFopKKACiiigQUUUUAFFFFABS0lFABRRRQAUUUtACUUtFACUUtFACUUtFACUUtFACUUtJQAUUUUCClpKKAFopKKBi0UlFABRRRQAUUUUwFopKKQC0UlFAC0UlFAC0UlFAC0UlFAC0UlFAH/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDiKTvS0nes6mx7yJVp1NWnVys5pi0UUUjnYUUUUjNhRRRQQxKKWkpksKKKKCGJSUtJTM2IaaacaaaaMZiCloFFdETEKKKWtUIKKKKpAFFFLVAJRS0lUgCilopgJS0UVSEFFFFWgCiiit4DsMf7ppqDinv0pFHFelTf7s68LoxcUUtLWE2epFiUUtFc8mapiUUtJWTLTEopaKzZVxKKWioY7iUlLRWUikFJ3p1J3rmqbAh4p1IKdXMznmFFFFIwYUUUUGbCiiighhSUtFBLEooooIYlFLSUzNiGmGnmmmmjGYgoopa3iZBRRS1qhCUtFFUgCiiiqAKKKKYBRS0lUgCiloqkAlLRRVoAooorWAWGt0pFHFObpSL0r0ab9w6sPuLS0UtYTZ6UWJRS0VjI1TEpKWismWmJRS0VmykxKSnUlZsdxKKWkrORSYUnenUneueY0PFOpop1c7OeYUtJS0jBhSUtFBDEopaSghhRRRQQxKKWkoJYUlLSUzNiGmmnGmmmjKQUUUtbRMgooorRAFFFLVoBKKWimIKKKKoAooopgFFLSVSGFFLRVoAooorWICHpSL0pT0oWvQg/cOmhuLS0UVhJnoREopaKxZohKKWis2WhKSlorNlISilorNlCUlLRWbKQUnelpKwmCHilpBS1gYTFooopGLCiiigzYUlLRQSxKKKKCGFJS0UEsSkpaSmZsSkNOpppoykJS0UVrEzCiilrRAFFFFUgCiilqgEopaKYCUtFFUAUUUVSAKKKKpAFFLRWsQENAoNArug/cOijuLS0UVlI7ohSUtFYs1QlFLRWbLQlFFFZspCUUtFQxiUlLRWbKQlFLSVhMaHClpBS1gYTFooooMWFFFFBDCiiighiUUtJQSwooooJYlFFFMzYhppp1NNNGcgoopa1RmFFFLVoBKKKWqAKKKKoAooopgFFFFMAoopapAJS0UVaAKKKK0iAhpRQaBXbB+6b0txaWiispHbESilorFmqEopaSoZSCiiis2UJRS0lQykFJS0VmykJSU6krGY0KKdSClrExkFFFFBiwooooM2FFFFBLCkpaSglhRRRQQxKKKKZLEpDS0hoMpBRRRWqIClooq0AUUUVQBRRRTAKKKKoBaSlopgFFFFUgCiiiqQBRRS1rEBDSikpRXXF+6bUtxaKKKykdkQooorJmqCiiioZSEopaKhlISiiioZSEopaSs2UgpKWkrGQ0OFLSClrIxkFFFFIxYUUUUEMKKKKCWFFFFMliUUUUEMSilpKCWIaQ0tIaZlIKWkpa0RAUUUVaAKKKWqASiilpgFFFFMAoooqhhRRRTQBRRRVIBaKKK1iAUCigV1x+E2p7i0UUtZSOqIUlLRWTNUJRRRUMpBRRRUMpBSUtFQyhKSlorNjQlFLSVlIaFFLSClrMykFFFFIyYUUUUEMKKKKCGFFFFBLEooopksKSlpKCWFNNOpKZnISlooq0QFFFLVoApKWiqAKKKKYBRRRTAKKKKYBRRRVIBaKKKpAFFFFaRGFKKSlFdUfhNaYtFFFZyOqIUUUVkzRBSUtFQykJRS0lQygoooqWUJRS0lZsaCkpaKykNC0UCiszKQUUtJQZMKKKKCGFFFFBLCiiiglhSUtJQSwpKWimSxKSlpKDNhRRRVokWiiirQBRRRVAFFFFMAooopgFFFLTASlpKWmAUUUVSAKKKWtIjEpRRQK6o/CaQFooorOR0xCiiismaIKKKKhlIKKKKllCUUtJUMoKKKKhjEopaSspDQtFFFQZyFooopGTEooooIYUUUUEsKKKKZIUlLSUEsKKKKCWJSUtJTIYUtJS1aICiiiqAKKKKYBRRRVAFFFLTAKKKKYwooopgFFFFUgCloorSIBQKKBXRHY0gLRRRWbOhBRRRWbNEFFFFSygoooqGUFJS0VLKEoooqGNBSUtFZSGgpaSlqDOQUUUUGTCkpaSglhRRRQSwooooJYUlLSUEhRRRTJYlFFFBDCiiirRIUUUVQBRRRTAKKKWqAKKKKYBRRRQAUUUVQBRRRTQC0UUVohhSikpa6FsXEKKKKzZ0IKKKKhloKKKKhloKKKKljQUUUVDKCkpaSpY0FFFFZMaClpKWpM5BRRRSM2FJS0UEMSiiimIKKKKCQooooJYlFFFBLEopaSmQwoooqkIKKKKoApaSlpgFFFFMAooopgFFFFMAooopgFLRRVIAoooq0AUtJS1utjSIUtJS1DNkFFFFQzRBSUtJUMoKKKKljCiiipZQUlLRUMYlFLSVDGFLRRUGcgooooM2FFFJQSwooooJCiiigQUUUUEsKSlpKZLCkpaSglhRRRVIkKKKWqAKKKKYBRRRTAKKKKYBRS0UwEpaSlpgFFFFUhhRRRVIApaSlrdbFxClpKWoZsgoooqGWgoooqWUJRRRUsYUUUVLKCiiioYwpKWkqGMWiiipIYUUUUjNhRRRTJYlFLSUEhRRRQSFFFFAgpKWkoJYUlLRTJYlFFLTQgoooqgCiiimAUUUUwCilopgFJS0lMBaKKKYBRRRTQBRRRVoApaKK2WxcQpaSlqGaoKKKKhloKKKKllBSUtJUsoKKKKljCiiipYwoooqGMKKKKkhhRRRQZsKKKKCRKKWkoEFFFFBIUUUUCCiiimSJRRRQSxKWiiqQgooopgFFFFMApaKKYBRRRTAKKKKYBRRRQAUUUVQwoooqkAtFFFarYqIUtJS1LNUFFFFQy0FFFFSMKKKKTKEoooqWMKKKKljCiiioYwooopEMKKKKCGFFFFBIUlLSUCCiiigkKKKKBBRRRQISiiiglhRRRVIQUUUUwFooopgFFFFMAooopgFFFFABRRRTAKKKKYBRRRVIBaKKK1WxSClooqWaoKKKKllIKKKKkoKKKKkYUlLSUhhRRRUsYUUUVDGFFFFIhhRRRQQwooooJCkpaSgQUUtJQIKKKKBBRRRTEFJS0lBLCiiimhBS0UUwCiiimAUUUUwCiiigAooopgFFFFMAooopjCiilqkAUUUVothoKWkpalmiCiiipZQUUUVJQUUUUhhSUtFIYlFFFSxhRRRUsYUUUVJDCiiimSwooooJCkpaSgQtJRRQIKKKKBBRRRQIKSlooJYlLSUtMAooopgFFFFMAooopgFFFFABRRRTAKKKKACiiimAUUUtUgCiiitFsUgpaSipZaFoooqSkFFFFIYUUUlIYUUUtSMSiiikxhRRRUsAooopEsKKKKCQooooEFJS0lAgopaSgQUUUUCCiiigQUUUUxBRRRTEFFFFABRRRTAKKKKYBRRRQAUUUUwCiiigAooopgFLSUtNDCiiitFsNBRRRUstBRRRSGLRSUtSMKKKSkMWkoopDCiiikMKKKKlgFFFFITCiiiggKKKKBBSUtFMApKWkoEFFFFAgooooEFFFFAgooopgFFFFMQUUUUDCiiimAUUUUAFFFFABRRRTAKKKKAClooqkAUUUVY0FFFFSygooopFBRRRSGFFFFIYtJRRSAKKKKQwoooqQCiiigTCiiigkKKKKBBRRSUCFoopKACiiigQUUUUCCiiigQUUUUwCiiimAUUUUAFFFFMAooooAKKKKAClpKKACiiimAUtFFNAFFFFUNBRRRSKCiiikMKKKKQwooopDCiiigAooopDCiiikAUUUUhMKKKKCQooooEFJRS0AFJS0lAgooopgFFFFAgooooAKKKKBBRRRTAKKKKBhRRRQAUUtFMQUUUlABRRRQMKKKWmAUUUUAFFFFUAUUUUigooooGFFFFIAooopDCiiikMKKKKACiiikAUUUUCCiiigQUUUUCCikpaACiiigQUlLSUAFLSUUAFFFFAgooooAKKKWmAlFFFABRRRQAUUUUwCiiigAooooAKWkpaACiiimAUUUUxhRRRSGFFFFABRRRSGFFFFABRRRSGFFFFABRRRSEFFFFABRRRQIKSiigApaKKBBRRRQAUlLSUAFFF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FJRRUMAoooqSGFFFFBDCiiigkKKKKBBSUtJTJCiiigQUUUUCYUlLSUEsKKKWqJEpaKSmMWiiimAUUUUwCiiimAUUUUAFFFFMAooopgFLSUtWgClpKWtVsUgoooqGaoKKKKllIKKKKkoKKKKkYUUUUhhRRRUsoKSlpKhgFFLSUiGFFFFBDCiiigQUUUUEhSUtFAhKKWkoEFFFFMQUlLSUEsKWikpoQtFFFMAooopgFFFFMAooooAKKKKYBRRRTAKKKKYxaKSlqkAUtJS1othoKKKKlmiCiiipZaCiiikMKKKKkYUUUUhhRRRUsoKSloqWAUUUlSQwooooJYUUUUEhRRRTEFFFFAgpKKKBBRRRQIKKKKCQooopgFFFFMAooopgFFFFMAooooAKKKKYBRRRQAUtJRTAWiiiqQBS0lLWi2KQUUUVLLQUUUVJQUUUUhhRRRSGFFFFSMKKKKTKCiiipYBRRRSJYlFFFBAUUUUCCiiigQUUUUCEopaSgQUUUUCCiiimIKKKKYgooooAKKKKYBRRRTAKKKKACiiigAooopgFLSUtMAoooqkMKWkpatbDQUUUVLLQUUUUhhRRRUlBRRRSGFFFFIYUUUUhhRRRUsApKWkpEsKKKKCQooooJCiiigApKWimIKSlpKBBRRRQIKKKKBBRRRTAKKKKYgooooGFFFFMAooooAKKKKACiiimAtFFFMAooopoApaSlqxoKKKKTKCiiipKCiiikMKKKKQwooopDCiiikAUUUVIBSUtFAmJRRRQSFFFFAgooooEFFFFABSUtFAhKKKKBBRRRQIKKKKYBRRRTAKKKKACiiimAUUUUAFFFFAC0UUUwCiiigAooopgFLSUtWMKKKKRQUUUVIwooopDCiiigYUUUUhhRRRSAKKKKQBSUUUhMKKKKCQooooAKKKKBBRRRQISloooAKSlopiEooooAKKKKBBRRRTAKKKKBhRRS0AFFFFMQUUUUAFFFFABSUtFMYUUUUwCiiimAtFFFBQUUlLSGFFFFIAooopDCiiikMKKKKACiiikAlFFFAgooooEFFFFAgooooAKKKKBBRRRQAUUUUAFJS0lAgooooAKWiimAUUUUAFFFFABRRRQAUUUUwCkpaKACiiigAooopgFFFFMYUtJRQMWikopALRSUtIYlLRRQAUUUlIYtFJS0AFJRRSEFFFFABRR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FFFWhi0UUVstioi0UUVDNUFFFFQy0FFFFSygoooqWUFFFFSxhSUtJUsYUUUVDGFFFFSQwooooM2FFFFBIUUUUCEopaSgkKKKKYgooooJEooooJYUUUVSEFFFFMAooopgLRRSUwCilopgFFFFABRRRTGFFFFUAUUUVSAWiiitVsUhaKKKlmqCiiioZSCiiipZQUUUUigoooqWMKSloqWMSiiioYwooopEMKKKKCGFFFFBIUUUUEhSUtJQIKKKKBBRRRQJiUUUUyWFFFFMQUUUtMAoopKYBRS0UwCiiigAooopgFFFFMAooopgFLRRVIYUUUVqthoWiiipZogoooqWWgoooqRhRRRUlBRRRSGFFFFSxiUUUVDGFFFFIhhRRRQQwooooJCiiigQUUUUCEooopiCiiigQlFLSUEsKKKWmIKKSimAtFFFMAooopjCiiigQUUUUwCiiimMWkoopgFLRRVIAooorRbFIWiiipZaCiiipZQUUUVJQUUUUhhRRRUjCiiikxhSUtJUsAooopEsKKKKCAooooEFFFFAgooooEJRRRQIKKKKBBRRRQISlpKWmIKKKKYBRRRTAKKKKYBRRRQAUUUUwClpKWgBKKKWmAUUUVSAKKKKtbFIWiiiky0FFFFSUFFFFIYUUUVIwooopDCiiikMKSlpKlgFFFFIlhRRRQSFFFFAgooooEFFFFAgpKWkpiCiiigQUUUUCCiiimIKKKKACiiimMKKKKYBRRRQIKWkpaACkoopjClpKWmAUUUU0AUUUVY0FLRSUmUhaKKKkoKKKKQwooopDCiiikMKKKKQwpKWkqQCiiiglhRRRQSFFFFAgooooEFFFFABSUtFAhKKKWgQlFFFAgooopgFFFFMAooooAKKKWgBKWiimAUUlFABRS0UwCiiigAooopoAoooqxoKWkopFBS0UVIwopKWgYUUUUhhRRRSGFFJS0hiUUUUhBRRRSEwooooJCiiigAooooEFFFFAgooooASiiimIKKKKACiiigQUUUtMAoopKAFopKWgApKWimAlFLRQAUUUUAFFFFMYUUUUwCiiiqAKKKKRQUUUUhi0UlFIYUtJRSAKWikpDFopKKBhRRRSEFFFFAgooooEFFFFAgooooAKKKKBBRRRQAUUUUCEpaKSgBaKSigBaSlopgJRS0UAJS0UUAFFFFMAooooAKKKKAC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FFFFMAooopoBaKKKtAFLSUtbLYuIUUUVLNUFLSUVmy0FFFFSygoooqWUFFFFSxhRRRUsoSilpKhgFFFFSQwooooM2FFFFBIUUUUCCiiigkSilpKBBRRRTJCkpaSglhRRS1SEFFFFMAooopgFFFFMAooopgFFFFMAooooAKKKWqGFFFFUgClpKWtlsVEKKKKhmqCiilqWWgpKKKkaCiiipZQUUUVLGFFFFSygpKWkqGAUtFFSQxKKKKCGFFFFMkKKKKBBRRRQSFJS0lAgooooEFJS0UEsSlooqkIKKKKYBRRRTAKKKKYBRRRTAKKKKACilpKYBS0lLTAKKKKtAFLSUtaLYpBRRRUs1QUUUVLKQUUUVJQUUUVIwooopDCiiipZQUUUVDAKKKKRDEooooIYUUUUEhRRRQIKKKKBBRRRQISiiimIKKKKCWFFFFMQUUUUwCiiimAUUUUwCiiigAopaKYCUUUUxi0UUUwCiiiqQBS0lLWi2GgoooqWaIKKKKllBRRRUlBRRRSGFFFFSMKKKKTGFFFFSxhRRSVJDCiiimSFFFFBIUUUUCCiiigQUUUUCEooooEFFFFBLCiiimAUUUUwCiiimAUUUtMBKWikoAWkoopgFLRRQAUUUUwCiiiqQBS0lLWi2KQUUUVLLQUUUVJQUUUUhhRRRUjCiiikMKKKKQwoooqWAUUUUiWJRRRQSFFFFAgooooEFFFFAgooooEFJS0lMQUUUUCCiiimIKKKKACilopgFFJRTAKKWigAooooAKKKKYwooopgFFFFNAFLSUtWhoKKKKTLQUUUVIwooopDCiiikMKKKKQwooopDCiiipAKKKSglhRRRQSFFFFAgooooEFFFFABRRRQIKSlooEJRRRQIKKKWmAUUlFMAopaKAEopaKYBRRRQAUUUUAFFFFMAooooAKKKKpAFLSUtUNBRRRSKCiiikUFFFFIAooopDCiiikMKKKKQwooopCCiikpCYUUUUCCiiigQUUUUCCiiigQUUUUAFFFFAgoopKYC0lLRQISloopgFFFFABRRRTAKKKKACiiigAooooAKKKKYwooopgFFFLVAFFJS0igooopDCiiikMKKKKQBRRRQMKKKKQwooopCEooooEFFFFAgooooEFFFFABRRRQIKKKKACiiigQUUUUAFFFFABRRRTAKKKKACiiigAooopgFFFF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KBBRRRTEFFFFMAopaKYCUtFJTAWikooAKWiimAUUUUAFFFFMAoooqkMWiiirGgooopMtBRRRUjClpKKRQtJRRUjFpKKKQwooopDCiiipYrhRRRSEwooooJCkpaSmSFFLSUCCiiigAooooEFJS0UCEooooEFFFLTASloopiCiiigYlFLRTAKKKKACiiigAooopgFFFFABRRRVIBaKKKq40FFFFJlIKKKKRQUUUUhhRRRSGFFFFIAooopDCiiikK4UUUUhMKKKKBCUtJS0CEooooEFFFFAgooooAKKKKBBRRRTAKSlooEJS0UUwCiiigAooooAKKKKYBRRRQAUUUUDCiiimAUUUUwFoooqrgFFFFIoKKKKQwooopDCiiikAUUUUDCiiikO4UUUUibhRRRQAUlLRQIKKKSgQUUUUAFFFLQISiiigAooooAKKKKBBRRRTAKKKKACiiigAooooAKKKKYBRRRQAUUUUAFFFFAC0lFFMBaKSlp3GFFFFIYUUUUAFFFFIYUUUUAFFFFILhRRRQO4UUlFBNwooooC4UUUUAFFFFAgooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBaKSigAooopgFLSUUXAWikooAWikooAWikopDFopKKAFopKKAFopKKAuf/9k=",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDmCKQD5hTyKTHzCsa+x9gmTp0qQUxelSCvMaOCruFLRRSsccgoooosYsSiloosZMSiiiixmxKSlop2M2JTTTqQ07GMhpqJ6lNRvVRWpyVdhopaBS13wOSwUUtFboVhKWilrRBYSiloq0FhKKWjFWgsJilpaKpCsJijFLRWiYWEoxS4pa0iwsNxRinUYrqpvUfKMx8wpzj5aMcilYcV69N+6j0sBoyELS4p4FLisqsj6KEhmKMU/FGK45s6FIZikxT8UYrCTNExmKMU/FGKwky0yPFGKfijFYyZaYzFJin4pMVzzZSYpFJjkU8im964a2wJky9KeKYtPFee0cNXcWiilpWOSQlFLRRYxYlFFFFjNhSUtJRY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KKKpAFLRRWsRhS0lLXSnoaQFoooqJHVEWiiismaoSilpKzZogoooqGUgooorNloSiiis2UmFJS0lZSGmLRRRWZjMKKKKDFhRRRQQxKKKKCGFFFFBLCkpaSmQwpKWighiUlLSUzNhRRRVokWiiirQBRRRTAKKKKoAoopaYBRRRTGFFFFUgCiiiqQC0UUVrEYtFFLXQnoaQClpKWokdMQooorNmiCkpaKzZaEoooqGWgoooqGUgpKWkrNlIKKKKykNMKKKKgykFFFFBiwooooIYlFLSUEsKKKKCGFJS0lBLCiiimSxKSlooM2JS0UVaJCiiirQBRRRTAKKKWqAKKKKYBRRRTAKKKKaAWiiirQwooorSIC0tJS1unoaRClpKKlnREWiiismaIKKKKhloSiiioZSCiiioZSCiiioZaEopaSspDTCiiipMpBRRRQYsKKKKCGJRS0lBLCiiiglhRRRQSxKKKKZLEopaSgzYUUUVSEFFFFWgCloopgFFFFMAoooqgCiiimAUtJS0wCiiiqQwooorSIC0tJS1snoXEKKKKlm6FooorNmiCiiioZaCkpaSpZSCiiioZSCiiioZSCkpaSs2NMKKWioMpCUUUUGbCiiighhSUtJTJCiiiglhRRRQSxKKWkoJYUlLSUyGFFFFUhBS0UVQBRRRTAKKKKYBS0UlMAoopaYBRRRTAKKKKpAFFFFaIYtLSUtaouIUUUUmbIWiiis2WgoooqGWgpKWkqWUgoooqWNBRRRUMpBRRRWbGmFFFFSZyEooooM2FFFFBDCkpaSgkKKKKYgooooJCkpaSglhSUtFBLEpaKKpEhRRRVAFFFFMYUUUUwCilopgFFFFMAooopgFFFFNAFLSUtWgClpKWtblxCiiikzVBS0lFQy0LSUUVDLQUUUVLGFFFFSygoooqWUgooorNgmFFFFIiQlFFFBmwooooJCkpaSgkKKKKCQooopiCiiigkSiiiglhRRRVIQUUUtMApKWimAUUUUwCiiimAUUUUDCiiimAUUUVSAKWkpapAFLSUtalIKKKKlmqCiiipZSCiiipZQUUUVLKCiiipYwoooqWUgoooqGFwoopKRDCiiighhRRRQSFJS0UEiUUtJQIKKKKBBRRRQISilpKZLCiiimIKKWimAUUUUwCiiimAUUUUAFFFFMAooopgFFFFMApaSlqkMKWko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CQlJTqQ07HPIaaaacaaaaRzTGNUElTtUMlaRWp5uI2GgU4CkApwr1aWx57QYoxS4pcV2RFYTFGKWlreIWExRilpcVogsJijFLRWqCwmKMUtLWiYWExRiloraLCwYqVKjqVK1voa0VqSCnimCnis2epTFFOpop1SdsBaKKKR1wCiiig64BSUtFKWx1rYKKKK55DEopaSueQBRRRWMgCkpaSsJAFJS0lc0wENNpxptefVWo+gUUUVlYwkJRS0lFjnkFJS0lOxhISkNLSUWMJCGmmnGmmqSOaYxqhepzUL1cUefX2EFLQKUV6VLY4bBS0UtdcRWCiilrZBYSlopa1QWEopaK0QWCilorVBYSlopa1iFhKlWo6kWtehrSWpIKcKaKcKhno0x1LSClqTsgLRRRSOqAUUUUHXAKKKKUjqWwUUUVzyGFJS0VhIYlFFFYyAKKKKwkISkpaSuaYxDSUppK4ai1H0CkpaKzsYSEoooosc8hKKKKdjGQlJS0lFjCQhpppxppqrHNMYaiepjUTVcUcFbYQUtApa76Zx2Clopa64hYSlopa2QrCUtFFaILBRS0VogsJS0UVogsFFLRWsQsFPWm09a16GlNajxThTRThUs9CmOFLSClFSdcApaKKR1QCiiig6oBRRRUyOpbBRRRWEhhRRRWMhiUUUVjIAooorCQhKKKK55jGmkpxptcVRajewUUUVFjCQlFLSUWMJBSUtJRYwkJSGnUlOxhIaaQ040007HPMYajapTUTVaRw1hBTqQU6u6mctgoopa6oisFFLRWqCwUUUtaILCUtFFaILBRRS1ogsJS0UVrELBT1ptPFa9DSmtRwpwpopwqWd0B1LSUtSdcApaSlpHTAKKKKDpgFFFFTI6lsFFFFYSGFFFFYyASilpKykMKKKKxkISiiiueYxDSUppK45rUb2EopaSosYSCiiiixhISkpaKdjGQlJS0lFjCQlNNOppp2OeY01G1SGmNVpHFVEFLQKWuymc1gpaKK6YhYKWiitkFgoopa0QWEpaKKtBYKKWitEFgooorVBYKetNpwrToXBajxSikFKKTO2A6lpBS1J1QClpKWkdEQooooOmAUUUVMjpWwUUUVjIoKKKKxkAUlLSVjIAooorKQCUUUVhIYhpKWkrknuD2CiiiosYyEoooosYSEopaSnYxkJSUtFFjGQ00hpxppp2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RRSAKKKKQBRRRQAUUUUhBRRRQMKKSikAUUUUgCiiipYBRRRUiYlFLSUyWFFFFBLEooooIYUUUVSJCiilq0AlLRRTAKKKKYBRRRTAKKKWmUgooooKCiiikMKKKKBhRRRQMWiiigAooooGFFFFAwooopDCiiikAUUUUCCikopAFFFLQAlFLRSAKSlpKACiiipYwooopCCkpaKCWJRRRQSwpKWimSxKWiimhBRRRVAFFFFMAooopgFFFFMApaKKBoKKKKCgooooGFFFFABRRRQMKWkpaACiiigYUUUUhhRRRQAUUUlIBaKSigApaSikIWikooGLSUUUAFFFFIAooopMAooopCCiiigQlFLRTEJRRRQSwooopiCiiimAUUtFMBKWiimAUUUUAFFFFMYUUUUhhRRRQMKKKKACiiigYUUUUAFLSUtAxKKWigBKWiigYlFLRSEFFFFACUUUUAFFFFIAooooAKKKKACiiikAUUUUAFFFFAgooooEFJS0UCEpaKKYBRRRTAKKKKACiiigAooopgFFFFABRRRQMKKKKACiiigAooooGFFFFABRRRQMWikooAWkoopAFFFFABRRRQAUUUUCCiiigAooooAKKKKACiiikAUUUUAFFFFABRRRQAUUUUCCiiimAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//Z",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDu6KKKhnaFJS0lQwCiiis2AUlLSVjIYhpj9KeaY3SvOxS91lIixSYp1JXjchM2NxSEU6kNPkOWbGEUwipDTTVKBx1CFhVaQc1bYVXkHNbU4e8jx8XsQBacFpwFOAr6Kg9DxHAbtpdtPxRivQgxezQzbS7afilxXRFi9miPbS7afilxW8WL2aI9tORfmFOxSqORWqY1TVyzH0qYVEnSpRWUj3KC0HCnUgpRUHfAWlpKWkbxFooopGqFooopGiClpKWg0QUtJS0GqCiiipZogoooqGMKSiioYBRRRUMAoooqWAUlFFQwCiiioYwpKWkrGQCGmN0p5prV5+IXuspEdJTqSvM5SZjaQ06kNPlOWYw0008001Si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SNkFFFFItC0UUUFoKKKKCkLRRRQUgooopFoWiiihlISilpKljCiiipAKKKKkAooopAFJS0UgEoooqWAUUUVDAKSlpKymMaajNSGozXj4te8iuglNNOpDXLYwmNpRSUorooLU45i0tFFepTMGFFFFdMTNhSUtFbxM2JRS0laolhSUtFaIhiVIKZTxWjKp7jhS0gpag7Yi0tJS0GqCiiikaIWiiigpBRRRQUgpaSlpFIKKKKC0FFFLQygpKWkqGAUUUUmAUUUVIwooopCCikopALSUUVLGFFFFSwCkpaSsZgNNMNSGo68nEr3iuglNNOpDXPYwmNpRSGlFb0VqckxaKKK9KBgwooorpiQwooorZEMKKKK0RDCkpaStUQ0FPFMp4qyqe44UtIKWpOyItLSUtI2QUUUUFoWiiigpBRRRSKClpKWgpBRRRQUgpaSikywoooqQCiiikAUUUUgCiiipASlpKWkAUlLSVLAKKKKljCkpaSspAIajNSGmGvLxC94fQbSGnU01z2MZiUCilFb0lqcswopaK9CBgwoooroiQwooorZEMSilpK0RLCiiitUQ0FPFMp4qiqe44UtJS0jriFLSUtI1QUUUUFoWiiikUgooooKQUtJS0FIKKKKCkFFFFIoKKKKkYUUUUgCiiipAKKKKQBRRRSASiiikwCiiioYBSUtJWUhiGmU80yvNxC1H0EpDS0lYWMJjaWg0VtSWpzTFooorvgYsKKKK6IkMKKKK1RDCiiitESwpKWitESxKeKbThVjhuOpaSlqTriFLSUtBqgooopFIWiiigpBRRRQUgpaSloKCiiikUgooooKCiiipGFFFFIAoooqQEpaSloAKSlpKkAooopAFFFFSwCkpaSspAIaZTzTa86utR9BtIadSVjYxmNpaQ0ta01qc0goopa7oGTCiiit4kMSilorVEMSilorREsSilpK0RLCnCm04VRUNxwpaQUtI6YhS0lLSNUFFFFBaFooooGgooooKQUUUtBSCiiikUgooooKCiiipAKKKKQBRRRSGFFFJUiFpKKKQBRRRSAKKKKljCkpaSs5AIaaacabXn1lqPoJSGlpDWVjGQlFFFaU1qc0haKKK7YGTCiiitokMKKKK1RLCiiitEJhRRRVolhThTacKscNxaWkpaR0xFooopGiCiiigtC0UUUFIKKKKQwpaSigpC0UUUFBRRRQUFFFFSwCiiikAUUlLSAKSiikAUUUUgCiiipAKKKKlgFJS0lZyGIabTjTa4a24+glJTqSsrGMhtFLRWlNanPIKKKK7ImTCilorZEMSilpK0RLCiiitEIKKKKtEsKcKbThVDhuLS0lLSOlC0UUUGiCiiigpC0UUUigooooGFFFFBQtFFFBSCiiikMKKKKQwooopAFFFFIBKKKKQBRRRSAKKKKQBRRRUsApKWis5ANNJTjTa4qq1GJSUtJWVjKQlFFFaQWpzyCloorqiZsKKKK2RDCiiitEIKKKK0RIUUUVaJClFJSiqKjuOooopG6FooooNEFLSUtIpBRRRQUFFFFAwooooKFopKWgaCiiikUFFFFIAoooqQCiiigYlFFFIAooopAFFFFIAoooqWAUlLRUSAQ02nGm1xVdxiUlLRWdjKQ2loorSCOeQUUUV0xIYUUUVsiGFFLRVoQlFLRWiJEopaSqQgpwptOFWOO4tFFFI3QtFFFI0QUtJS0FBRRRQMKKKKBhRRRSKFooooGFFFFBQUUUUgCiiipASiiigYUUUUhBRRRSAKKKKQBRRRUsAoooqJDENNpxptclTcBKKWkrOxlISiiitIGMgpaSlroiZsKKKK1RIUUUVohBRRRVIkKKKKtCClFJS1Q4i0tJS0jdBRRRQWgpaSloKCiiigYUUUUigooooGFLSUtAwooooKCiiipASiiikAUUUtACUUUUgCiiikAUUUUgCiiikwCiiioYCGkpTSVy1NxiUlLSVnYykJRRS1cTFhRRRXREhhRRRWqJCiiirQgoooqkIKKKKtEhSikpaocRaWkpaRugooooKQUtJS0igooooGFFFFBQUUUUDCiiigYtFFFAxKWkoqQCiiigYUtJRSAKKKKQgooopDCiiikAUUUUmAUUUVDAQ0lLSVzT3GJSUtFRYykJRRRVxMmFFFFbxIYUUtJWiJCiiirQgoooqkIKKKKtCCloopjiLS0lLQaoKKKKRYUtJS0DCiiigoKKKKBhRRRQMKKKKBi0UUlIYUUUUgFpKKKQBRRRQAUUUUgCiiikAUUUUAFFFFIAoooqGMSkpaSuee4CUUtJUWM5CUUUVUTJhRS0VuiGFFFFWhBRRRVoQUUUVSEFFFFUhBS0lLVDiFLRRSNUFFFFBQUtJS0FBRRRQMKKKKBhRRRQMKKKKQxaKKSgYtJRRSAKKKKQBRRRQAUUUUgCiiigAooopAFFFFIAoooqGAlJS0lYT3GFJS0lTYzYUUUVUTJhRRRWqJCiiitEIKKKKpCCiiiqQgoooqkIKWkpaoaFooopGiCiiigsKWiigYUUUUDCiiikMKKKKACiiigoWkoooGFFFFIAooopAFFFFABRRRSEFFFFAwooopAFFFFIAoooqWAlJS0VjLcBKSloqSGJRRRTRmwooorVEhRRRVoQUUUVSEFFFLVCEopaKpCEpaKKY0LRRRQaIKKKKChaKKKQwooooGFFFFAwooooAKKKKBhRRRQMKKKKQwooopAFFFFAgooopAFFFFABRRRSAKKKKQBRRRSYxKKKKxkAlFFFSQxKKKKpGbCiilrRCCiiirQgoooqkIKKKKYgoooqgCiiimCFooopGiCiiigYtJS0lAxaKKKBhRRRQMKKKKACiiigYUUUUhhRRRQAUUUUgCiiigAooopAFFFFABRRRSAKKKKACiiipYCUUUVlIYUlLSUiGFJS0U0QwooorREhRRRVIQUUUVQBRRRTEFFFFMApaSlpggooooLQUUUtBQUlLRQMKKKKACiiigYUUUUAFFFFIYUUUUDCiiigAooopAFFFFABRRRSEFFFFAwooooAKKKKQBRRRSYCUUtJWcgCkpaKRLEooopohhRRRVoQUUUVQgooopgFFFFMQtJRRTAWikpaYIKKKKC0FLSUtAwooooGFFFFIAooooGFFFFABRRRQMKKKKBhRRRQAUUUUgCiiigAooopCCiiigAooooGFFFFABRRRUsBKKWkqGAUUUUiWJRS0U0SJRS0VSEFFFFUIKKKKYBRRRTEFFFFMAooopggooooKFooopDCikpaBhRRRQAUUUUDCiiigAooooGFFFFABRRRSAKKKKACiiigAooooAKKKKQBRRRQAUUUUAFFFFIApKWkqGAUUUUCYUUUUIkKKKKoQUUUUwCiiimAUUUUxBRRRTAKKKKACiiigoWiikoGFLRRQAUUUUAFFFFAwooooAKKKKBhRRRQAUUUUgCiiigAooooAKKKKACiiikAUUUUAFFFFABRRRQAUlLSVLAKKKKQgooopiCiiimIKKKKYBRRRTAKKKKBBRRRTAKKKKACloooGFFJS0DCiiigAooooAKKKKBhRRRQAUUUUDCiiikAUUUUAFFFFABRRRQAUUUUCCiiigYUUUUgCiiigAooooAKSlopAFJRS0CEooooEFFFFMAooooAKKKKYBRRRQAUUUUCCloopgFFFFAwooooAKKKKACiiikMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKQBSUtFABRRRQAUUUUwCiiigAooooAKKKKBBRRRQAUUUUAFFFFAwooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//9k=",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0WiiipNhKKKKQBRRRUsAoooqWMKSlpKykAhqu4+arBqFuteHmMbpFxIyKaRTzSGvK9mjKbFXpTqatPr2cKvdRxTCiilr04GDEopaK6ImbEopaStkSwooorREMKKKK1RLEp4ptOFWOnuOFLSClqTsiLRRS0jVBRRRQWhaKSloKQUUUUigooooKQtFFFBSCiiikywoooqQCiiikAUUUUgCkpaSpAKKKKQBRRRSYBRRRUMApKWkrKQxDULdamNRN1rx8cr2KQw0hpxpprzuUxmKtOpop1enh1ojkmFLRRXpQMWFFFFbxM2FFFFbIliUUtFaIhiUUUVoiWFOFNp4qyqe4tLSUtI6oi0tJS0jVBRRRQWgpaSlp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qkAUUUVQgpaSlpjQUtFFBaCiiikUFFFFAxaKKKBhRRRQMKKKKACiiigYUUUUDCiiikAUUUUhhRRRQIKKKKQBRRRQAUUUUAFFFFIApKWkqWMKSlpKxmAUlLSVmQwooorSJmwoopa0QhKKWirQhKKWiqEJS0UUwCiiiqEFFFFMELRRRSNEFFFFAwooooGLRRRQMKKKKBhRRRQAUUUUDCiiikMKKKKACiiikAUUUUAFFFFIAooooAKKKKACiiikAUlLSVLAKSlorKYxKSloqLEMSlpKKuJDFooorREhRRRVIAoooqhBRRRTEFFFFMAooopghaKKKC0FFFFBQUUUUDFooooAKKKKBhRRRQAUUUUDCiiikMKKKKACiiikAUUUUAFFFFIAooooAKKKKACiiikAUUUlJgFFFFZSASiiipJYUUUVSIYUUUVohBRRRVCCiiimAUUUUxBRRRTAKKKWmCCiiigtBS0lLQMSlpKWgYUUUUgCiiigYUUUUAFFFFAwooooGFFFFABRRRSAKKKKACiiikIKKKKBhRRRQAUUUUgCkpaKQCUUUVnIBKKKKklhRRRVokKKKKpCCiiiqEFFFFMAooopiCiiimAUtJS0wQUUUUFBS0lFAwpaSigYtFFFIAopKWgYUUUUAFFFFAwooooAKKKKBhRRRSAKKKKBBRRRSAKKKKACiiigAooooAKSlopAJRRRUMYUlLSVJLCiiiqRIUUUVQgoopaYCUUtJTEFFLRTASiilpgFFFFABRRRQUFFFFAwoopaACiiigAooooGFFFFABRRRQMKKKKACiiikAUUUUAFFFFABRRRSAKKKKACiiigAooooAKKSlpAFJRRUsAooopCYUUUU0IKKSlqhBRRRTEFFFFABRRRTAKKKKYBRRRQAUUUtAxKKKKBhS0UUAFFFFABRRRQMKKKKACiiigYUUUUAFFFFIAooooAKKKKACiiigAooooAKKKSgBaKSikAtFJS0AFJS0lSwCiiikIKKKKaEFFFFMQUUUUwCiiimAUUUUAFFFFMAooooAKKWkoGFLRRQAUUUUAFFFFABRRRSGFFFFMAooooAKKKKQwooooAKKKKACiiigAooooAKKKKACiiigBKKWikAUUUUAFJS0lIAooooEFFFFAgooopgFFFFABRRS0wEooooAKKKKAClpKKYBS0UUAFFFFABRRRQAUU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RSAKKKKACiiigAooopAFJS0lSwCkNLSGspjEopaSs0QwopaK1RDCiiirQgoooqkIKKKKoQUUUUwCiiimIKKKKY0FLRRQUFFFFBQUUUUDFpKWkoAKWiigYUUUUAFFFFIYUUUUDCiiigAooopAFFFFABRRRSAKKKKACiiigAooopAFJS0lJgFIaWkrKYBSUtJWaJYtFFFaogKKKKtCCiiiqAKKKKYgooopgFFFFMQUUUUxoWiiigpBRRRQMKKKWgYUlLSUgFooooGFFFFABRRRQMKKKKBhRRRSAKKKKACiiigAooooEFFFFIAooooAKKKKQBSUUUhhRRRWcwEoooqESwooorREhRRRVoQUUUUxBRRRTAKKKKYgooopgFFFLTBBRRRSKCiiigYUUUUDFpKWkoAKKKKBi0UUUAFFFFAwooooAKKKKACiiikAUUUUAFFFFIAooooAKKKKACiiigApKWkpAFFFFZyGJRRRUksKKKKtEhRRRVCCiiimAUUUUxBRRRTAKKKKYBS0lLQAUUUUFBRRRQMKKKKAFpKWkoAKKKKBi0UUUAFFFFAwooooAKKKKQBRRRQAUUUUAFFFFIAooooAKKKKACiiigBKKKKQBRRRUSASiiipEwoooq0SFFFFUAUUUUxC0lFFABRRRTAKKKKYBS0lLQAUUUUDCiiigYUtJS0AFJS0UAJRRRQMWiiigAooooGFFFFABRRRSAKKKKACiiigAooooAKKKKACikopALRSUUAFFFFABRRRUMBKKWikISiloqkISloopiCiiimAUUUUwCiiigQUUUUwCiiigAooooKCiiigBaKKKACiiigBKKKKBi0UUUAFFFFABRRRSGFFFFABRRRQAUUUUAFFFFABRRRQAlFLSUAFFFFIAooooAKKWkqWAUUUUhBRRRVCCiiimAUUUUCCiiimAUUUUAFFFFMAooooAKKKKBhS0UUAFFFFABRRRQAlFFFAxaKKKACiiigAooooGFFFFIAooooAKKKKACikooELRSUUALRSUUAFFFFABRRRSAWkpaSkwCiiigAooopiCiiigAooopgFFFFABRRRQAUUUUAFFFFABS0lFAC0UlLQAUUUUAFFFFABRRSUDCiiigAooooAKWkooAWikooAWikooAWikooAKKKWgBKKWigBKKWigBKKWigBKWiikAUlLRQAlFFFABRR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oopAFJS0lIAooooAKKKKQBRS0lABRRRSAKKKKQBRRRUsAppp1NNc1f4RobS0lLXNTWpEgooorsiZMKWiitESFFFFWhBRRRVCCiiiqEFFFFUhBRRRTGhaKKKDRC0UUUFBRRRSGFFFFAwooooGFFFFAC0UUUDCiiigYUUUUhhSUtJSAKKKKACilpKQgooooAKKKKQBRRRSGFFFFSwCmmnU01z1thobS0UVzU1qRIKWkorriZMWiiitUSFFFFWhBRRRVIQUUUUwCiiiqQgoopaYIKKKKDRC0UUUigooooGFFFFAwooooGFFFFABRRRQMWiiikMSiiigAooopAFFFFAC0lLSUgCiiigAooopAFFFFABRRRUsYU006mmuetsCEooornpkyCloorqiZMKKKK0Qgoooq0IKKKKoQUUUUxBRRRVCClpKWmNBRRS0FoKKKKRQUUUUDCiiigYUUUUDCiiigAoopaBhRRRSGJRRRQAUUUUgCloooASiiikAUUUUAFFFFIAooooAKKKKlgFIaWkNYVdhjaWkpawgRIKKKK6YkMKKKK0RIUUUVSEFFFFUIKKKKYBRRRVCClpKWmNBRRRSLQtFFFAwooooGFFFFAwooooGFFFFABS0lLQMSiiigYUUUUgCiiikAtFJRQAUUUUgCiiigAooooAKKKKQBRRRUsApDS0hrGrsMbS0UVhAhhRRRXSiGFFFLVoQlFLRVCCkpaKoQlLRRTEFFFFMAooopggooooLQtFFFBQUUUUDCiiigAooooGFFFFABS0lFAxaSlpKQwpaKKAEooopAFFFFABRRRSAKKKKACiiigAooopAFFFFJgFIaWkNY1NhiUUUVjAhhS0lFbogWikpa0QgoooqhBRRRTAKKKKYgooopgFFFFMEFLSUtBaCiiigYUUUUDCiiigAooopDCiiigAooooGLSUUUDFopKKACiiikAUUUUAFFFFIAooooAKKKKACiiikAUUUUmAUhpaSsamwCUUUVnElhS0UVsiQoooq0SFFFFUAUUUUxBRRRTAKKKKYgooopggpaSloLCiiigYUUUUDCiiigAooopDCiiigAooooGFFFFAwooopAFFFFABRRRQAUUUUCCiiikAUUUUAFFFFIAooopDCkNLSGsp7AJRRS1nElhRRRWyJCiiiqQgoooqhBRRRTAKKKKYgooopgFFFFMELRRRQUFFFFIYUUUUDCiiigAooooGFFFFABRRRQMKKKKACiiigAooopAFFFFABRRRQAUUUUgCiiigAooooAKKKKQBSGlpDWU9hhRRRURJYUUUVqiQoooqhBRRRTAKKKKYgooopgFFFFMQUUUUxoWiiikMKKKKBhRRRQMKKKKBhRRRQAUUUUAFFFFAwooooAKKKKACiiikAUUUUAFFFFIAooooAKKKKACiiigAooopAFJS0VnLYYlFFFRElhRRRWiJCiiiqEFFFFMAooopgFFFFMQUUUUwClpKKAFooooKCiiigYUUUUAFFFFAwooooAKKKKACiiigYUUUUAFFFFABRRRSAKKKKACiiikAUUUUAFFFFABRRRQAUUUUgCkpaSolsAUUUVCEwooorRCCiiiqEFFFFMAooooEFFFFMAooopgFFFLQAUUUUDCiiigYUUUUAFFFFAwooooAKKKKACiiigYUUUUAFFFFIAooooAKKKKACiiigAooooAKKKKQBRRRQAUUUUAFFFFRIBKKKKlCYUUUtWISilopiEpaKKYBSUtFMAopKKBBS0lFMBaKSloAKKKKCgooooAKKKKACiiigYUUUUAFFFFABRRRQAUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFIAooooAKKKKACiiipYCUUUVKEFFLSVYgopaKYCUUtFAhKWiimAUlLRQAlFLRQAUUUUwCiiigYUUUUAFFFFABRRRQMKKKKACiiigAooooAKKKKBhRRRSAKKKKACiiigAooooEFFFFABRRRQMKKKKQBRRRQAUUUUmAUUUUkIKKKKYgooopgFFFFABRRRTAKKKKACiiigQUUUUxhRRRQAUUUUgCiiigAooooGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUhhRRRQxBRRRSAKKKKYgooooAKKKKYBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUDCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiikAUUUUAFFFFMAooooAKKKKACiiigAooooAKKKKACiiigQUUUUDCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0miiikWFFFFABRRRSAKKKKQBRRRUMBKa/Q06mv0NceK/hspEadBT6avSnVw4Re4iJ7i0UUV6cTBhRRRWqJCiiitEIKKKKpEhRRRVIQUUUVSEFLSUtUNBS0UUjVBRRS0FBRRRQUFFFFAwooooGFFFFIYUtJS0DCiiigYUlLSUgClpKWkAUUUUAJRRRSAKKKKACiiikAUUUUgCiiioYCU1+hp1NbpXJifgZSGL0p1NXpTq4sKvdRE9xaKKK9GJiwooorZEMKKKKtCCiiiqQgoooqkIKKKKpCClpKUVQ0LRSUtI0QUtJRQULRRRQUFFFFAwooopDCiiigApaSloKCiikoGLSUUUgFoopKQC0UlFABRRRSAKKKKACiiikAUUUUgCiiipYCU1uhp1NbpXJiPgY0MWnUi0tceG+FETFooor0ImTCiiitUSFFFFWiQoooqkIKKKKpCCiiiqQgpaSlqhoKWiikaIKKKKCxaKKKBhRRRSGFFFFAwooooAKWkpaCgpKWkoGFLSUtIApKWkpAFFFFABRRRSAKKKKACiiikAUUUUgCiiipYCU1ulOprdK5MR8DGhopaQU6uXD/CiJhRRRXdEyYUUUVqiWFFLRVoQlFLRVIQlFLRVCEopaKpCEpaKKYIWiiig1QUtJS0FBRRRQMKKKKQwooooGFFFFABS0lLQMKSlpKChaKKKQBSUtJSAKKKKACiiikAUUUUAFFFFIAooopAFFFFSwEpG6UtI3SuWv8LGhgp1NFOrlw+xEgoooruiZMWikorVEi0UlFUhC0UlFUhC0UlFUIWikoqhC0UlLTGhaKKKDRBS0lLQUFFFFIYUUUUDCiiigYUUUUAFFFFAxaKSloGFFJRSAWkoopDCiiigAooopCCiiigAooopAFFFFIYUUUVLASkbpS0jdK5q/wsaGilpBS1zUNiJBRRRXbEyYUtFFaIQUUUVaJCiiimAUUUVQgoooqkIKKKKYIWiiig0QUtJS0igooooGFFFFAwooooGFFFFABRRRQMWiiikMSiiigAooopAFFFFABRRRSAKKKKACiiikAUUUUhhRRRSYCUjdKWkPSuat8LBDRS0gpa5qOxMgpaKK7ImTCiiitEIKKKKtCCiiiqEFFFFMQUUUVQgooopjQtFFFBaClpKWkUFFFFAwooooGFFFFAwooooAKKKKBhS0lLSGJRRRQAUUUUgCiiigAooopAFFFFABRRRSAKKKKACiiipYBTT0paQ9K563wsaGiloFFc9HYmQtFFFdcTNhRRRWiJCiiiqQgoooqhBRRRTAKKKKoQUUUtMEFFFFI0QUtJRQMWiiigYUUUUDCiiigYUUUUAFFFFAwooopDCiiigAooopAFFFFABRRRSAKKKKACiiikAUUUUAFFFFSwCmnpTqaawrfCxoaKWgUVz0tiZC0UUV1IzYUUUVoiQoooqhBRRRVAFFFFMQUUUVQgpaSlpjQUUUUi0FLSUtBQUUUUAFFFFAwooooGFFFFABRRRQMKKKKQwooooAKKKKQBRRRQAUUUUgCiiigAooooAKKKKQBRRRUsAppp1NPSsKvwsaEFLSUtYUtiZBRRRXUjNhRRRVoQUUUVQgoooqhBRRRTEFFFFMApaSlpggooooLQtFFFBQUUUUDCiiigAooooGFFFFABRRRQMKKKKQwooooAKKKKQBRRRQAUUUUgCiiigAooooAKKKKQBRRRSYBSHpS0h6VhV2GNFLSClrGlsRIKKKK6EQFFFFaIQUUUUxBRRRVCCiiimAUUUUxBS0lLTGgooooKQtFFFBQUUUUDCiiigAooopDCiiigAooooGFFFFAwooooAKKKKQBRRRQAUUUUgCiiigAooooAKKKKQBRRRSYBTTTqaaxqbAJS0gpaxp7CYUUUV0IzCiiirQgoooqhBRRRTAKKKKYgooopgFLSUtMEFFFFBYtFFFAwooooGFFFFABRRRSGFFFFABRRRQMKKKKBhRRRSAKKKKACiiigAooopAFFFFABRRRQAUUUUgCiiikAUhpaQ1jU2ASiiisqexLCiiit0SFFFFWiQopaKoBKKKWmISilopgJRS0UxCUtFFMaCiiloKCiiigYUUUUDCiiigAooopDCiiigAooooGFFFFAwooopAFFFFABRRRQAUUUUCCiiikAUUUUDCiiikIKKKKQwpDS0hrKpsAlFFFZQ2JYUUUVuiRaKSirQhaKSimIWikopgLRSUUxC0UlFMApaKKYIKWkpaCgooopDCiiigYUUUUAFFFFAwooooAKKKKBhRRRQAUUUUAFFFFIAooooAKKKKACiiikAUUUUDCiiikIKKKKACkNLSGsp7DEooorOBLCiiitkSFFLRVCEopaKYhKKWimAUUUUxBRRRTAKKKKYIKWkpaRQUUUUDCiiigYUUUUAFFFFAwooooAKKKKBhRRRQAUUUUAFFFFIAooooAKKKKACiiikAUUUUAFFFFABRRRSAKQ0tIaznsMSiilrOBLCiiitUSFFFFUIKKKKYBRRRTEFFFFMAooopgFFFFMEFLRRSKCiiigYUUUUAFFFFABRRRQMKKKKACiiigYUUUUAFFFFABRRRSAKKKKACiiigAooopAFFFFABRRRQAUUUUgCkNLSGs57DCiikqIksWiiitUSFFFFMAoooqhBRRRQAUUUUwCiiimIKKKKACloooKCiiigYUUUUAFFFFAwooooAKKKKACiiigYUUUUAFFFFABRRRSAKKKKACiiikAUUUUAFFFFABRRRQAUUUUgCkNLSVEtgEpaKKiImFFFFaIQUUUVQgooopgFFFFAgooopgFFFFMAooooAWiiigYUUUUDCiiigAooooGFFFFABRRRQAUUUUAFFFFAwooopAFFFFABRRRQAUUUUgCiiigAooooAKKKKACiiikAUlLSVMtgCiiioiJhRRRWggooopiCiilpgJRRRQIKKWimAlFFFABRRRTAWiiigYUUUUDCiiigAooooGFFFFABRRRQAUUUUAFFFFAwooopAFFFFABRRRQAUUUUAFFFFABRRRSAKKKKACiiigApKWkqJAFFFFTETCiiirQgooopgFFFFMQUUUUwCiiigAooopgFLSUtABRRRQMKKKKACiiigAooooGFFFFABRRRQAUUUUAFFFFAwooopAFFFFABRRRQAUUUUAFFFFABRRRSAKKKKACiiigApKWkqWAUUUVKEFFFFWIKKWimAUlLRQISilopgFJS0UAJRS0UAFFFFMAooooGFFFFABRRRQAUUUUDCiiigAooooAKKKKACiiigYUUUUgCiiigAooooAKKKKBBRRRQAUUUUAFFFFIYUUUUAFFFFJgJS0UVKEFFFFUIKKKKYBRSUUALRRRTAKKKKBBRRRQAUUUUwCiiigYUUUUgCiiigYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUhhRRRSYhKKWikgCiiiqEFFFFABSUtFMAooooAKKKKACiiigAooopgFFFFIAooooGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUmAUUUUgCiiimAUUUUCCiiimAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKQBRRRTAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0uiiikUFFFFABRRRSAKKKKACiiipYCUhpaQ1hV+FjEFFFLWFLYmQUUUV1IzYUUUVaJCiiiqEFFFFUAUUUUxBRRRTEFFFFMaFooooLQUUUUFBRRRQAUUUUDFooooGJS0lLQAUUUUDCiiikMKKKKACiiikAUUUUAFFFFIAooooAKKKKACiiikAUUUVLASkPSlpD0rGrsMSlpBS1hS2JkFFFFdKM2FFFFWhBRRRVCCiiiqEFFFFMQUUUUwClpKWmCCiiigtBRRRQUFFFFAwooooAWiiigYUUUUAFFFFAwooopDCiiigAooopAFFFFABRRRSAKKKKACiikoAWikopALRSUUmAUhpaQ1hV2GJS0lLWNPYmQUUUV0IzYUUUVohBRRRTEFFFFUIKKKKYBRRRTEFFFFMaFooooKQUUUUFBRRRQMKKKKAFooopDCiiigAooooGFFFFAwooooAKKKKQBRRRQAUUUUgCiiigAooooASiiikAtJS0lJgFIaWkNY1NhiUtJS1jT2JYUUUV0IzCiiirQgoooqhBRRRTAKKKKYgooopgFFFFMELRRRQUgooooKCiiigYUUUUALRRRSGFFFFABRRRQMKKKKBhRRRQAUUUUgCiiigAooopAFFFFABRRRQAlFFFIBaSlpKTAKQ0tIaxqbAIKWkpayp7EsKKKK3RAUUUVaEFFFFUIKKKKYBRRRTEFFFFMApaSlpggooooLQUUUUDClpKWgYlFFFAC0UUUhhRRRQAUUUUDCiiigYUUUUgCiiigAooooAKKKKQBRRRQAUUUUAJRRS0gCkpaSkwCkNLSGsamwCUtFFZU9iWFFFFbolhRRRVkhRRRVAFFFFMQUUUUwCiiimIKWkpaYIKKKKCwooooGFLSUtAxKKKKAFooopDCiiigAooooGFFFFAwooopAFFFFABRRRQAUUUUCCiiikMKKKKAEpaSlpAFFFJSAKDRQayqbAJRRRWUNiWFFFFbokKKKKpEhRRRVAFFFFMQUUUUwCiiimIKWkpaY0FFFFBQUUUUDClpKKQwooooAWiiigYUUUUAFFFFAwooooAKKKKQBRRRQAUUUUAFJS0lABRRRSAKKKKBhS0lLQAUlLSVIBQaKDWU9gEooorOBLCiiitkSFFFFWIKKKKYgooopgFFFFMQUUUUwClpKWmCCiiigoKKKKQwooooGFFFFABRRRQMWiiigAopKWgYUUUUAFFFFABRRRSAKKKKACkpaSgAooopAFFFFAwpaSloEFJS0lSMKDRQaznsAlFFFZwJYUUUVqiQoooqxBRRRTEFFFFMAopaSmIKKKKYBS0UUwQUUUUFBRRRSGFFFFAwooooAKKKKBi0UUUAJS0lLQMKKKKACiiigAooopAFFFFABSUtFACUUUUgCiiigYtFFFIQUlLSUAFBooNZT2GJRRRWcCWFFFFbIkKWiiqEJS0UUwEpaKKYgooopgFFFFMQUUUUxoKKKKBhRRRSGFFFFAwooooAKKKKBi0UUUAJS0lLQMKKKKACiiigAooopAFFFFABRRRQAlFFFIAoopaBhRRRQIKSlopAJQaKDWc9hiUUUtZwJYUUUVqiQoooqhBRRRTAKKKKYgooopgFFFFMAooopggooopFBRRRQAUUUUDCiiigAooooGLRRRQAlLSUtAwooooAKKKKACiiikAUUUUAJRRRQAUUUUgCloooAKKKKAEooopAFBooNZz2ASlpKKiImFFFFaokKKWkpiClooqgCkpaKACkpaKYgooopgFFFFAIKKKKCgooooGFFFFABRRRQAUUUUDFooooAKKKKBhRRRQAUUUUAJRRRSAKKKKACiiigAoopaQBRRRQAUUUUAJRRRSAKDRQaiWwCUUUVERMWiiitESFFFFUAUUUUxBRRRQAUUUUwCiiimIKKKKACiiigoKKKKBhRRRQAUUUUAFFFFAxaKKKACiikoGLRRRQAUUUUgEooooAKKKKACiiloAKKKKQBRRRQAUUUUAJRRRSAKDRRUS2ASlpKWoiJhRRRWiJCiiiqAKKKKYBRRRQIKKKKYBRRRTAKKKKACiiigYUUUUDCiiigAooooGFFFFAC0UUUAFJS0lAC0UUUDCiiikAlFFFABRRRQAtFFFABRRRSAKKKKACiiigApKWkpAFFFFRLYAoooqYiYUUUVaEFFFFUIKKKKYBRRRQIKKKKYBRRRTAKKKKACiiigYUUUUDCiiigAooooGFFFFAC0UUUAFFFFABRRRQMKKKSkAUUUUAFFFLQAUUUUAFFFJSAWikooAWikooAWkoooAKKKKiWwBRRRUxEwoooq0IKKKKYgooopgFFFFMAooooAKKKKYgooooAKKKKBhRRRQMKKKKACiiigYUUUUALRRRQAUUUUAFFJRQMWkoopAFLRRQAUUUUAFFFFABSUtJQAUUUUgCiiigAooooAKKKKiQBRRRUoTCiiirQgooopiCiiimAUUUUAFFFFMAooopgFFFFAgooooKCiiigBaSlpKACiiigYUUUUALRRRQAUUUUAFJS0UDEpaKKQBRRRQAUUUUAFFFFABSUtJQAUUUUgCiiigAooooAKKKKlgFFFFShMKKKKoQUUUVQBRRRQIKKKKYBRRRQAUUUUAFFFFMAooooGFLSUtABSUUUAFFFFAwooooAWiiigAooooAKKKKBhRRRSAKKKKACiiigAooooAKKKKAEooopAFFFFABRRRQAUUUVLAKKKKSEFFFFUIKKKKYBRRRQIKKKKYBRRRQAUUUUAFFFFMAooooGFLRRQAlFFFABRRRQMKKKKAFooooAKKKKACiiikMKKKKACiiigAooooAKKKKBBRRRQAlFFFIYUUUUAFFFFABRRRSYBRRRUoQUUUVQgooopgFFFFABRRRTAKKKKACiiigQUUUUwCiiigYtFJRSAKKKKYBRRRSGFFFFAC0UlFAC0UlFAC0UlFAC0UlFAC0UlLQAUUUUAJRRRQAUUUUAFFFFABRRRSGFFFFABRRRSYBRRRSQgoooqgCiiigQUUUUAFFFFMAooooAKKKKACiiimAUUUUgCiiigAooooGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUhhRRRQAUUUUmAUUUUIQUUUUxBRRRQAUUUUwCiiigAooooAKKKKACiiimAUUUUgCiiimAUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRSGFFFFDAKKKKQgooopiCiiigAooopgFFFFABRRRQAUUUUAFFFFABRRRQAUUUUDCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKQBRRRQAUUUUAFFFFABRRRTEFFFFABRRRQAUUUUAFFFFABRRRQMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD/2Q==",
  "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0yiiigYUUUUgCiiigBaKKKAEooopAFBooqJbAJRRS1ERMKKKK0RIUUUVQBRRRTEFFFFABRRRTAKKKKYBRRRQIKKKKCgooooGFFFFABRRRQAUUUUDFooooASiiigYtFFFABRRSUgCiiigAooooAKKKKACiiikAUtJS0AFFFFACUUUUgCiiiolsAlLSUtRETCiiitESFFFFUAUUUUxBRRRQAUUUUwCiiimAUUUUAFFFFAwooooGFFFFABRRRQAUUUUDFooooASiiigYtFFFABSUtJSAKKKKACiiigAooooAKKKKQBS0UUAFFFFACUUUUgCg0UGolsAlLSUtTETCiiirQgoooqhBRRRTAKKKKBBRRRTAKKKKYBRRRQAUUUUDCiiigYUUUUAFFFFABRRRQMWiiigBKKKKBi0UUUAFJS0lIAooooAKKKKACiiigAooopALRRRQAUUUUAJRRRSAKDRQamWwBRRRUREwoooq0IKKKKoQUUUUwCiiigQUUUUwCiiimAUUUUAFFFFAwooooGFFFFABRRRQAUUUUDFooooAKSlpKAFopKWgYUlLSUgCiiigAooooAKKKKAClpKKQC0UlFAC0UlFABRRRSAKKKDUy2AKKSlqIiYUUUVoIKKKKYgooopgFFFFMAooooEFFFFMAooooAKKKKBhRRRQMKKKKACiiigAooooGLRRRQAUlLSUAFLSUUDFpKKKQBRRRQAUUUUAFFFFABRRRSAKKKKACiiigAooooAKDRRUS2ASlpKWpiJhRRRVoQUUUUxBRRRTAKKKKYBRRRQAUUUUxBRRRQAUUUUDCiiigYUUUUAFFFFAwooooAWiiigApKWkoAKKKKBhRRRSAKKKKACiiigApaKKAEooopAFFFFABRRRQAUUUUAFFFFRIBKWiipQmFFFFWhBRRRTEFFFFMAooopgFFFFABRRRTEFFFFABRRRQMKKKKBhRRRQAUUUUDCiiigApaSloAKSlpKACiiigYUUUUgCiiigAooooAWiiigBKKKKQBRRRQAUUUUAFFFFABRRRUSAKKKKlCYUUUVYgooopiCiiimAUUUUAFFFFMAooopgFFFFAgooooKCiiigAooooAKKKKBhRRRQAUtJS0AFJS0UAJRRRQMKKKKQBRRRQAUUUtABRRRQAlFFFIAooooAKKKKACiiigAoooqZAFFFFShMKKKKpCCiiiqAKKKKBBRRRQAUUUUwCiiigAooopgFFFFAwooooAKKKKACiiigYUUUUAFLSUtABRRRQAlFFFAwooopAFFFLQAUUUUAFFFFACUUtJQAUUUUgCiiigAooooAKKKKlgFFFFShMKKKKsQUUUUwCiiigQUUUUAFFFFMAooooAKKKKYBRRRQMKKKKACiiigAooooGFFFFABS0lLQAUUUUAJRRRSGFFFFAC0UUUAFFFFABRRRQAUlLSUAFFFFIAooooAKKKKACiiipYBRRRUoQUUUVYgooopgFFFFAgooopgFFFFABRRRQAUUUUwCiiigYUUUUAFFFFABRRRQMKKKKAClpKWgAooooASilpKQwpaKKACiiigAooooAKKKKACkpaSgAooopAFFFFABRRRQAUUUVLAKKKKSEFFFFUIKKKKYBRRRQIKKKKYBRRRQAUUUUAFFFFMAooooGFFFFABRRRQAUUUUDCiiigApaSloAKKKKACkpaKQBRRRQMKKKKACiiigAooooAKSlpKACiiikAUUUUAFFFFABRRRUsAooopIQUUUVQgooopgFFFFAgooopgFFFFABRRRQAUUUUwCiiigYUUUUAFFFFABRRRQMKKKKAClpKWgAooooAKKKKQBRRRQMKKKKACiiigBKKKKBBRRRQAUUUUhhRRRQAUUUUAFFFFJgFFFFShBRRRVCCiiimAUUUUAFFFFMAooooAKKKKBBRRRTAKKKKBhRRRQAUUUUAFFFFIYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUhhRRRQAUUUUAFFFFJgFFFFJCCiiiqEFFFFABRRRQAUUUUwCiiigAooooAKKKKYgooooGFFFFABRRRQAUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRSGFFFFABRRRQAUUUUmAUUUUkIKKKKoQUUUUAFFFFABRRRTAKKKKACiiigAooopgFFFFABRRRQAUUUUAFFFFIYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFIYUUUUAFFFFJgFFFFJCCiiiqAKKKKBBRRRQAUUUUwCiiigAooooAKKKKYBRRRQAUUUUAFFFFIYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRSGFFFFABRRRSYBRRRQhBRRRTEFFFFABRRRTAKKKKACiiigAooooAKKKKYBRRRQAUUUUAFFFFIYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRSGFFFFABRRRQwCiiikIKKKKYgooooAKKKKYBRRRQAUUUUAFFFFABRRRTAKKKKACiiigAooopDCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiikMKKKKGAUUUUhBRRRTEFFFFABRRRTAKKKKACiiigAooooAKKKKYBRRRQAUUUUAFFFFIYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUhhRRRQAUUUUCCiiigQUUUUAFFFFABRRRTAKKKKACiiigAooooAKKKKYBRRRSGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRSAKKKKACiiigAooooAKKKKYBRRRQAUUUUCCiiigAooooAKKKKACiiigAooooGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUgCiiigAooopgFFFFABRRRQAUUUUCCiiigAooooAKKKKACiiigYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFIAooooAKKKKYBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/9k="
];

module.exports = map;

},{}],9:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var L_to_Y, Y_to_L, conv, dotProduct, epsilon, fromLinear, kappa, m, m_inv, maxChroma, maxChromaD, refU, refV, refX, refY, refZ, rgbPrepare, root, round, stylus, toLinear, _hradExtremum, _maxChroma;

  refX = 0.95047;

  refY = 1.00000;

  refZ = 1.08883;

  refU = (4 * refX) / (refX + (15 * refY) + (3 * refZ));

  refV = (9 * refY) / (refX + (15 * refY) + (3 * refZ));

  m = {
    R: [3.240454162114103, -1.537138512797715, -0.49853140955601],
    G: [-0.96926603050518, 1.876010845446694, 0.041556017530349],
    B: [0.055643430959114, -0.20402591351675, 1.057225188223179]
  };

  m_inv = {
    X: [0.41245643908969, 0.3575760776439, 0.18043748326639],
    Y: [0.21267285140562, 0.71515215528781, 0.072174993306559],
    Z: [0.019333895582329, 0.1191920258813, 0.95030407853636]
  };

  kappa = 24389 / 27;

  epsilon = 216 / 24389;

  _maxChroma = function(L, H) {
    var cosH, hrad, sinH, sub1, sub2;
    hrad = H / 360 * 2 * Math.PI;
    sinH = Math.sin(hrad);
    cosH = Math.cos(hrad);
    sub1 = Math.pow(L + 16, 3) / 1560896;
    sub2 = sub1 > epsilon ? sub1 : L / kappa;
    return function(channel) {
      var bottom, lbottom, m1, m2, m3, rbottom, top, _ref;
      _ref = m[channel], m1 = _ref[0], m2 = _ref[1], m3 = _ref[2];
      top = (12739311 * m3 + 11700000 * m2 + 11120499 * m1) * sub2;
      rbottom = 9608480 * m3 - 1921696 * m2;
      lbottom = 1441272 * m3 - 4323816 * m1;
      bottom = (rbottom * sinH + lbottom * cosH) * sub2;
      return function(limit) {
        return L * (top - 11700000 * limit) / (bottom + 1921696 * sinH * limit);
      };
    };
  };

  _hradExtremum = function(L) {
    var lhs, rhs, sub;
    lhs = (Math.pow(L, 3) + 48 * Math.pow(L, 2) + 768 * L + 4096) / 1560896;
    rhs = epsilon;
    sub = lhs > rhs ? lhs : L / kappa;
    return function(channel, limit) {
      var bottom, hrad, m1, m2, m3, top, _ref;
      _ref = m[channel], m1 = _ref[0], m2 = _ref[1], m3 = _ref[2];
      top = (20 * m3 - 4 * m2) * sub + 4 * limit;
      bottom = (3 * m3 - 9 * m1) * sub;
      hrad = Math.atan2(top, bottom);
      if (limit === 1) {
        hrad += Math.PI;
      }
      return hrad;
    };
  };

  maxChroma = function(L, H) {
    var C, channel, limit, mc1, mc2, result, _i, _j, _len, _len1, _ref, _ref1;
    result = Infinity;
    mc1 = _maxChroma(L, H);
    _ref = ['R', 'G', 'B'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      channel = _ref[_i];
      mc2 = mc1(channel);
      _ref1 = [0, 1];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        limit = _ref1[_j];
        C = mc2(limit);
        if ((0 < C && C < result)) {
          result = C;
        }
      }
    }
    return result;
  };

  maxChromaD = function(L) {
    var C, channel, he1, hrad, limit, minima_C, _i, _j, _len, _len1, _ref, _ref1;
    minima_C = [];
    he1 = _hradExtremum(L);
    _ref = ['R', 'G', 'B'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      channel = _ref[_i];
      _ref1 = [0, 1];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        limit = _ref1[_j];
        hrad = he1(channel, limit);
        C = maxChroma(L, hrad * 180 / Math.PI);
        minima_C.push(C);
      }
    }
    return Math.min.apply(Math, minima_C);
  };

  dotProduct = function(a, b) {
    var i, ret, _i, _ref;
    ret = 0;
    for (i = _i = 0, _ref = a.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      ret += a[i] * b[i];
    }
    return ret;
  };

  round = function(num, places) {
    var n;
    n = Math.pow(10, places);
    return Math.round(num * n) / n;
  };

  fromLinear = function(c) {
    if (c <= 0.0031308) {
      return 12.92 * c;
    } else {
      return 1.055 * Math.pow(c, 1 / 2.4) - 0.055;
    }
  };

  toLinear = function(c) {
    var a;
    a = 0.055;
    if (c > 0.04045) {
      return Math.pow((c + a) / (1 + a), 2.4);
    } else {
      return c / 12.92;
    }
  };

  rgbPrepare = function(tuple) {
    var ch, n, _i, _j, _len, _len1, _results;
    tuple = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = tuple.length; _i < _len; _i++) {
        n = tuple[_i];
        _results.push(round(n, 3));
      }
      return _results;
    })();
    for (_i = 0, _len = tuple.length; _i < _len; _i++) {
      ch = tuple[_i];
      if (ch < -0.0001 || ch > 1.0001) {
        throw new Error("Illegal rgb value: " + ch);
      }
      if (ch < 0) {
        ch = 0;
      }
      if (ch > 1) {
        ch = 1;
      }
    }
    _results = [];
    for (_j = 0, _len1 = tuple.length; _j < _len1; _j++) {
      ch = tuple[_j];
      _results.push(Math.round(ch * 255));
    }
    return _results;
  };

  conv = {
    'xyz': {},
    'luv': {},
    'lch': {},
    'husl': {},
    'huslp': {},
    'rgb': {},
    'hex': {}
  };

  conv.xyz.rgb = function(tuple) {
    var B, G, R;
    R = fromLinear(dotProduct(m.R, tuple));
    G = fromLinear(dotProduct(m.G, tuple));
    B = fromLinear(dotProduct(m.B, tuple));
    return [R, G, B];
  };

  conv.rgb.xyz = function(tuple) {
    var B, G, R, X, Y, Z, rgbl;
    R = tuple[0], G = tuple[1], B = tuple[2];
    rgbl = [toLinear(R), toLinear(G), toLinear(B)];
    X = dotProduct(m_inv.X, rgbl);
    Y = dotProduct(m_inv.Y, rgbl);
    Z = dotProduct(m_inv.Z, rgbl);
    return [X, Y, Z];
  };

  Y_to_L = function(Y) {
    if (Y <= epsilon) {
      return (Y / refY) * kappa;
    } else {
      return 116 * Math.pow(Y / refY, 1 / 3) - 16;
    }
  };

  L_to_Y = function(L) {
    if (L <= 8) {
      return refY * L / kappa;
    } else {
      return refY * Math.pow((L + 16) / 116, 3);
    }
  };

  conv.xyz.luv = function(tuple) {
    var L, U, V, X, Y, Z, varU, varV;
    X = tuple[0], Y = tuple[1], Z = tuple[2];
    varU = (4 * X) / (X + (15 * Y) + (3 * Z));
    varV = (9 * Y) / (X + (15 * Y) + (3 * Z));
    L = Y_to_L(Y);
    if (L === 0) {
      return [0, 0, 0];
    }
    U = 13 * L * (varU - refU);
    V = 13 * L * (varV - refV);
    return [L, U, V];
  };

  conv.luv.xyz = function(tuple) {
    var L, U, V, X, Y, Z, varU, varV;
    L = tuple[0], U = tuple[1], V = tuple[2];
    if (L === 0) {
      return [0, 0, 0];
    }
    varU = U / (13 * L) + refU;
    varV = V / (13 * L) + refV;
    Y = L_to_Y(L);
    X = 0 - (9 * Y * varU) / ((varU - 4) * varV - varU * varV);
    Z = (9 * Y - (15 * varV * Y) - (varV * X)) / (3 * varV);
    return [X, Y, Z];
  };

  conv.luv.lch = function(tuple) {
    var C, H, Hrad, L, U, V;
    L = tuple[0], U = tuple[1], V = tuple[2];
    C = Math.pow(Math.pow(U, 2) + Math.pow(V, 2), 1 / 2);
    Hrad = Math.atan2(V, U);
    H = Hrad * 360 / 2 / Math.PI;
    if (H < 0) {
      H = 360 + H;
    }
    return [L, C, H];
  };

  conv.lch.luv = function(tuple) {
    var C, H, Hrad, L, U, V;
    L = tuple[0], C = tuple[1], H = tuple[2];
    Hrad = H / 360 * 2 * Math.PI;
    U = Math.cos(Hrad) * C;
    V = Math.sin(Hrad) * C;
    return [L, U, V];
  };

  conv.husl.lch = function(tuple) {
    var C, H, L, S, max;
    H = tuple[0], S = tuple[1], L = tuple[2];
    if (L > 99.9999999) {
      return [100, 0, H];
    }
    if (L < 0.00000001) {
      return [0, 0, H];
    }
    max = maxChroma(L, H);
    C = max / 100 * S;
    return [L, C, H];
  };

  conv.lch.husl = function(tuple) {
    var C, H, L, S, max;
    L = tuple[0], C = tuple[1], H = tuple[2];
    if (L > 99.9999999) {
      return [H, 0, 100];
    }
    if (L < 0.00000001) {
      return [H, 0, 0];
    }
    max = maxChroma(L, H);
    S = C / max * 100;
    return [H, S, L];
  };

  conv.huslp.lch = function(tuple) {
    var C, H, L, S, max;
    H = tuple[0], S = tuple[1], L = tuple[2];
    if (L > 99.9999999) {
      return [100, 0, H];
    }
    if (L < 0.00000001) {
      return [0, 0, H];
    }
    max = maxChromaD(L);
    C = max / 100 * S;
    return [L, C, H];
  };

  conv.lch.huslp = function(tuple) {
    var C, H, L, S, max;
    L = tuple[0], C = tuple[1], H = tuple[2];
    if (L > 99.9999999) {
      return [H, 0, 100];
    }
    if (L < 0.00000001) {
      return [H, 0, 0];
    }
    max = maxChromaD(L);
    S = C / max * 100;
    return [H, S, L];
  };

  conv.rgb.hex = function(tuple) {
    var ch, hex, _i, _len;
    hex = "#";
    tuple = rgbPrepare(tuple);
    for (_i = 0, _len = tuple.length; _i < _len; _i++) {
      ch = tuple[_i];
      ch = ch.toString(16);
      if (ch.length === 1) {
        ch = "0" + ch;
      }
      hex += ch;
    }
    return hex;
  };

  conv.hex.rgb = function(hex) {
    var b, g, r;
    if (hex.charAt(0) === "#") {
      hex = hex.substring(1, 7);
    }
    r = hex.substring(0, 2);
    g = hex.substring(2, 4);
    b = hex.substring(4, 6);
    return [r, g, b].map(function(n) {
      return parseInt(n, 16) / 255;
    });
  };

  conv.lch.rgb = function(tuple) {
    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(tuple)));
  };

  conv.rgb.lch = function(tuple) {
    return conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(tuple)));
  };

  conv.husl.rgb = function(tuple) {
    return conv.lch.rgb(conv.husl.lch(tuple));
  };

  conv.rgb.husl = function(tuple) {
    return conv.lch.husl(conv.rgb.lch(tuple));
  };

  conv.huslp.rgb = function(tuple) {
    return conv.lch.rgb(conv.huslp.lch(tuple));
  };

  conv.rgb.huslp = function(tuple) {
    return conv.lch.huslp(conv.rgb.lch(tuple));
  };

  root = {};

  if (typeof require !== "undefined" && require !== null) {
    try {
      stylus = require('stylus');
      root = function() {
        return function(style) {
          style.define('husl', function(H, S, L, A) {
            var B, G, R, _ref;
            _ref = rgbPrepare(conv.husl.rgb([H.val, S.val, L.val])), R = _ref[0], G = _ref[1], B = _ref[2];
            return new stylus.nodes.RGBA(R, G, B, (A != null ? A.val : 1));
          });
          return style.define('huslp', function(H, S, L, A) {
            var B, G, R, _ref;
            _ref = rgbPrepare(conv.huslp.rgb([H.val, S.val, L.val])), R = _ref[0], G = _ref[1], B = _ref[2];
            return new stylus.nodes.RGBA(R, G, B, (A != null ? A.val : 1));
          });
        };
      };
    } catch (_error) {}
  }

  root.fromRGB = function(R, G, B) {
    return conv.rgb.husl([R, G, B]);
  };

  root.fromHex = function(hex) {
    return conv.rgb.husl(conv.hex.rgb(hex));
  };

  root.toRGB = function(H, S, L) {
    return conv.husl.rgb([H, S, L]);
  };

  root.toHex = function(H, S, L) {
    return conv.rgb.hex(conv.husl.rgb([H, S, L]));
  };

  root.p = {};

  root.p.toRGB = function(H, S, L) {
    return conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L]))));
  };

  root.p.toHex = function(H, S, L) {
    return conv.rgb.hex(conv.xyz.rgb(conv.luv.xyz(conv.lch.luv(conv.huslp.lch([H, S, L])))));
  };

  root.p.fromRGB = function(R, G, B) {
    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz([R, G, B]))));
  };

  root.p.fromHex = function(hex) {
    return conv.lch.huslp(conv.luv.lch(conv.xyz.luv(conv.rgb.xyz(conv.hex.rgb(hex)))));
  };

  root._conv = conv;

  root._round = round;

  root._maxChroma = maxChroma;

  root._maxChromaD = maxChromaD;

  root._hradExtremum = _hradExtremum;

  root._rgbPrepare = rgbPrepare;

  if (!((typeof module !== "undefined" && module !== null) || (typeof jQuery !== "undefined" && jQuery !== null) || (typeof requirejs !== "undefined" && requirejs !== null))) {
    this.HUSL = root;
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = root;
  }

  if (typeof jQuery !== "undefined" && jQuery !== null) {
    jQuery.husl = root;
  }

  if ((typeof requirejs !== "undefined" && requirejs !== null) && (typeof define !== "undefined" && define !== null)) {
    define(root);
  }

}).call(this);

},{}],10:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule AutoFocusMixin
 * @typechecks static-only
 */

"use strict";

var focusNode = require("./focusNode");

var AutoFocusMixin = {
  componentDidMount: function() {
    if (this.props.autoFocus) {
      focusNode(this.getDOMNode());
    }
  }
};

module.exports = AutoFocusMixin;

},{"./focusNode":109}],11:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CSSProperty
 */

"use strict";

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  columnCount: true,
  fillOpacity: true,
  flex: true,
  flexGrow: true,
  flexShrink: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  widows: true,
  zIndex: true,
  zoom: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function(prop) {
  prefixes.forEach(function(prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],12:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

"use strict";

var CSSProperty = require("./CSSProperty");

var dangerousStyleValue = require("./dangerousStyleValue");
var escapeTextForBrowser = require("./escapeTextForBrowser");
var hyphenate = require("./hyphenate");
var memoizeStringOnly = require("./memoizeStringOnly");

var processStyleName = memoizeStringOnly(function(styleName) {
  return escapeTextForBrowser(hyphenate(styleName));
});

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"./CSSProperty":11,"./dangerousStyleValue":104,"./escapeTextForBrowser":107,"./hyphenate":119,"./memoizeStringOnly":129}],13:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ChangeEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactUpdates = require("./ReactUpdates");
var SyntheticEvent = require("./SyntheticEvent");

var isEventSupported = require("./isEventSupported");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topChange,
      topLevelTypes.topClick,
      topLevelTypes.topFocus,
      topLevelTypes.topInput,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    !('documentMode' in document) || document.documentMode > 8
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactEventTopLevelCallback. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    !('documentMode' in document) || document.documentMode > 9
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventConstants":23,"./EventPluginHub":25,"./EventPropagators":28,"./ExecutionEnvironment":29,"./ReactUpdates":80,"./SyntheticEvent":87,"./isEventSupported":122,"./isTextInputElement":124,"./keyOf":128}],14:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ClientReactRootIndex
 * @typechecks
 */

"use strict";

var nextReactRootIndex = 0;

var ClientReactRootIndex = {
  createReactRootIndex: function() {
    return nextReactRootIndex++;
  }
};

module.exports = ClientReactRootIndex;

},{}],15:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CompositionEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactInputSelection = require("./ReactInputSelection");
var SyntheticCompositionEvent = require("./SyntheticCompositionEvent");

var getTextContentAccessor = require("./getTextContentAccessor");
var keyOf = require("./keyOf");

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var useCompositionEvent = (
  ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window
);

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. In Korean, for example,
// the compositionend event contains only one character regardless of
// how many characters have been composed since compositionstart.
// We therefore use the fallback data while still using the native
// events as triggers.
var useFallbackData = (
  !useCompositionEvent ||
  'documentMode' in document && document.documentMode > 8
);

var topLevelTypes = EventConstants.topLevelTypes;
var currentComposition = null;

// Events and their corresponding property names.
var eventTypes = {
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionStart,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionUpdate,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  }
};

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Helper class stores information about selection and document state
 * so we can figure out what changed at a later date.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this.root = root;
  this.startSelection = ReactInputSelection.getSelection(root);
  this.startValue = this.getText();
}

/**
 * Get current text of input.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getText = function() {
  return this.root.value || this.root[getTextContentAccessor()];
};

/**
 * Text that has changed since the start of composition.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getData = function() {
  var endValue = this.getText();
  var prefixLength = this.startSelection.start;
  var suffixLength = this.startValue.length - this.startSelection.end;

  return endValue.substr(
    prefixLength,
    endValue.length - suffixLength - prefixLength
  );
};

/**
 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
 * `onCompositionEnd` events on inputs, textareas and contentEditable
 * nodes.
 */
var CompositionEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var eventType;
    var data;

    if (useCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }

    if (useFallbackData) {
      // The current composition is stored statically and must not be
      // overwritten while composition continues.
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = new FallbackCompositionState(topLevelTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          data = currentComposition.getData();
          currentComposition = null;
        }
      }
    }

    if (eventType) {
      var event = SyntheticCompositionEvent.getPooled(
        eventType,
        topLevelTargetID,
        nativeEvent
      );
      if (data) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = data;
      }
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
  }
};

module.exports = CompositionEventPlugin;

},{"./EventConstants":23,"./EventPropagators":28,"./ExecutionEnvironment":29,"./ReactInputSelection":61,"./SyntheticCompositionEvent":85,"./getTextContentAccessor":117,"./keyOf":128}],16:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

"use strict";

var Danger = require("./Danger");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * The DOM property to use when setting text content.
 *
 * @type {string}
 * @private
 */
var textContentAccessor = getTextContentAccessor();

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  var childNodes = parentNode.childNodes;
  if (childNodes[index] === childNode) {
    return;
  }
  // If `childNode` is already a child of `parentNode`, remove it so that
  // computing `childNodes[index]` takes into account the removal.
  if (childNode.parentNode === parentNode) {
    parentNode.removeChild(childNode);
  }
  if (index >= childNodes.length) {
    parentNode.appendChild(childNode);
  } else {
    parentNode.insertBefore(childNode, childNodes[index]);
  }
}

var updateTextContent;
if (textContentAccessor === 'textContent') {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    node.textContent = text;
  };
} else {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    // In order to preserve newlines correctly, we can't use .innerText to set
    // the contents (see #1080), so we empty the element then append a text node
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    if (text) {
      var doc = node.ownerDocument || document;
      node.appendChild(doc.createTextNode(text));
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  updateTextContent: updateTextContent,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; update = updates[i]; i++) {
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; update = updates[k]; k++) {
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          updateTextContent(
            update.parentNode,
            update.textContent
          );
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"./Danger":19,"./ReactMultiChildUpdateTypes":67,"./getTextContentAccessor":117}],17:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

"use strict";

var invariant = require("./invariant");

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== process.env.NODE_ENV ? invariant(
        !DOMProperty.isStandardName[propName],
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName[propName]));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      var attributeName = DOMAttributeNames[propName];
      if (attributeName) {
        DOMProperty.getPossibleStandardName[attributeName] = propName;
      }

      DOMProperty.getAttributeName[propName] = attributeName || lowerCased;

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames[propName] || propName;

      var mutationMethod = DOMMutationMethods[propName];
      if (mutationMethod) {
        DOMProperty.getMutationMethod[propName] = mutationMethod;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        propConfig & DOMPropertyInjection.MUST_USE_ATTRIBUTE;
      DOMProperty.mustUseProperty[propName] =
        propConfig & DOMPropertyInjection.MUST_USE_PROPERTY;
      DOMProperty.hasSideEffects[propName] =
        propConfig & DOMPropertyInjection.HAS_SIDE_EFFECTS;
      DOMProperty.hasBooleanValue[propName] =
        propConfig & DOMPropertyInjection.HAS_BOOLEAN_VALUE;
      DOMProperty.hasPositiveNumericValue[propName] =
        propConfig & DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE;

      ("production" !== process.env.NODE_ENV ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== process.env.NODE_ENV ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== process.env.NODE_ENV ? invariant(
        !DOMProperty.hasBooleanValue[propName] ||
          !DOMProperty.hasPositiveNumericValue[propName],
        'DOMProperty: Cannot have both boolean and positive numeric value: %s',
        propName
      ) : invariant(!DOMProperty.hasBooleanValue[propName] ||
        !DOMProperty.hasPositiveNumericValue[propName]));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],18:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

"use strict";

var DOMProperty = require("./DOMProperty");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var memoizeStringOnly = require("./memoizeStringOnly");
var warning = require("./warning");

function shouldIgnoreValue(name, value) {
  return value == null ||
    DOMProperty.hasBooleanValue[name] && !value ||
    DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);
}

var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
  return escapeTextForBrowser(name) + '="';
});

if ("production" !== process.env.NODE_ENV) {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps[name] || warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ?
      lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName];

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    ("production" !== process.env.NODE_ENV ? warning(
      standardName == null,
      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
    ) : null);

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function(id) {
    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +
      escapeTextForBrowser(id) + '"';
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      if (DOMProperty.hasBooleanValue[name]) {
        return escapeTextForBrowser(attributeName);
      }
      return processAttributeNameAndPrefix(attributeName) +
        escapeTextForBrowser(value) + '"';
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return processAttributeNameAndPrefix(name) +
        escapeTextForBrowser(value) + '"';
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          propName
        );
        if (!DOMProperty.hasSideEffects[name] ||
            node[propName] !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

}).call(this,require("qvMYcC"))
},{"./DOMProperty":17,"./escapeTextForBrowser":107,"./memoizeStringOnly":129,"./warning":143,"qvMYcC":146}],19:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createNodesFromMarkup = require("./createNodesFromMarkup");
var emptyFunction = require("./emptyFunction");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a Worker ' +
      'thread. This is likely a bug in the framework. Please report ' +
      'immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== process.env.NODE_ENV ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      for (var resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (i = 0; i < renderNodes.length; ++i) {
        var renderNode = renderNodes[i];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== process.env.NODE_ENV ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== process.env.NODE_ENV) {
          console.error(
            "Danger: Discarding unexpected node:",
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== process.env.NODE_ENV ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== process.env.NODE_ENV ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. This is likely a bug in the framework. Please report ' +
      'immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    ("production" !== process.env.NODE_ENV ? invariant(
      oldChild.tagName.toLowerCase() !== 'html',
      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
      '<html> node. This is because browser quirks make this unreliable ' +
      'and/or slow. If you want to render to the root you must use ' +
      'server rendering. See renderComponentToString().'
    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

}).call(this,require("qvMYcC"))
},{"./ExecutionEnvironment":29,"./createNodesFromMarkup":102,"./emptyFunction":105,"./getMarkupWrap":114,"./invariant":121,"qvMYcC":146}],20:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DefaultDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = require("./DOMProperty");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;

var DefaultDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    // autoFocus is polyfilled/normalized by AutoFocusMixin
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    className: MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    crossOrigin: null,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    download: null,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    frameBorder: MUST_USE_ATTRIBUTE,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    href: null,
    hrefLang: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: null,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    mediaGroup: null,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    noValidate: HAS_BOOLEAN_VALUE,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    sandbox: null,
    scope: null,
    scrollLeft: MUST_USE_PROPERTY,
    scrollTop: MUST_USE_PROPERTY,
    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    srcDoc: MUST_USE_PROPERTY,
    srcSet: null,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
    autoCorrect: null, // Supported in Mobile Safari for keyboard hints
    property: null, // Supports OG in meta tags

    /**
     * SVG Properties
     */
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    textAnchor: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    className: 'class',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    htmlFor: 'for',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeLinecap: 'stroke-linecap',
    strokeWidth: 'stroke-width',
    textAnchor: 'text-anchor',
    viewBox: 'viewBox'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    encType: 'enctype',
    hrefLang: 'hreflang',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck',
    srcDoc: 'srcdoc',
    srcSet: 'srcset'
  }
};

module.exports = DefaultDOMPropertyConfig;

},{"./DOMProperty":17}],21:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DefaultEventPluginOrder
 */

"use strict";

 var keyOf = require("./keyOf");

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({CompositionEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"./keyOf":128}],22:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");

var ReactMount = require("./ReactMount");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({onMouseEnter: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  },
  mouseLeave: {
    registrationName: keyOf({onMouseLeave: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  }
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (topLevelTarget.window === topLevelTarget) {
      // `topLevelTarget` is probably a window object.
      win = topLevelTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = topLevelTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        win;
    } else {
      from = win;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    leave.type = 'mouseleave';
    leave.target = from;
    leave.relatedTarget = to;

    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );
    enter.type = 'mouseenter';
    enter.target = to;
    enter.relatedTarget = from;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventConstants":23,"./EventPropagators":28,"./ReactMount":64,"./SyntheticMouseEvent":90,"./keyOf":128}],23:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventConstants
 */

"use strict";

var keyMirror = require("./keyMirror");

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topReset: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"./keyMirror":127}],24:[function(require,module,exports){
(function (process){
/**
 * @providesModule EventListener
 */

var emptyFunction = require("./emptyFunction");

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function() {
          target.detachEvent(eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function(target, eventType, callback) {
    if (!target.addEventListener) {
      if ("production" !== process.env.NODE_ENV) {
        console.error(
          'Attempted to listen to events during the capture phase on a ' +
          'browser that does not support the capture phase. Your application ' +
          'will not receive some events.'
        );
      }
      return {
        remove: emptyFunction
      };
    } else {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    }
  }
};

module.exports = EventListener;

}).call(this,require("qvMYcC"))
},{"./emptyFunction":105,"qvMYcC":146}],25:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginHub
 */

"use strict";

var EventPluginRegistry = require("./EventPluginRegistry");
var EventPluginUtils = require("./EventPluginUtils");
var ExecutionEnvironment = require("./ExecutionEnvironment");

var accumulate = require("./accumulate");
var forEachAccumulated = require("./forEachAccumulated");
var invariant = require("./invariant");
var isEventSupported = require("./isEventSupported");
var monitorCodeUse = require("./monitorCodeUse");

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var InstanceHandle = null;

function validateInstanceHandle() {
  var invalid = !InstanceHandle||
    !InstanceHandle.traverseTwoPhase ||
    !InstanceHandle.traverseEnterLeave;
  if (invalid) {
    throw new Error('InstanceHandle not injected before use!');
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedMount
     * @public
     */
    injectMount: EventPluginUtils.injection.injectMount,

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== process.env.NODE_ENV) {
        validateInstanceHandle();
      }
    },

    getInstanceHandle: function() {
      if ("production" !== process.env.NODE_ENV) {
        validateInstanceHandle();
      }
      return InstanceHandle;
    },

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

  registrationNameModules: EventPluginRegistry.registrationNameModules,

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'Cannot call putListener() in a non-DOM environment.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== process.env.NODE_ENV ? invariant(
      !listener || typeof listener === 'function',
      'Expected %s listener to be a function, instead got type %s',
      registrationName, typeof listener
    ) : invariant(!listener || typeof listener === 'function'));

    if ("production" !== process.env.NODE_ENV) {
      // IE8 has no API for event capturing and the `onScroll` event doesn't
      // bubble.
      if (registrationName === 'onScroll' &&
          !isEventSupported('scroll', true)) {
        monitorCodeUse('react_no_scroll_event');
        console.warn('This browser doesn\'t support the `onScroll` event');
      }
    }
    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulate(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulate(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== process.env.NODE_ENV ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  },

  __getListenerBank: function() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

}).call(this,require("qvMYcC"))
},{"./EventPluginRegistry":26,"./EventPluginUtils":27,"./ExecutionEnvironment":29,"./accumulate":96,"./forEachAccumulated":110,"./invariant":121,"./isEventSupported":122,"./monitorCodeUse":134,"qvMYcC":146}],26:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== process.env.NODE_ENV ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== process.env.NODE_ENV ? invariant(
        publishEventForPlugin(
          publishedEvents[eventName],
          PluginModule,
          eventName
        ),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(
        publishedEvents[eventName],
        PluginModule,
        eventName
      )));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !EventPluginRegistry.eventNameDispatchConfigs[eventName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'event name, `%s`.',
    eventName
  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs[eventName]));
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(
          phasedRegistrationName,
          PluginModule,
          eventName
        );
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(
      dispatchConfig.registrationName,
      PluginModule,
      eventName
    );
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !EventPluginRegistry.registrationNameModules[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] =
    PluginModule.eventTypes[eventName].dependencies;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than once.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== process.env.NODE_ENV ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],27:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginUtils
 */

"use strict";

var EventConstants = require("./EventConstants");

var invariant = require("./invariant");

/**
 * Injected dependencies:
 */

/**
 * - `Mount`: [required] Module that can convert between React dom IDs and
 *   actual node references.
 */
var injection = {
  Mount: null,
  injectMount: function(InjectedMount) {
    injection.Mount = InjectedMount;
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? invariant(
        InjectedMount && InjectedMount.getNode,
        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
        'is missing getNode.'
      ) : invariant(InjectedMount && InjectedMount.getNode));
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}


var validateEventDispatches;
if ("production" !== process.env.NODE_ENV) {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== process.env.NODE_ENV ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  event.currentTarget = injection.Mount.getNode(domID);
  var returnValue = listener(event, domID);
  event.currentTarget = null;
  return returnValue;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, executeDispatch) {
  forEachEventDispatch(event, executeDispatch);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== process.env.NODE_ENV ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatch: executeDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,
  injection: injection,
  useTouchEvents: false
};

module.exports = EventPluginUtils;

}).call(this,require("qvMYcC"))
},{"./EventConstants":23,"./invariant":121,"qvMYcC":146}],28:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPropagators
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");

var accumulate = require("./accumulate");
var forEachAccumulated = require("./forEachAccumulated");

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== process.env.NODE_ENV) {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners = accumulate(event._dispatchListeners, listener);
    event._dispatchIDs = accumulate(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners = accumulate(event._dispatchListeners, listener);
      event._dispatchIDs = accumulate(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

}).call(this,require("qvMYcC"))
},{"./EventConstants":23,"./EventPluginHub":25,"./accumulate":96,"./forEachAccumulated":110,"qvMYcC":146}],29:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = typeof window !== 'undefined';

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && (window.addEventListener || window.attachEvent),

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],30:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule LinkedValueUtils
 * @typechecks static-only
 */

"use strict";

var ReactPropTypes = require("./ReactPropTypes");

var invariant = require("./invariant");
var warning = require("./warning");

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(input) {
  ("production" !== process.env.NODE_ENV ? invariant(
      input.props.checkedLink == null || input.props.valueLink == null,
      'Cannot provide a checkedLink and a valueLink. If you want to use ' +
      'checkedLink, you probably don\'t want to use valueLink and vice versa.'
  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
}
function _assertValueLink(input) {
  _assertSingleLink(input);
  ("production" !== process.env.NODE_ENV ? invariant(
    input.props.value == null && input.props.onChange == null,
    'Cannot provide a valueLink and a value or onChange event. If you want ' +
    'to use value or onChange, you probably don\'t want to use valueLink.'
  ) : invariant(input.props.value == null && input.props.onChange == null));
}

function _assertCheckedLink(input) {
  _assertSingleLink(input);
  ("production" !== process.env.NODE_ENV ? invariant(
    input.props.checked == null && input.props.onChange == null,
    'Cannot provide a checkedLink and a checked property or onChange event. ' +
    'If you want to use checked or onChange, you probably don\'t want to ' +
    'use checkedLink'
  ) : invariant(input.props.checked == null && input.props.onChange == null));
}

/**
 * @param {SyntheticEvent} e change event to handle
 */
function _handleLinkedValueChange(e) {
  /*jshint validthis:true */
  this.props.valueLink.requestChange(e.target.value);
}

/**
  * @param {SyntheticEvent} e change event to handle
  */
function _handleLinkedCheckChange(e) {
  /*jshint validthis:true */
  this.props.checkedLink.requestChange(e.target.checked);
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  Mixin: {
    propTypes: {
      value: function(props, propName, componentName) {
        if ("production" !== process.env.NODE_ENV) {
          ("production" !== process.env.NODE_ENV ? warning(
            !props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled,
            'You provided a `value` prop to a form field without an ' +
            '`onChange` handler. This will render a read-only field. If ' +
            'the field should be mutable use `defaultValue`. Otherwise, ' +
            'set either `onChange` or `readOnly`.'
          ) : null);
        }
      },
      checked: function(props, propName, componentName) {
        if ("production" !== process.env.NODE_ENV) {
          ("production" !== process.env.NODE_ENV ? warning(
            !props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled,
            'You provided a `checked` prop to a form field without an ' +
            '`onChange` handler. This will render a read-only field. If ' +
            'the field should be mutable use `defaultChecked`. Otherwise, ' +
            'set either `onChange` or `readOnly`.'
          ) : null);
        }
      },
      onChange: ReactPropTypes.func
    }
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return input.props.valueLink.value;
    }
    return input.props.value;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function(input) {
    if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return input.props.checkedLink.value;
    }
    return input.props.checked;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return _handleLinkedValueChange;
    } else if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return _handleLinkedCheckChange;
    }
    return input.props.onChange;
  }
};

module.exports = LinkedValueUtils;

}).call(this,require("qvMYcC"))
},{"./ReactPropTypes":73,"./invariant":121,"./warning":143,"qvMYcC":146}],31:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");

var emptyFunction = require("./emptyFunction");

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"./EventConstants":23,"./emptyFunction":105}],32:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule PooledClass
 */

"use strict";

var invariant = require("./invariant");

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  ("production" !== process.env.NODE_ENV ? invariant(
    instance instanceof Klass,
    'Trying to release an instance into a pool of a different type.'
  ) : invariant(instance instanceof Klass));
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],33:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule React
 */

"use strict";

var DOMPropertyOperations = require("./DOMPropertyOperations");
var EventPluginUtils = require("./EventPluginUtils");
var ReactChildren = require("./ReactChildren");
var ReactComponent = require("./ReactComponent");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactDOM = require("./ReactDOM");
var ReactDOMComponent = require("./ReactDOMComponent");
var ReactDefaultInjection = require("./ReactDefaultInjection");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var ReactMultiChild = require("./ReactMultiChild");
var ReactPerf = require("./ReactPerf");
var ReactPropTypes = require("./ReactPropTypes");
var ReactServerRendering = require("./ReactServerRendering");
var ReactTextComponent = require("./ReactTextComponent");

var onlyChild = require("./onlyChild");

ReactDefaultInjection.inject();

var React = {
  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    only: onlyChild
  },
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    EventPluginUtils.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactCompositeComponent.createClass,
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  renderComponent: ReactPerf.measure(
    'React',
    'renderComponent',
    ReactMount.renderComponent
  ),
  renderComponentToString: ReactServerRendering.renderComponentToString,
  renderComponentToStaticMarkup:
    ReactServerRendering.renderComponentToStaticMarkup,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  isValidClass: ReactCompositeComponent.isValidClass,
  isValidComponent: ReactComponent.isValidComponent,
  withContext: ReactContext.withContext,
  __internals: {
    Component: ReactComponent,
    CurrentOwner: ReactCurrentOwner,
    DOMComponent: ReactDOMComponent,
    DOMPropertyOperations: DOMPropertyOperations,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    MultiChild: ReactMultiChild,
    TextComponent: ReactTextComponent
  }
};

if ("production" !== process.env.NODE_ENV) {
  var ExecutionEnvironment = require("./ExecutionEnvironment");
  if (ExecutionEnvironment.canUseDOM &&
      window.top === window.self &&
      navigator.userAgent.indexOf('Chrome') > -1) {
    console.debug(
      'Download the React DevTools for a better development experience: ' +
      'http://fb.me/react-devtools'
    );
  }
}

// Version exists only in the open-source version of React, not in Facebook's
// internal version.
React.version = '0.10.0';

module.exports = React;

}).call(this,require("qvMYcC"))
},{"./DOMPropertyOperations":18,"./EventPluginUtils":27,"./ExecutionEnvironment":29,"./ReactChildren":35,"./ReactComponent":36,"./ReactCompositeComponent":38,"./ReactContext":39,"./ReactCurrentOwner":40,"./ReactDOM":41,"./ReactDOMComponent":43,"./ReactDefaultInjection":53,"./ReactInstanceHandles":62,"./ReactMount":64,"./ReactMultiChild":66,"./ReactPerf":69,"./ReactPropTypes":73,"./ReactServerRendering":77,"./ReactTextComponent":79,"./onlyChild":137,"qvMYcC":146}],34:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactBrowserComponentMixin
 */

"use strict";

var ReactMount = require("./ReactMount");

var invariant = require("./invariant");

var ReactBrowserComponentMixin = {
  /**
   * Returns the DOM node rendered by this component.
   *
   * @return {DOMElement} The root node of this component.
   * @final
   * @protected
   */
  getDOMNode: function() {
    ("production" !== process.env.NODE_ENV ? invariant(
      this.isMounted(),
      'getDOMNode(): A component must be mounted to have a DOM node.'
    ) : invariant(this.isMounted()));
    return ReactMount.getNode(this._rootNodeID);
  }
};

module.exports = ReactBrowserComponentMixin;

}).call(this,require("qvMYcC"))
},{"./ReactMount":64,"./invariant":121,"qvMYcC":146}],35:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactChildren
 */

"use strict";

var PooledClass = require("./PooledClass");

var invariant = require("./invariant");
var traverseAllChildren = require("./traverseAllChildren");

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var threeArgumentPooler = PooledClass.threeArgumentPooler;

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.forEachFunction = forEachFunction;
  this.forEachContext = forEachContext;
}
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i) {
  var forEachBookKeeping = traverseContext;
  forEachBookKeeping.forEachFunction.call(
    forEachBookKeeping.forEachContext, child, i);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc.
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext =
    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, mapFunction, mapContext) {
  this.mapResult = mapResult;
  this.mapFunction = mapFunction;
  this.mapContext = mapContext;
}
PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i) {
  var mapBookKeeping = traverseContext;
  var mapResult = mapBookKeeping.mapResult;
  var mappedChild =
    mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
  // We found a component instance
  ("production" !== process.env.NODE_ENV ? invariant(
    !mapResult.hasOwnProperty(name),
    'ReactChildren.map(...): Encountered two children with the same key, ' +
    '`%s`. Children keys must be unique.',
    name
  ) : invariant(!mapResult.hasOwnProperty(name)));
  mapResult[name] = mappedChild;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * TODO: This may likely break any calls to `ReactChildren.map` that were
 * previously relying on the fact that we guarded against null children.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} mapFunction.
 * @param {*} mapContext Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var mapResult = {};
  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
  return mapResult;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren
};

module.exports = ReactChildren;

}).call(this,require("qvMYcC"))
},{"./PooledClass":32,"./invariant":121,"./traverseAllChildren":142,"qvMYcC":146}],36:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactComponent
 */

"use strict";

var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactOwner = require("./ReactOwner");
var ReactUpdates = require("./ReactUpdates");

var invariant = require("./invariant");
var keyMirror = require("./keyMirror");
var merge = require("./merge");
var monitorCodeUse = require("./monitorCodeUse");

/**
 * Every React component is in one of these life cycles.
 */
var ComponentLifeCycle = keyMirror({
  /**
   * Mounted components have a DOM node representation and are capable of
   * receiving new props.
   */
  MOUNTED: null,
  /**
   * Unmounted components are inactive and cannot receive new props.
   */
  UNMOUNTED: null
});

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */

var ownerHasExplicitKeyWarning = {};
var ownerHasPropertyWarning = {};
var ownerHasMonitoredObjectMap = {};

var NUMERIC_PROPERTY_REGEX = /^\d+$/;

var injected = false;

/**
 * Optionally injectable environment dependent cleanup hook. (server vs.
 * browser etc). Example: A browser system caches DOM nodes based on component
 * ID and must remove that cache entry when this instance is unmounted.
 *
 * @private
 */
var unmountIDFromEnvironment = null;

/**
 * The "image" of a component tree, is the platform specific (typically
 * serialized) data that represents a tree of lower level UI building blocks.
 * On the web, this "image" is HTML markup which describes a construction of
 * low level `div` and `span` nodes. Other platforms may have different
 * encoding of this "image". This must be injected.
 *
 * @private
 */
var mountImageIntoNode = null;

/**
 * Warn if the component doesn't have an explicit key assigned to it.
 * This component is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactComponent} component Component that requires a key.
 */
function validateExplicitKey(component) {
  if (component.__keyValidated__ || component.props.key != null) {
    return;
  }
  component.__keyValidated__ = true;

  // We can't provide friendly warnings for top level components.
  if (!ReactCurrentOwner.current) {
    return;
  }

  // Name of the component whose render method tried to pass children.
  var currentName = ReactCurrentOwner.current.constructor.displayName;
  if (ownerHasExplicitKeyWarning.hasOwnProperty(currentName)) {
    return;
  }
  ownerHasExplicitKeyWarning[currentName] = true;

  var message = 'Each child in an array should have a unique "key" prop. ' +
                'Check the render method of ' + currentName + '.';

  var childOwnerName = null;
  if (!component.isOwnedBy(ReactCurrentOwner.current)) {
    // Name of the component that originally created this child.
    childOwnerName =
      component._owner &&
      component._owner.constructor.displayName;

    // Usually the current owner is the offender, but if it accepts
    // children as a property, it may be the creator of the child that's
    // responsible for assigning it a key.
    message += ' It was passed a child from ' + childOwnerName + '.';
  }

  message += ' See http://fb.me/react-warning-keys for more information.';
  monitorCodeUse('react_key_warning', {
    component: currentName,
    componentOwner: childOwnerName
  });
  console.warn(message);
}

/**
 * Warn if the key is being defined as an object property but has an incorrect
 * value.
 *
 * @internal
 * @param {string} name Property name of the key.
 * @param {ReactComponent} component Component that requires a key.
 */
function validatePropertyKey(name) {
  if (NUMERIC_PROPERTY_REGEX.test(name)) {
    // Name of the component whose render method tried to pass children.
    var currentName = ReactCurrentOwner.current.constructor.displayName;
    if (ownerHasPropertyWarning.hasOwnProperty(currentName)) {
      return;
    }
    ownerHasPropertyWarning[currentName] = true;

    monitorCodeUse('react_numeric_key_warning');
    console.warn(
      'Child objects should have non-numeric keys so ordering is preserved. ' +
      'Check the render method of ' + currentName + '. ' +
      'See http://fb.me/react-warning-keys for more information.'
    );
  }
}

/**
 * Log that we're using an object map. We're considering deprecating this
 * feature and replace it with proper Map and ImmutableMap data structures.
 *
 * @internal
 */
function monitorUseOfObjectMap() {
  // Name of the component whose render method tried to pass children.
  // We only use this to avoid spewing the logs. We lose additional
  // owner stacks but hopefully one level is enough to trace the source.
  var currentName = (ReactCurrentOwner.current &&
                    ReactCurrentOwner.current.constructor.displayName) || '';
  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
    return;
  }
  ownerHasMonitoredObjectMap[currentName] = true;
  monitorCodeUse('react_object_map_children');
}

/**
 * Ensure that every component either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {*} component Statically passed child of any type.
 * @return {boolean}
 */
function validateChildKeys(component) {
  if (Array.isArray(component)) {
    for (var i = 0; i < component.length; i++) {
      var child = component[i];
      if (ReactComponent.isValidComponent(child)) {
        validateExplicitKey(child);
      }
    }
  } else if (ReactComponent.isValidComponent(component)) {
    // This component was passed in a valid location.
    component.__keyValidated__ = true;
  } else if (component && typeof component === 'object') {
    monitorUseOfObjectMap();
    for (var name in component) {
      validatePropertyKey(name, component);
    }
  }
}

/**
 * Components are the basic units of composition in React.
 *
 * Every component accepts a set of keyed input parameters known as "props" that
 * are initialized by the constructor. Once a component is mounted, the props
 * can be mutated using `setProps` or `replaceProps`.
 *
 * Every component is capable of the following operations:
 *
 *   `mountComponent`
 *     Initializes the component, renders markup, and registers event listeners.
 *
 *   `receiveComponent`
 *     Updates the rendered DOM nodes to match the given component.
 *
 *   `unmountComponent`
 *     Releases any resources allocated by this component.
 *
 * Components can also be "owned" by other components. Being owned by another
 * component means being constructed by that component. This is different from
 * being the child of a component, which means having a DOM representation that
 * is a child of the DOM representation of that component.
 *
 * @class ReactComponent
 */
var ReactComponent = {

  injection: {
    injectEnvironment: function(ReactComponentEnvironment) {
      ("production" !== process.env.NODE_ENV ? invariant(
        !injected,
        'ReactComponent: injectEnvironment() can only be called once.'
      ) : invariant(!injected));
      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
      unmountIDFromEnvironment =
        ReactComponentEnvironment.unmountIDFromEnvironment;
      ReactComponent.BackendIDOperations =
        ReactComponentEnvironment.BackendIDOperations;
      ReactComponent.ReactReconcileTransaction =
        ReactComponentEnvironment.ReactReconcileTransaction;
      injected = true;
    }
  },

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid component.
   * @final
   */
  isValidComponent: function(object) {
    if (!object || !object.type || !object.type.prototype) {
      return false;
    }
    // This is the safer way of duck checking the type of instance this is.
    // The object can be a generic descriptor but the type property refers to
    // the constructor and it's prototype can be used to inspect the type that
    // will actually get mounted.
    var prototype = object.type.prototype;
    return (
      typeof prototype.mountComponentIntoNode === 'function' &&
      typeof prototype.receiveComponent === 'function'
    );
  },

  /**
   * @internal
   */
  LifeCycle: ComponentLifeCycle,

  /**
   * Injected module that provides ability to mutate individual properties.
   * Injected into the base class because many different subclasses need access
   * to this.
   *
   * @internal
   */
  BackendIDOperations: null,

  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  /**
   * Base functionality for every ReactComponent constructor. Mixed into the
   * `ReactComponent` prototype, but exposed statically for easy access.
   *
   * @lends {ReactComponent.prototype}
   */
  Mixin: {

    /**
     * Checks whether or not this component is mounted.
     *
     * @return {boolean} True if mounted, false otherwise.
     * @final
     * @protected
     */
    isMounted: function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    },

    /**
     * Sets a subset of the props.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    setProps: function(partialProps, callback) {
      // Merge with `_pendingProps` if it exists, otherwise with existing props.
      this.replaceProps(
        merge(this._pendingProps || this.props, partialProps),
        callback
      );
    },

    /**
     * Replaces all of the props.
     *
     * @param {object} props New props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    replaceProps: function(props, callback) {
      ("production" !== process.env.NODE_ENV ? invariant(
        this.isMounted(),
        'replaceProps(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      ("production" !== process.env.NODE_ENV ? invariant(
        this._mountDepth === 0,
        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
        'component with a parent. This is an anti-pattern since props will ' +
        'get reactively updated when rendered. Instead, change the owner\'s ' +
        '`render` method to pass the correct value as props to the component ' +
        'where it is created.'
      ) : invariant(this._mountDepth === 0));
      this._pendingProps = props;
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Base constructor for all React components.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.construct.call(this, ...)`.
     *
     * @param {?object} initialProps
     * @param {*} children
     * @internal
     */
    construct: function(initialProps, children) {
      this.props = initialProps || {};
      // Record the component responsible for creating this component.
      this._owner = ReactCurrentOwner.current;
      // All components start unmounted.
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

      this._pendingProps = null;
      this._pendingCallbacks = null;

      // Unlike _pendingProps and _pendingCallbacks, we won't use null to
      // indicate that nothing is pending because it's possible for a component
      // to have a null owner. Instead, an owner change is pending when
      // this._owner !== this._pendingOwner.
      this._pendingOwner = this._owner;

      // Children can be more than one argument
      var childrenLength = arguments.length - 1;
      if (childrenLength === 1) {
        if ("production" !== process.env.NODE_ENV) {
          validateChildKeys(children);
        }
        this.props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          if ("production" !== process.env.NODE_ENV) {
            validateChildKeys(arguments[i + 1]);
          }
          childArray[i] = arguments[i + 1];
        }
        this.props.children = childArray;
      }
    },

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * NOTE: This does not insert any nodes into the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {number} mountDepth number of components in the owner hierarchy.
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @internal
     */
    mountComponent: function(rootID, transaction, mountDepth) {
      ("production" !== process.env.NODE_ENV ? invariant(
        !this.isMounted(),
        'mountComponent(%s, ...): Can only mount an unmounted component. ' +
        'Make sure to avoid storing components between renders or reusing a ' +
        'single component instance in multiple places.',
        rootID
      ) : invariant(!this.isMounted()));
      var props = this.props;
      if (props.ref != null) {
        ReactOwner.addComponentAsRefTo(this, props.ref, this._owner);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
      // Effectively: return '';
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * NOTE: This does not remove any nodes from the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.unmountComponent.call(this)`.
     *
     * @internal
     */
    unmountComponent: function() {
      ("production" !== process.env.NODE_ENV ? invariant(
        this.isMounted(),
        'unmountComponent(): Can only unmount a mounted component.'
      ) : invariant(this.isMounted()));
      var props = this.props;
      if (props.ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, props.ref, this._owner);
      }
      unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    },

    /**
     * Given a new instance of this component, updates the rendered DOM nodes
     * as if that instance was rendered instead.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
     *
     * @param {object} nextComponent Next set of properties.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    receiveComponent: function(nextComponent, transaction) {
      ("production" !== process.env.NODE_ENV ? invariant(
        this.isMounted(),
        'receiveComponent(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      this._pendingOwner = nextComponent._owner;
      this._pendingProps = nextComponent.props;
      this._performUpdateIfNecessary(transaction);
    },

    /**
     * Call `_performUpdateIfNecessary` within a new transaction.
     *
     * @internal
     */
    performUpdateIfNecessary: function() {
      var transaction = ReactComponent.ReactReconcileTransaction.getPooled();
      transaction.perform(this._performUpdateIfNecessary, this, transaction);
      ReactComponent.ReactReconcileTransaction.release(transaction);
    },

    /**
     * If `_pendingProps` is set, update the component.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    _performUpdateIfNecessary: function(transaction) {
      if (this._pendingProps == null) {
        return;
      }
      var prevProps = this.props;
      var prevOwner = this._owner;
      this.props = this._pendingProps;
      this._owner = this._pendingOwner;
      this._pendingProps = null;
      this.updateComponent(transaction, prevProps, prevOwner);
    },

    /**
     * Updates the component's currently mounted representation.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {object} prevProps
     * @internal
     */
    updateComponent: function(transaction, prevProps, prevOwner) {
      var props = this.props;
      // If either the owner or a `ref` has changed, make sure the newest owner
      // has stored a reference to `this`, and the previous owner (if different)
      // has forgotten the reference to `this`.
      if (this._owner !== prevOwner || props.ref !== prevProps.ref) {
        if (prevProps.ref != null) {
          ReactOwner.removeComponentAsRefFrom(
            this, prevProps.ref, prevOwner
          );
        }
        // Correct, even if the owner is the same, and only the ref has changed.
        if (props.ref != null) {
          ReactOwner.addComponentAsRefTo(this, props.ref, this._owner);
        }
      }
    },

    /**
     * Mounts this component and inserts it into the DOM.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @internal
     * @see {ReactMount.renderComponent}
     */
    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactComponent.ReactReconcileTransaction.getPooled();
      transaction.perform(
        this._mountComponentIntoNode,
        this,
        rootID,
        container,
        transaction,
        shouldReuseMarkup
      );
      ReactComponent.ReactReconcileTransaction.release(transaction);
    },

    /**
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {ReactReconcileTransaction} transaction
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @private
     */
    _mountComponentIntoNode: function(
        rootID,
        container,
        transaction,
        shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      mountImageIntoNode(markup, container, shouldReuseMarkup);
    },

    /**
     * Checks if this component is owned by the supplied `owner` component.
     *
     * @param {ReactComponent} owner Component to check.
     * @return {boolean} True if `owners` owns this component.
     * @final
     * @internal
     */
    isOwnedBy: function(owner) {
      return this._owner === owner;
    },

    /**
     * Gets another component, that shares the same owner as this one, by ref.
     *
     * @param {string} ref of a sibling Component.
     * @return {?ReactComponent} the actual sibling Component.
     * @final
     * @internal
     */
    getSiblingByRef: function(ref) {
      var owner = this._owner;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }
  }
};

module.exports = ReactComponent;

}).call(this,require("qvMYcC"))
},{"./ReactCurrentOwner":40,"./ReactOwner":68,"./ReactUpdates":80,"./invariant":121,"./keyMirror":127,"./merge":130,"./monitorCodeUse":134,"qvMYcC":146}],37:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

"use strict";

var ReactDOMIDOperations = require("./ReactDOMIDOperations");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");
var ReactReconcileTransaction = require("./ReactReconcileTransaction");

var getReactRootElementInContainer = require("./getReactRootElementInContainer");
var invariant = require("./invariant");


var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;


/**
 * Abstracts away all functionality of `ReactComponent` requires knowledge of
 * the browser context.
 */
var ReactComponentBrowserEnvironment = {
  ReactReconcileTransaction: ReactReconcileTransaction,

  BackendIDOperations: ReactDOMIDOperations,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  },

  /**
   * @param {string} markup Markup string to place into the DOM Element.
   * @param {DOMElement} container DOM Element to insert markup into.
   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
   * container if possible.
   */
  mountImageIntoNode: ReactPerf.measure(
    'ReactComponentBrowserEnvironment',
    'mountImageIntoNode',
    function(markup, container, shouldReuseMarkup) {
      ("production" !== process.env.NODE_ENV ? invariant(
        container && (
          container.nodeType === ELEMENT_NODE_TYPE ||
            container.nodeType === DOC_NODE_TYPE
        ),
        'mountComponentIntoNode(...): Target container is not valid.'
      ) : invariant(container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
          container.nodeType === DOC_NODE_TYPE
      )));

      if (shouldReuseMarkup) {
        if (ReactMarkupChecksum.canReuseMarkup(
          markup,
          getReactRootElementInContainer(container))) {
          return;
        } else {
          ("production" !== process.env.NODE_ENV ? invariant(
            container.nodeType !== DOC_NODE_TYPE,
            'You\'re trying to render a component to the document using ' +
            'server rendering but the checksum was invalid. This usually ' +
            'means you rendered a different component type or props on ' +
            'the client from the one on the server, or your render() ' +
            'methods are impure. React cannot handle this case due to ' +
            'cross-browser quirks by rendering at the document root. You ' +
            'should look for environment dependent code in your components ' +
            'and ensure the props are the same client and server side.'
          ) : invariant(container.nodeType !== DOC_NODE_TYPE));

          if ("production" !== process.env.NODE_ENV) {
            console.warn(
              'React attempted to use reuse markup in a container but the ' +
              'checksum was invalid. This generally means that you are ' +
              'using server rendering and the markup generated on the ' +
              'server was not what the client was expecting. React injected' +
              'new markup to compensate which works but you have lost many ' +
              'of the benefits of server rendering. Instead, figure out ' +
              'why the markup being generated is different on the client ' +
              'or server.'
            );
          }
        }
      }

      ("production" !== process.env.NODE_ENV ? invariant(
        container.nodeType !== DOC_NODE_TYPE,
        'You\'re trying to render a component to the document but ' +
          'you didn\'t use server rendering. We can\'t do this ' +
          'without using server rendering due to cross-browser quirks. ' +
          'See renderComponentToString() for server rendering.'
      ) : invariant(container.nodeType !== DOC_NODE_TYPE));

      container.innerHTML = markup;
    }
  )
};

module.exports = ReactComponentBrowserEnvironment;

}).call(this,require("qvMYcC"))
},{"./ReactDOMIDOperations":45,"./ReactMarkupChecksum":63,"./ReactMount":64,"./ReactPerf":69,"./ReactReconcileTransaction":75,"./getReactRootElementInContainer":116,"./invariant":121,"qvMYcC":146}],38:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactCompositeComponent
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactErrorUtils = require("./ReactErrorUtils");
var ReactOwner = require("./ReactOwner");
var ReactPerf = require("./ReactPerf");
var ReactPropTransferer = require("./ReactPropTransferer");
var ReactPropTypeLocations = require("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");
var ReactUpdates = require("./ReactUpdates");

var instantiateReactComponent = require("./instantiateReactComponent");
var invariant = require("./invariant");
var keyMirror = require("./keyMirror");
var merge = require("./merge");
var mixInto = require("./mixInto");
var monitorCodeUse = require("./monitorCodeUse");
var objMap = require("./objMap");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");
var warning = require("./warning");

/**
 * Policies that describe methods in `ReactCompositeComponentInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base ReactCompositeComponent class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactCompositeComponent`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactCompositeComponentInterface
 * @internal
 */
var ReactCompositeComponentInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(ConvenienceConstructor, displayName) {
    ConvenienceConstructor.componentConstructor.displayName = displayName;
  },
  mixins: function(ConvenienceConstructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(ConvenienceConstructor, mixins[i]);
      }
    }
  },
  childContextTypes: function(ConvenienceConstructor, childContextTypes) {
    var Constructor = ConvenienceConstructor.componentConstructor;
    validateTypeDef(
      Constructor,
      childContextTypes,
      ReactPropTypeLocations.childContext
    );
    Constructor.childContextTypes = merge(
      Constructor.childContextTypes,
      childContextTypes
    );
  },
  contextTypes: function(ConvenienceConstructor, contextTypes) {
    var Constructor = ConvenienceConstructor.componentConstructor;
    validateTypeDef(
      Constructor,
      contextTypes,
      ReactPropTypeLocations.context
    );
    Constructor.contextTypes = merge(Constructor.contextTypes, contextTypes);
  },
  propTypes: function(ConvenienceConstructor, propTypes) {
    var Constructor = ConvenienceConstructor.componentConstructor;
    validateTypeDef(
      Constructor,
      propTypes,
      ReactPropTypeLocations.prop
    );
    Constructor.propTypes = merge(Constructor.propTypes, propTypes);
  },
  statics: function(ConvenienceConstructor, statics) {
    mixStaticSpecIntoComponent(ConvenienceConstructor, statics);
  }
};

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      ("production" !== process.env.NODE_ENV ? invariant(
        typeof typeDef[propName] == 'function',
        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
        'React.PropTypes.',
        Constructor.displayName || 'ReactCompositeComponent',
        ReactPropTypeLocationNames[location],
        propName
      ) : invariant(typeof typeDef[propName] == 'function'));
    }
  }
}

function validateMethodOverride(proto, name) {
  var specPolicy = ReactCompositeComponentInterface[name];

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactCompositeComponentInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactCompositeComponentInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}

function validateLifeCycleOnReplaceState(instance) {
  var compositeLifeCycleState = instance._compositeLifeCycleState;
  ("production" !== process.env.NODE_ENV ? invariant(
    instance.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
    'replaceState(...): Can only update a mounted or mounting component.'
  ) : invariant(instance.isMounted() ||
    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
  ("production" !== process.env.NODE_ENV ? invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE,
    'replaceState(...): Cannot update during an existing state transition ' +
    '(such as within `render`). This could potentially cause an infinite ' +
    'loop so it is forbidden.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE));
  ("production" !== process.env.NODE_ENV ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
    'replaceState(...): Cannot update while unmounting component. This ' +
    'usually means you called setState() on an unmounted component.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
}

/**
 * Custom version of `mixInto` which handles policy validation and reserved
 * specification keys when building `ReactCompositeComponent` classses.
 */
function mixSpecIntoComponent(ConvenienceConstructor, spec) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !isValidClass(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component class as a mixin. Instead, just use a regular object.'
  ) : invariant(!isValidClass(spec)));
  ("production" !== process.env.NODE_ENV ? invariant(
    !ReactComponent.isValidComponent(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactComponent.isValidComponent(spec)));

  var Constructor = ConvenienceConstructor.componentConstructor;
  var proto = Constructor.prototype;
  for (var name in spec) {
    var property = spec[name];
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](ConvenienceConstructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactCompositeComponent methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isCompositeComponentMethod = name in ReactCompositeComponentInterface;
      var isInherited = name in proto;
      var markedDontBind = property && property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isCompositeComponentMethod &&
        !isInherited &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isInherited) {
          // For methods which are defined more than once, call the existing
          // methods before calling the new property.
          if (ReactCompositeComponentInterface[name] ===
              SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(ConvenienceConstructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      return;
    }

    var isInherited = name in ConvenienceConstructor;
    var result = property;
    if (isInherited) {
      var existingProperty = ConvenienceConstructor[name];
      var existingType = typeof existingProperty;
      var propertyType = typeof property;
      ("production" !== process.env.NODE_ENV ? invariant(
        existingType === 'function' && propertyType === 'function',
        'ReactCompositeComponent: You are attempting to define ' +
        '`%s` on your component more than once, but that is only supported ' +
        'for functions, which are chained together. This conflict may be ' +
        'due to a mixin.',
        name
      ) : invariant(existingType === 'function' && propertyType === 'function'));
      result = createChainedFunction(existingProperty, property);
    }
    ConvenienceConstructor[name] = result;
    ConvenienceConstructor.componentConstructor[name] = result;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeObjectsWithNoDuplicateKeys(one, two) {
  ("production" !== process.env.NODE_ENV ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  objMap(two, function(value, key) {
    ("production" !== process.env.NODE_ENV ? invariant(
      one[key] === undefined,
      'mergeObjectsWithNoDuplicateKeys(): ' +
      'Tried to merge two objects with the same key: %s',
      key
    ) : invariant(one[key] === undefined));
    one[key] = value;
  });
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    return mergeObjectsWithNoDuplicateKeys(a, b);
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

if ("production" !== process.env.NODE_ENV) {

  var unmountedPropertyWhitelist = {
    constructor: true,
    construct: true,
    isOwnedBy: true, // should be deprecated but can have code mod (internal)
    type: true,
    props: true,
    // currently private but belong on the descriptor and are valid for use
    // inside the framework:
    __keyValidated__: true,
    _owner: true,
    _currentContext: true
  };

  var componentInstanceProperties = {
    __keyValidated__: true,
    __keySetters: true,
    _compositeLifeCycleState: true,
    _currentContext: true,
    _defaultProps: true,
    _instance: true,
    _lifeCycleState: true,
    _mountDepth: true,
    _owner: true,
    _pendingCallbacks: true,
    _pendingContext: true,
    _pendingForceUpdate: true,
    _pendingOwner: true,
    _pendingProps: true,
    _pendingState: true,
    _renderedComponent: true,
    _rootNodeID: true,
    context: true,
    props: true,
    refs: true,
    state: true,

    // These are known instance properties coming from other sources
    _pendingQueries: true,
    _queryPropListeners: true,
    queryParams: true

  };

  var hasWarnedOnComponentType = {};

  var warningStackCounter = 0;

  var issueMembraneWarning = function(instance, key) {
    var isWhitelisted = unmountedPropertyWhitelist.hasOwnProperty(key);
    if (warningStackCounter > 0 || isWhitelisted) {
      return;
    }
    var name = instance.constructor.displayName || 'Unknown';
    var owner = ReactCurrentOwner.current;
    var ownerName = (owner && owner.constructor.displayName) || 'Unknown';
    var warningKey = key + '|' + name + '|' + ownerName;
    if (hasWarnedOnComponentType.hasOwnProperty(warningKey)) {
      // We have already warned for this combination. Skip it this time.
      return;
    }
    hasWarnedOnComponentType[warningKey] = true;

    var context = owner ? ' in ' + ownerName + '.' : ' at the top level.';
    var staticMethodExample = '<' + name + ' />.type.' + key + '(...)';

    monitorCodeUse('react_descriptor_property_access', { component: name });
    console.warn(
      'Invalid access to component property "' + key + '" on ' + name +
      context + ' See http://fb.me/react-warning-descriptors .' +
      ' Use a static method instead: ' + staticMethodExample
    );
  };

  var wrapInMembraneFunction = function(fn, thisBinding) {
    if (fn.__reactMembraneFunction && fn.__reactMembraneSelf === thisBinding) {
      return fn.__reactMembraneFunction;
    }
    return fn.__reactMembraneFunction = function() {
      /**
       * By getting this function, you've already received a warning. The
       * internals of this function will likely cause more warnings. To avoid
       * Spamming too much we disable any warning triggered inside of this
       * stack.
       */
      warningStackCounter++;
      try {
        // If the this binding is unchanged, we defer to the real component.
        // This is important to keep some referential integrity in the
        // internals. E.g. owner equality check.
        var self = this === thisBinding ? this.__realComponentInstance : this;
        return fn.apply(self, arguments);
      } finally {
        warningStackCounter--;
      }
    };
  };

  var defineMembraneProperty = function(membrane, prototype, key) {
    Object.defineProperty(membrane, key, {

      configurable: false,
      enumerable: true,

      get: function() {
        if (this === membrane) {
          // We're allowed to access the prototype directly.
          return prototype[key];
        }
        issueMembraneWarning(this, key);

        var realValue = this.__realComponentInstance[key];
        // If the real value is a function, we need to provide a wrapper that
        // disables nested warnings. The properties type and constructors are
        // expected to the be constructors and therefore is often use with an
        // equality check and we shouldn't try to rebind those.
        if (typeof realValue === 'function' &&
            key !== 'type' &&
            key !== 'constructor') {
          return wrapInMembraneFunction(realValue, this);
        }
        return realValue;
      },

      set: function(value) {
        if (this === membrane) {
          // We're allowed to set a value on the prototype directly.
          prototype[key] = value;
          return;
        }
        issueMembraneWarning(this, key);
        this.__realComponentInstance[key] = value;
      }

    });
  };

  /**
   * Creates a membrane prototype which wraps the original prototype. If any
   * property is accessed in an unmounted state, a warning is issued.
   *
   * @param {object} prototype Original prototype.
   * @return {object} The membrane prototype.
   * @private
   */
  var createMountWarningMembrane = function(prototype) {
    var membrane = {};
    var key;
    for (key in prototype) {
      defineMembraneProperty(membrane, prototype, key);
    }
    // These are properties that goes into the instance but not the prototype.
    // We can create the membrane on the prototype even though this will
    // result in a faulty hasOwnProperty check it's better perf.
    for (key in componentInstanceProperties) {
      if (componentInstanceProperties.hasOwnProperty(key) &&
          !(key in prototype)) {
        defineMembraneProperty(membrane, prototype, key);
      }
    }
    return membrane;
  };

  /**
   * Creates a membrane constructor which wraps the component that gets mounted.
   *
   * @param {function} constructor Original constructor.
   * @return {function} The membrane constructor.
   * @private
   */
  var createDescriptorProxy = function(constructor) {
    try {
      var ProxyConstructor = function() {
        this.__realComponentInstance = new constructor();

        // We can only safely pass through known instance variables. Unknown
        // expandos are not safe. Use the real mounted instance to avoid this
        // problem if it blows something up.
        Object.freeze(this);
      };

      ProxyConstructor.prototype = createMountWarningMembrane(
        constructor.prototype
      );

      return ProxyConstructor;
    } catch(x) {
      // In IE8 define property will fail on non-DOM objects. If anything in
      // the membrane creation fails, we'll bail out and just use the plain
      // constructor without warnings.
      return constructor;
    }
  };

}

/**
 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
 * `this._compositeLifeCycleState` (which can be null).
 *
 * This is different from the life cycle state maintained by `ReactComponent` in
 * `this._lifeCycleState`. The following diagram shows how the states overlap in
 * time. There are times when the CompositeLifeCycle is null - at those times it
 * is only meaningful to look at ComponentLifeCycle alone.
 *
 * Top Row: ReactComponent.ComponentLifeCycle
 * Low Row: ReactComponent.CompositeLifeCycle
 *
 * +-------+------------------------------------------------------+--------+
 * |  UN   |                    MOUNTED                           |   UN   |
 * |MOUNTED|                                                      | MOUNTED|
 * +-------+------------------------------------------------------+--------+
 * |       ^--------+   +------+   +------+   +------+   +--------^        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |    0--|MOUNTING|-0-|RECEIV|-0-|RECEIV|-0-|RECEIV|-0-|   UN   |--->0   |
 * |       |        |   |PROPS |   | PROPS|   | STATE|   |MOUNTING|        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |       +--------+   +------+   +------+   +------+   +--------+        |
 * |       |                                                      |        |
 * +-------+------------------------------------------------------+--------+
 */
var CompositeLifeCycle = keyMirror({
  /**
   * Components in the process of being mounted respond to state changes
   * differently.
   */
  MOUNTING: null,
  /**
   * Components in the process of being unmounted are guarded against state
   * changes.
   */
  UNMOUNTING: null,
  /**
   * Components that are mounted and receiving new props respond to state
   * changes differently.
   */
  RECEIVING_PROPS: null,
  /**
   * Components that are mounted and receiving new state are guarded against
   * additional state changes.
   */
  RECEIVING_STATE: null
});

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {?object} initialProps
   * @param {*} children
   * @final
   * @internal
   */
  construct: function(initialProps, children) {
    // Children can be either an array or more than one argument
    ReactComponent.Mixin.construct.apply(this, arguments);
    ReactOwner.Mixin.construct.apply(this, arguments);

    this.state = null;
    this._pendingState = null;

    this.context = null;
    this._currentContext = ReactContext.current;
    this._pendingContext = null;

    // The descriptor that was used to instantiate this component. Will be
    // set by the instantiator instead of the constructor since this
    // constructor is currently used by both instances and descriptors.
    this._descriptor = null;

    this._compositeLifeCycleState = null;
  },

  /**
   * Components in the intermediate state now has cyclic references. To avoid
   * breaking JSON serialization we expose a custom JSON format.
   * @return {object} JSON compatible representation.
   * @internal
   * @final
   */
  toJSON: function() {
    return { type: this.type, props: this.props };
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    return ReactComponent.Mixin.isMounted.call(this) &&
      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

      this.context = this._processContext(this._currentContext);
      this._defaultProps = this.getDefaultProps ? this.getDefaultProps() : null;
      this.props = this._processProps(this.props);

      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }

      this.state = this.getInitialState ? this.getInitialState() : null;
      ("production" !== process.env.NODE_ENV ? invariant(
        typeof this.state === 'object' && !Array.isArray(this.state),
        '%s.getInitialState(): must return an object or null',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof this.state === 'object' && !Array.isArray(this.state)));

      this._pendingState = null;
      this._pendingForceUpdate = false;

      if (this.componentWillMount) {
        this.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingState` without triggering a re-render.
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }

      this._renderedComponent = instantiateReactComponent(
        this._renderValidatedComponent()
      );

      // Done with mounting, `setState` will now trigger UI changes.
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(
        rootID,
        transaction,
        mountDepth + 1
      );
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this, this.componentDidMount);
      }
      return markup;
    }
  ),

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
    if (this.componentWillUnmount) {
      this.componentWillUnmount();
    }
    this._compositeLifeCycleState = null;

    this._defaultProps = null;

    this._renderedComponent.unmountComponent();
    this._renderedComponent = null;

    ReactComponent.Mixin.unmountComponent.call(this);

    // Some existing components rely on this.props even after they've been
    // destroyed (in event handlers).
    // TODO: this.props = null;
    // TODO: this.state = null;
  },

  /**
   * Sets a subset of the state. Always use this or `replaceState` to mutate
   * state. You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * There is no guarantee that calls to `setState` will run synchronously,
   * as they may eventually be batched together.  You can provide an optional
   * callback that will be executed when the call to setState is actually
   * completed.
   *
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  setState: function(partialState, callback) {
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof partialState === 'object' || partialState == null,
      'setState(...): takes an object of state variables to update.'
    ) : invariant(typeof partialState === 'object' || partialState == null));
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        partialState != null,
        'setState(...): You passed an undefined or null state object; ' +
        'instead, use forceUpdate().'
      ) : null);
    }
    // Merge with `_pendingState` if it exists, otherwise with existing state.
    this.replaceState(
      merge(this._pendingState || this.state, partialState),
      callback
    );
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {object} completeState Next state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  replaceState: function(completeState, callback) {
    validateLifeCycleOnReplaceState(this);
    this._pendingState = completeState;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function(context) {
    var maskedContext = null;
    var contextTypes = this.constructor.contextTypes;
    if (contextTypes) {
      maskedContext = {};
      for (var contextName in contextTypes) {
        maskedContext[contextName] = context[contextName];
      }
      if ("production" !== process.env.NODE_ENV) {
        this._checkPropTypes(
          contextTypes,
          maskedContext,
          ReactPropTypeLocations.context
        );
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function(currentContext) {
    var childContext = this.getChildContext && this.getChildContext();
    var displayName = this.constructor.displayName || 'ReactCompositeComponent';
    if (childContext) {
      ("production" !== process.env.NODE_ENV ? invariant(
        typeof this.constructor.childContextTypes === 'object',
        '%s.getChildContext(): childContextTypes must be defined in order to ' +
        'use getChildContext().',
        displayName
      ) : invariant(typeof this.constructor.childContextTypes === 'object'));
      if ("production" !== process.env.NODE_ENV) {
        this._checkPropTypes(
          this.constructor.childContextTypes,
          childContext,
          ReactPropTypeLocations.childContext
        );
      }
      for (var name in childContext) {
        ("production" !== process.env.NODE_ENV ? invariant(
          name in this.constructor.childContextTypes,
          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
          displayName,
          name
        ) : invariant(name in this.constructor.childContextTypes));
      }
      return merge(currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function(newProps) {
    var props = merge(newProps);
    var defaultProps = this._defaultProps;
    for (var propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
    if ("production" !== process.env.NODE_ENV) {
      var propTypes = this.constructor.propTypes;
      if (propTypes) {
        this._checkPropTypes(propTypes, props, ReactPropTypeLocations.prop);
      }
    }
    return props;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function(propTypes, props, location) {
    var componentName = this.constructor.displayName;
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        propTypes[propName](props, propName, componentName, location);
      }
    }
  },

  performUpdateIfNecessary: function() {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    // Do not trigger a state transition if we are in the middle of mounting or
    // receiving props because both of those will already be doing this.
    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
      return;
    }
    ReactComponent.Mixin.performUpdateIfNecessary.call(this);
  },

  /**
   * If any of `_pendingProps`, `_pendingState`, or `_pendingForceUpdate` is
   * set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _performUpdateIfNecessary: function(transaction) {
    if (this._pendingProps == null &&
        this._pendingState == null &&
        this._pendingContext == null &&
        !this._pendingForceUpdate) {
      return;
    }

    var nextFullContext = this._pendingContext || this._currentContext;
    var nextContext = this._processContext(nextFullContext);
    this._pendingContext = null;

    var nextProps = this.props;
    if (this._pendingProps != null) {
      nextProps = this._processProps(this._pendingProps);
      this._pendingProps = null;

      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
      if (this.componentWillReceiveProps) {
        this.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_STATE;

    // Unlike props, state, and context, we specifically don't want to set
    // _pendingOwner to null here because it's possible for a component to have
    // a null owner, so we instead make `this._owner === this._pendingOwner`
    // mean that there's no owner change pending.
    var nextOwner = this._pendingOwner;

    var nextState = this._pendingState || this.state;
    this._pendingState = null;

    try {
      if (this._pendingForceUpdate ||
          !this.shouldComponentUpdate ||
          this.shouldComponentUpdate(nextProps, nextState, nextContext)) {
        this._pendingForceUpdate = false;
        // Will set `this.props`, `this.state` and `this.context`.
        this._performComponentUpdate(
          nextProps,
          nextOwner,
          nextState,
          nextFullContext,
          nextContext,
          transaction
        );
      } else {
        // If it's determined that a component should not update, we still want
        // to set props and state.
        this.props = nextProps;
        this._owner = nextOwner;
        this.state = nextState;
        this._currentContext = nextFullContext;
        this.context = nextContext;
      }
    } finally {
      this._compositeLifeCycleState = null;
    }
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {object} nextProps Next object to set as properties.
   * @param {?ReactComponent} nextOwner Next component to set as owner
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextFullContext Next object to set as _currentContext.
   * @param {?object} nextContext Next object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @private
   */
  _performComponentUpdate: function(
    nextProps,
    nextOwner,
    nextState,
    nextFullContext,
    nextContext,
    transaction
  ) {
    var prevProps = this.props;
    var prevOwner = this._owner;
    var prevState = this.state;
    var prevContext = this.context;

    if (this.componentWillUpdate) {
      this.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this.props = nextProps;
    this._owner = nextOwner;
    this.state = nextState;
    this._currentContext = nextFullContext;
    this.context = nextContext;

    this.updateComponent(
      transaction,
      prevProps,
      prevOwner,
      prevState,
      prevContext
    );

    if (this.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        this,
        this.componentDidUpdate.bind(this, prevProps, prevState, prevContext)
      );
    }
  },

  receiveComponent: function(nextComponent, transaction) {
    if (nextComponent === this._descriptor) {
      // Since props and context are immutable after the component is
      // mounted, we can do a cheap identity compare here to determine
      // if this is a superfluous reconcile.
      return;
    }

    // Update the descriptor that was last used by this component instance
    this._descriptor = nextComponent;

    this._pendingContext = nextComponent._currentContext;
    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextComponent,
      transaction
    );
  },

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {object} prevProps
   * @param {?ReactComponent} prevOwner
   * @param {?object} prevState
   * @param {?object} prevContext
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'updateComponent',
    function(transaction, prevProps, prevOwner, prevState, prevContext) {
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevProps,
        prevOwner
      );


      var prevComponentInstance = this._renderedComponent;
      var nextComponent = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevComponentInstance, nextComponent)) {
        prevComponentInstance.receiveComponent(nextComponent, transaction);
      } else {
        // These two IDs are actually the same! But nothing should rely on that.
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        prevComponentInstance.unmountComponent();
        this._renderedComponent = instantiateReactComponent(nextComponent);
        var nextMarkup = this._renderedComponent.mountComponent(
          thisID,
          transaction,
          this._mountDepth + 1
        );
        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(
          prevComponentID,
          nextMarkup
        );
      }
    }
  ),

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {?function} callback Called after update is complete.
   * @final
   * @protected
   */
  forceUpdate: function(callback) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    ("production" !== process.env.NODE_ENV ? invariant(
      this.isMounted() ||
        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
      'forceUpdate(...): Can only force an update on mounted or mounting ' +
        'components.'
    ) : invariant(this.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
    ("production" !== process.env.NODE_ENV ? invariant(
      compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
      'forceUpdate(...): Cannot force an update while unmounting component ' +
      'or during an existing state transition (such as within `render`).'
    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
    compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
    this._pendingForceUpdate = true;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * @private
   */
  _renderValidatedComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    '_renderValidatedComponent',
    function() {
      var renderedComponent;
      var previousContext = ReactContext.current;
      ReactContext.current = this._processChildContext(this._currentContext);
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this.render();
      } finally {
        ReactContext.current = previousContext;
        ReactCurrentOwner.current = null;
      }
      ("production" !== process.env.NODE_ENV ? invariant(
        ReactComponent.isValidComponent(renderedComponent),
        '%s.render(): A valid ReactComponent must be returned. You may have ' +
          'returned null, undefined, an array, or some other invalid object.',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(ReactComponent.isValidComponent(renderedComponent)));
      return renderedComponent;
    }
  ),

  /**
   * @private
   */
  _bindAutoBindMethods: function() {
    for (var autoBindKey in this.__reactAutoBindMap) {
      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
        continue;
      }
      var method = this.__reactAutoBindMap[autoBindKey];
      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
        method,
        this.constructor.displayName + '.' + autoBindKey
      ));
    }
  },

  /**
   * Binds a method to the component.
   *
   * @param {function} method Method to be bound.
   * @private
   */
  _bindAutoBindMethod: function(method) {
    var component = this;
    var boundMethod = function() {
      return method.apply(component, arguments);
    };
    if ("production" !== process.env.NODE_ENV) {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis ) {var args=Array.prototype.slice.call(arguments,1);
        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): React component methods may only be bound to the ' +
            'component instance. See ' + componentName
          );
        } else if (!args.length) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): You are binding a component method to the component. ' +
            'React does this for you automatically in a high-performance ' +
            'way, so you can safely remove this call. See ' + componentName
          );
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }
};

var ReactCompositeComponentBase = function() {};
mixInto(ReactCompositeComponentBase, ReactComponent.Mixin);
mixInto(ReactCompositeComponentBase, ReactOwner.Mixin);
mixInto(ReactCompositeComponentBase, ReactPropTransferer.Mixin);
mixInto(ReactCompositeComponentBase, ReactCompositeComponentMixin);

/**
 * Checks if a value is a valid component constructor.
 *
 * @param {*}
 * @return {boolean}
 * @public
 */
function isValidClass(componentClass) {
  return componentClass instanceof Function &&
         'componentConstructor' in componentClass &&
         componentClass.componentConstructor instanceof Function;
}
/**
 * Module for creating composite components.
 *
 * @class ReactCompositeComponent
 * @extends ReactComponent
 * @extends ReactOwner
 * @extends ReactPropTransferer
 */
var ReactCompositeComponent = {

  LifeCycle: CompositeLifeCycle,

  Base: ReactCompositeComponentBase,

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function() {};
    Constructor.prototype = new ReactCompositeComponentBase();
    Constructor.prototype.constructor = Constructor;

    var DescriptorConstructor = Constructor;

    var ConvenienceConstructor = function(props, children) {
      var descriptor = new DescriptorConstructor();
      descriptor.construct.apply(descriptor, arguments);
      return descriptor;
    };
    ConvenienceConstructor.componentConstructor = Constructor;
    Constructor.ConvenienceConstructor = ConvenienceConstructor;
    ConvenienceConstructor.originalSpec = spec;

    injectedMixins.forEach(
      mixSpecIntoComponent.bind(null, ConvenienceConstructor)
    );

    mixSpecIntoComponent(ConvenienceConstructor, spec);

    ("production" !== process.env.NODE_ENV ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== process.env.NODE_ENV) {
      if (Constructor.prototype.componentShouldUpdate) {
        monitorCodeUse(
          'react_component_should_update_warning',
          { component: spec.displayName }
        );
        console.warn(
          (spec.displayName || 'A component') + ' has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.'
         );
      }
    }

    // Expose the convience constructor on the prototype so that it can be
    // easily accessed on descriptors. E.g. <Foo />.type === Foo.type and for
    // static methods like <Foo />.type.staticMethod();
    // This should not be named constructor since this may not be the function
    // that created the descriptor, and it may not even be a constructor.
    ConvenienceConstructor.type = Constructor;
    Constructor.prototype.type = Constructor;

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactCompositeComponentInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    if ("production" !== process.env.NODE_ENV) {
      // In DEV the convenience constructor generates a proxy to another
      // instance around it to warn about access to properties on the
      // descriptor.
      DescriptorConstructor = createDescriptorProxy(Constructor);
    }

    return ConvenienceConstructor;
  },

  isValidClass: isValidClass,

  injection: {
    injectMixin: function(mixin) {
      injectedMixins.push(mixin);
    }
  }
};

module.exports = ReactCompositeComponent;

}).call(this,require("qvMYcC"))
},{"./ReactComponent":36,"./ReactContext":39,"./ReactCurrentOwner":40,"./ReactErrorUtils":56,"./ReactOwner":68,"./ReactPerf":69,"./ReactPropTransferer":70,"./ReactPropTypeLocationNames":71,"./ReactPropTypeLocations":72,"./ReactUpdates":80,"./instantiateReactComponent":120,"./invariant":121,"./keyMirror":127,"./merge":130,"./mixInto":133,"./monitorCodeUse":134,"./objMap":135,"./shouldUpdateReactComponent":140,"./warning":143,"qvMYcC":146}],39:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactContext
 */

"use strict";

var merge = require("./merge");

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: {},

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'} () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = merge(previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

},{"./merge":130}],40:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactCurrentOwner
 */

"use strict";

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],41:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

"use strict";

var ReactDOMComponent = require("./ReactDOMComponent");

var mergeInto = require("./mergeInto");
var objMapKeyVal = require("./objMapKeyVal");

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @param {boolean} omitClose True if the close tag should be omitted.
 * @private
 */
function createDOMComponentClass(tag, omitClose) {
  var Constructor = function() {};
  Constructor.prototype = new ReactDOMComponent(tag, omitClose);
  Constructor.prototype.constructor = Constructor;
  Constructor.displayName = tag;

  var ConvenienceConstructor = function(props, children) {
    var instance = new Constructor();
    instance.construct.apply(instance, arguments);
    return instance;
  };

  // Expose the constructor on the ConvenienceConstructor and prototype so that
  // it can be easily easily accessed on descriptors.
  // E.g. <div />.type === div.type
  ConvenienceConstructor.type = Constructor;
  Constructor.prototype.type = Constructor;

  Constructor.ConvenienceConstructor = ConvenienceConstructor;
  ConvenienceConstructor.componentConstructor = Constructor;
  return ConvenienceConstructor;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = objMapKeyVal({
  a: false,
  abbr: false,
  address: false,
  area: true,
  article: false,
  aside: false,
  audio: false,
  b: false,
  base: true,
  bdi: false,
  bdo: false,
  big: false,
  blockquote: false,
  body: false,
  br: true,
  button: false,
  canvas: false,
  caption: false,
  cite: false,
  code: false,
  col: true,
  colgroup: false,
  data: false,
  datalist: false,
  dd: false,
  del: false,
  details: false,
  dfn: false,
  div: false,
  dl: false,
  dt: false,
  em: false,
  embed: true,
  fieldset: false,
  figcaption: false,
  figure: false,
  footer: false,
  form: false, // NOTE: Injected, see `ReactDOMForm`.
  h1: false,
  h2: false,
  h3: false,
  h4: false,
  h5: false,
  h6: false,
  head: false,
  header: false,
  hr: true,
  html: false,
  i: false,
  iframe: false,
  img: true,
  input: true,
  ins: false,
  kbd: false,
  keygen: true,
  label: false,
  legend: false,
  li: false,
  link: true,
  main: false,
  map: false,
  mark: false,
  menu: false,
  menuitem: false, // NOTE: Close tag should be omitted, but causes problems.
  meta: true,
  meter: false,
  nav: false,
  noscript: false,
  object: false,
  ol: false,
  optgroup: false,
  option: false,
  output: false,
  p: false,
  param: true,
  pre: false,
  progress: false,
  q: false,
  rp: false,
  rt: false,
  ruby: false,
  s: false,
  samp: false,
  script: false,
  section: false,
  select: false,
  small: false,
  source: true,
  span: false,
  strong: false,
  style: false,
  sub: false,
  summary: false,
  sup: false,
  table: false,
  tbody: false,
  td: false,
  textarea: false, // NOTE: Injected, see `ReactDOMTextarea`.
  tfoot: false,
  th: false,
  thead: false,
  time: false,
  title: false,
  tr: false,
  track: true,
  u: false,
  ul: false,
  'var': false,
  video: false,
  wbr: true,

  // SVG
  circle: false,
  defs: false,
  g: false,
  line: false,
  linearGradient: false,
  path: false,
  polygon: false,
  polyline: false,
  radialGradient: false,
  rect: false,
  stop: false,
  svg: false,
  text: false
}, createDOMComponentClass);

var injection = {
  injectComponentClasses: function(componentClasses) {
    mergeInto(ReactDOM, componentClasses);
  }
};

ReactDOM.injection = injection;

module.exports = ReactDOM;

},{"./ReactDOMComponent":43,"./mergeInto":132,"./objMapKeyVal":136}],42:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMButton
 */

"use strict";

var AutoFocusMixin = require("./AutoFocusMixin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var keyMirror = require("./keyMirror");

// Store a reference to the <button> `ReactDOMComponent`.
var button = ReactDOM.button;

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMButton',

  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"./AutoFocusMixin":10,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./keyMirror":127}],43:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

"use strict";

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMProperty = require("./DOMProperty");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactComponent = require("./ReactComponent");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactMount = require("./ReactMount");
var ReactMultiChild = require("./ReactMultiChild");
var ReactPerf = require("./ReactPerf");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var invariant = require("./invariant");
var keyOf = require("./keyOf");
var merge = require("./merge");
var mixInto = require("./mixInto");

var deleteListener = ReactEventEmitter.deleteListener;
var listenTo = ReactEventEmitter.listenTo;
var registrationNameModules = ReactEventEmitter.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

var ELEMENT_NODE_TYPE = 1;

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  ("production" !== process.env.NODE_ENV ? invariant(
    props.children == null || props.dangerouslySetInnerHTML == null,
    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
  ("production" !== process.env.NODE_ENV ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

function putListener(id, registrationName, listener, transaction) {
  var container = ReactMount.findReactContainerForID(id);
  if (container) {
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    listenTo(registrationName, doc);
  }
  transaction.getPutListenerQueue().enqueuePutListener(
    id,
    registrationName,
    listener
  );
}


/**
 * @constructor ReactDOMComponent
 * @extends ReactComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag, omitClose) {
  this._tagOpen = '<' + tag;
  this._tagClose = omitClose ? '' : '</' + tag + '>';
  this.tagName = tag.toUpperCase();
}

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} The computed markup.
   */
  mountComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      assertValidProps(this.props);
      return (
        this._createOpenTagMarkupAndPutListeners(transaction) +
        this._createContentMarkup(transaction) +
        this._tagClose
      );
    }
  ),

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function(transaction) {
    var props = this.props;
    var ret = this._tagOpen;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules[propKey]) {
        putListener(this._rootNodeID, propKey, propValue, transaction);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = props.style = merge(props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret + '>';
    }

    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
    return ret + ' ' + markupForID + '>';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = this.props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
      var childrenToUse = contentToUse != null ? null : this.props.children;
      if (contentToUse != null) {
        return escapeTextForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction
        );
        return mountImages.join('');
      }
    }
    return '';
  },

  receiveComponent: function(nextComponent, transaction) {
    if (nextComponent === this) {
      // Since props and context are immutable after the component is
      // mounted, we can do a cheap identity compare here to determine
      // if this is a superfluous reconcile.

      // TODO: compare the descriptor
      return;
    }

    assertValidProps(nextComponent.props);
    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextComponent,
      transaction
    );
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {object} prevProps
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'updateComponent',
    function(transaction, prevProps, prevOwner) {
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevProps,
        prevOwner
      );
      this._updateDOMProperties(prevProps, transaction);
      this._updateDOMChildren(prevProps, transaction);
    }
  ),

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMProperties: function(lastProps, transaction) {
    var nextProps = this.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = lastProps[propKey];
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
      } else if (registrationNameModules[propKey]) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = nextProps.style = merge(nextProp);
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                !nextProp.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules[propKey]) {
        putListener(this._rootNodeID, propKey, nextProp, transaction);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      ReactComponent.BackendIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction) {
    var nextProps = this.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        ReactComponent.BackendIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    this.unmountChildren();
    ReactEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponent.Mixin.unmountComponent.call(this);
  }

};

mixInto(ReactDOMComponent, ReactComponent.Mixin);
mixInto(ReactDOMComponent, ReactDOMComponent.Mixin);
mixInto(ReactDOMComponent, ReactMultiChild.Mixin);
mixInto(ReactDOMComponent, ReactBrowserComponentMixin);

module.exports = ReactDOMComponent;

}).call(this,require("qvMYcC"))
},{"./CSSPropertyOperations":12,"./DOMProperty":17,"./DOMPropertyOperations":18,"./ReactBrowserComponentMixin":34,"./ReactComponent":36,"./ReactEventEmitter":57,"./ReactMount":64,"./ReactMultiChild":66,"./ReactPerf":69,"./escapeTextForBrowser":107,"./invariant":121,"./keyOf":128,"./merge":130,"./mixInto":133,"qvMYcC":146}],44:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMForm
 */

"use strict";

var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactEventEmitter = require("./ReactEventEmitter");
var EventConstants = require("./EventConstants");

// Store a reference to the <form> `ReactDOMComponent`.
var form = ReactDOM.form;

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMForm',

  mixins: [ReactBrowserComponentMixin],

  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return this.transferPropsTo(form(null, this.props.children));
  },

  componentDidMount: function() {
    ReactEventEmitter.trapBubbledEvent(
      EventConstants.topLevelTypes.topReset,
      'reset',
      this.getDOMNode()
    );
    ReactEventEmitter.trapBubbledEvent(
      EventConstants.topLevelTypes.topSubmit,
      'submit',
      this.getDOMNode()
    );
  }
});

module.exports = ReactDOMForm;

},{"./EventConstants":23,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./ReactEventEmitter":57}],45:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

"use strict";

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMChildrenOperations = require("./DOMChildrenOperations");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");

var invariant = require("./invariant");

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

var useWhitespaceWorkaround;

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactComponent.BackendIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updatePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== process.env.NODE_ENV ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertantly setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    }
  ),

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'deletePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== process.env.NODE_ENV ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
      DOMPropertyOperations.deleteValueForProperty(node, name, value);
    }
  ),

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateStylesByID',
    function(id, styles) {
      var node = ReactMount.getNode(id);
      CSSPropertyOperations.setValueForStyles(node, styles);
    }
  ),

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateInnerHTMLByID',
    function(id, html) {
      var node = ReactMount.getNode(id);

      // IE8: When updating a just created node with innerHTML only leading
      // whitespace is removed. When updating an existing node with innerHTML
      // whitespace in root TextNodes is also collapsed.
      // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

      if (useWhitespaceWorkaround === undefined) {
        // Feature detection; only IE8 is known to behave improperly like this.
        var temp = document.createElement('div');
        temp.innerHTML = ' ';
        useWhitespaceWorkaround = temp.innerHTML === '';
      }

      if (useWhitespaceWorkaround) {
        // Magic theory: IE8 supposedly differentiates between added and updated
        // nodes when processing innerHTML, innerHTML on updated nodes suffers
        // from worse whitespace behavior. Re-adding a node like this triggers
        // the initial and more favorable whitespace behavior.
        node.parentNode.replaceChild(node, node);
      }

      if (useWhitespaceWorkaround && html.match(/^[ \r\n\t\f]/)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        node.innerHTML = '\uFEFF' + html;
        node.firstChild.deleteData(0, 1);
      } else {
        node.innerHTML = html;
      }
    }
  ),

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateTextContentByID',
    function(id, content) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.updateTextContent(node, content);
    }
  ),

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyReplaceNodeWithMarkupByID',
    function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    }
  ),

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyProcessChildrenUpdates',
    function(updates, markup) {
      for (var i = 0; i < updates.length; i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    }
  )
};

module.exports = ReactDOMIDOperations;

}).call(this,require("qvMYcC"))
},{"./CSSPropertyOperations":12,"./DOMChildrenOperations":16,"./DOMPropertyOperations":18,"./ReactMount":64,"./ReactPerf":69,"./invariant":121,"qvMYcC":146}],46:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMImg
 */

"use strict";

var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactEventEmitter = require("./ReactEventEmitter");
var EventConstants = require("./EventConstants");

// Store a reference to the <img> `ReactDOMComponent`.
var img = ReactDOM.img;

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <img> element itself. There are lots of hacks we could do
 * to accomplish this, but the most reliable is to make <img> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMImg = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMImg',
  tagName: 'IMG',

  mixins: [ReactBrowserComponentMixin],

  render: function() {
    return img(this.props);
  },

  componentDidMount: function() {
    var node = this.getDOMNode();
    ReactEventEmitter.trapBubbledEvent(
      EventConstants.topLevelTypes.topLoad,
      'load',
      node
    );
    ReactEventEmitter.trapBubbledEvent(
      EventConstants.topLevelTypes.topError,
      'error',
      node
    );
  }
});

module.exports = ReactDOMImg;

},{"./EventConstants":23,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./ReactEventEmitter":57}],47:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMInput
 */

"use strict";

var AutoFocusMixin = require("./AutoFocusMixin");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactMount = require("./ReactMount");

var invariant = require("./invariant");
var merge = require("./merge");

// Store a reference to the <input> `ReactDOMComponent`.
var input = ReactDOM.input;

var instancesByReactID = {};

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMInput',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      checked: this.props.defaultChecked || false,
      value: defaultValue != null ? defaultValue : null
    };
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);

    props.defaultChecked = null;
    props.defaultValue = null;

    var value = LinkedValueUtils.getValue(this);
    props.value = value != null ? value : this.state.value;

    var checked = LinkedValueUtils.getChecked(this);
    props.checked = checked != null ? checked : this.state.checked;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function() {
    var id = ReactMount.getID(this.getDOMNode());
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var rootNode = this.getDOMNode();
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange.call(this, event);
      this._isChanging = false;
    }
    this.setState({
      checked: event.target.checked,
      value: event.target.value
    });

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll(
        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== process.env.NODE_ENV ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== process.env.NODE_ENV ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // In some cases, this will actually change the `checked` state value.
        // In other cases, there's no change but this forces a reconcile upon
        // which componentDidUpdate will reset the DOM property to whatever it
        // should be.
        otherInstance.setState({
          checked: false
        });
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

}).call(this,require("qvMYcC"))
},{"./AutoFocusMixin":10,"./DOMPropertyOperations":18,"./LinkedValueUtils":30,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./ReactMount":64,"./invariant":121,"./merge":130,"qvMYcC":146}],48:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMOption
 */

"use strict";

var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var warning = require("./warning");

// Store a reference to the <option> `ReactDOMComponent`.
var option = ReactDOM.option;

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMOption',

  mixins: [ReactBrowserComponentMixin],

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        this.props.selected == null,
        'Use the `defaultValue` or `value` props on <select> instead of ' +
        'setting `selected` on <option>.'
      ) : null);
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

}).call(this,require("qvMYcC"))
},{"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./warning":143,"qvMYcC":146}],49:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMSelect
 */

"use strict";

var AutoFocusMixin = require("./AutoFocusMixin");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var invariant = require("./invariant");
var merge = require("./merge");

// Store a reference to the <select> `ReactDOMComponent`.
var select = ReactDOM.select;

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return;
  }
  if (props.multiple) {
    ("production" !== process.env.NODE_ENV ? invariant(
      Array.isArray(props[propName]),
      'The `%s` prop supplied to <select> must be an array if `multiple` is ' +
      'true.',
      propName
    ) : invariant(Array.isArray(props[propName])));
  } else {
    ("production" !== process.env.NODE_ENV ? invariant(
      !Array.isArray(props[propName]),
      'The `%s` prop supplied to <select> must be a scalar value if ' +
      '`multiple` is false.',
      propName
    ) : invariant(!Array.isArray(props[propName])));
  }
}

/**
 * If `value` is supplied, updates <option> elements on mount and update.
 * @param {ReactComponent} component Instance of ReactDOMSelect
 * @param {?*} propValue For uncontrolled components, null/undefined. For
 * controlled components, a string (or with `multiple`, a list of strings).
 * @private
 */
function updateOptions(component, propValue) {
  var multiple = component.props.multiple;
  var value = propValue != null ? propValue : component.state.value;
  var options = component.getDOMNode().options;
  var selectedValue, i, l;
  if (multiple) {
    selectedValue = {};
    for (i = 0, l = value.length; i < l; ++i) {
      selectedValue['' + value[i]] = true;
    }
  } else {
    selectedValue = '' + value;
  }
  for (i = 0, l = options.length; i < l; i++) {
    var selected = multiple ?
      selectedValue.hasOwnProperty(options[i].value) :
      options[i].value === selectedValue;

    if (selected !== options[i].selected) {
      options[i].selected = selected;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * string. If `multiple` is true, the prop must be an array of strings.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMSelect',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  getInitialState: function() {
    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
  },

  componentWillReceiveProps: function(nextProps) {
    if (!this.props.multiple && nextProps.multiple) {
      this.setState({value: [this.state.value]});
    } else if (this.props.multiple && !nextProps.multiple) {
      this.setState({value: this.state.value[0]});
    }
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentDidMount: function() {
    updateOptions(this, LinkedValueUtils.getValue(this));
  },

  componentDidUpdate: function() {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      updateOptions(this, value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange.call(this, event);
      this._isChanging = false;
    }

    var selectedValue;
    if (this.props.multiple) {
      selectedValue = [];
      var options = event.target.options;
      for (var i = 0, l = options.length; i < l; i++) {
        if (options[i].selected) {
          selectedValue.push(options[i].value);
        }
      }
    } else {
      selectedValue = event.target.value;
    }

    this.setState({value: selectedValue});
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

}).call(this,require("qvMYcC"))
},{"./AutoFocusMixin":10,"./LinkedValueUtils":30,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./invariant":121,"./merge":130,"qvMYcC":146}],50:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMSelection
 */

"use strict";

var getNodeForCharacterOffset = require("./getNodeForCharacterOffset");
var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection();

  if (selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);
  var rangeLength = currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var start = tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;
  detectionRange.detach();

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  var selection = window.getSelection();

  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }

    range.detach();
  }
}

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: function(node) {
    var getOffsets = document.selection ? getIEOffsets : getModernOffsets;
    return getOffsets(node);
  },

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: function(node, offsets) {
    var setOffsets = document.selection ? setIEOffsets : setModernOffsets;
    setOffsets(node, offsets);
  }
};

module.exports = ReactDOMSelection;

},{"./getNodeForCharacterOffset":115,"./getTextContentAccessor":117}],51:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMTextarea
 */

"use strict";

var AutoFocusMixin = require("./AutoFocusMixin");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var invariant = require("./invariant");
var merge = require("./merge");

var warning = require("./warning");

// Store a reference to the <textarea> `ReactDOMComponent`.
var textarea = ReactDOM.textarea;

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMTextarea',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== process.env.NODE_ENV) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        ) : null);
      }
      ("production" !== process.env.NODE_ENV ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== process.env.NODE_ENV ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(this);
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue),
      value: defaultValue
    };
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);
    var value = LinkedValueUtils.getValue(this);

    ("production" !== process.env.NODE_ENV ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = value != null ? value : this.state.value;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      var rootNode = this.getDOMNode();
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange.call(this, event);
      this._isChanging = false;
    }
    this.setState({value: event.target.value});
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

}).call(this,require("qvMYcC"))
},{"./AutoFocusMixin":10,"./DOMPropertyOperations":18,"./LinkedValueUtils":30,"./ReactBrowserComponentMixin":34,"./ReactCompositeComponent":38,"./ReactDOM":41,"./invariant":121,"./merge":130,"./warning":143,"qvMYcC":146}],52:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

"use strict";

var ReactUpdates = require("./ReactUpdates");
var Transaction = require("./Transaction");

var emptyFunction = require("./emptyFunction");
var mixInto = require("./mixInto");

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

mixInto(ReactDefaultBatchingStrategyTransaction, Transaction.Mixin);
mixInto(ReactDefaultBatchingStrategyTransaction, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, param) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(param);
    } else {
      transaction.perform(callback, null, param);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./ReactUpdates":80,"./Transaction":94,"./emptyFunction":105,"./mixInto":133}],53:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultInjection
 */

"use strict";

var ReactInjection = require("./ReactInjection");

var ExecutionEnvironment = require("./ExecutionEnvironment");

var DefaultDOMPropertyConfig = require("./DefaultDOMPropertyConfig");

var ChangeEventPlugin = require("./ChangeEventPlugin");
var ClientReactRootIndex = require("./ClientReactRootIndex");
var CompositionEventPlugin = require("./CompositionEventPlugin");
var DefaultEventPluginOrder = require("./DefaultEventPluginOrder");
var EnterLeaveEventPlugin = require("./EnterLeaveEventPlugin");
var MobileSafariClickEventPlugin = require("./MobileSafariClickEventPlugin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactComponentBrowserEnvironment =
  require("./ReactComponentBrowserEnvironment");
var ReactEventTopLevelCallback = require("./ReactEventTopLevelCallback");
var ReactDOM = require("./ReactDOM");
var ReactDOMButton = require("./ReactDOMButton");
var ReactDOMForm = require("./ReactDOMForm");
var ReactDOMImg = require("./ReactDOMImg");
var ReactDOMInput = require("./ReactDOMInput");
var ReactDOMOption = require("./ReactDOMOption");
var ReactDOMSelect = require("./ReactDOMSelect");
var ReactDOMTextarea = require("./ReactDOMTextarea");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var SelectEventPlugin = require("./SelectEventPlugin");
var ServerReactRootIndex = require("./ServerReactRootIndex");
var SimpleEventPlugin = require("./SimpleEventPlugin");

var ReactDefaultBatchingStrategy = require("./ReactDefaultBatchingStrategy");

var createFullPageComponent = require("./createFullPageComponent");

function inject() {
  ReactInjection.EventEmitter.injectTopLevelCallbackCreator(
    ReactEventTopLevelCallback
  );

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
  ReactInjection.EventPluginHub.injectMount(ReactMount);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    CompositionEventPlugin: CompositionEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin
  });

  ReactInjection.DOM.injectComponentClasses({
    button: ReactDOMButton,
    form: ReactDOMForm,
    img: ReactDOMImg,
    input: ReactDOMInput,
    option: ReactDOMOption,
    select: ReactDOMSelect,
    textarea: ReactDOMTextarea,

    html: createFullPageComponent(ReactDOM.html),
    head: createFullPageComponent(ReactDOM.head),
    title: createFullPageComponent(ReactDOM.title),
    body: createFullPageComponent(ReactDOM.body)
  });


  // This needs to happen after createFullPageComponent() otherwise the mixin
  // gets double injected.
  ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(DefaultDOMPropertyConfig);

  ReactInjection.Updates.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );

  ReactInjection.RootIndex.injectCreateReactRootIndex(
    ExecutionEnvironment.canUseDOM ?
      ClientReactRootIndex.createReactRootIndex :
      ServerReactRootIndex.createReactRootIndex
  );

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

  if ("production" !== process.env.NODE_ENV) {
    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
    if ((/[?&]react_perf\b/).test(url)) {
      var ReactDefaultPerf = require("./ReactDefaultPerf");
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};

}).call(this,require("qvMYcC"))
},{"./ChangeEventPlugin":13,"./ClientReactRootIndex":14,"./CompositionEventPlugin":15,"./DefaultDOMPropertyConfig":20,"./DefaultEventPluginOrder":21,"./EnterLeaveEventPlugin":22,"./ExecutionEnvironment":29,"./MobileSafariClickEventPlugin":31,"./ReactBrowserComponentMixin":34,"./ReactComponentBrowserEnvironment":37,"./ReactDOM":41,"./ReactDOMButton":42,"./ReactDOMForm":44,"./ReactDOMImg":46,"./ReactDOMInput":47,"./ReactDOMOption":48,"./ReactDOMSelect":49,"./ReactDOMTextarea":51,"./ReactDefaultBatchingStrategy":52,"./ReactDefaultPerf":54,"./ReactEventTopLevelCallback":59,"./ReactInjection":60,"./ReactInstanceHandles":62,"./ReactMount":64,"./SelectEventPlugin":81,"./ServerReactRootIndex":82,"./SimpleEventPlugin":83,"./createFullPageComponent":101,"qvMYcC":146}],54:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

"use strict";

var DOMProperty = require("./DOMProperty");
var ReactDefaultPerfAnalysis = require("./ReactDefaultPerfAnalysis");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");

var performanceNow = require("./performanceNow");

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _injected: false,

  start: function() {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function() {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function() {
    return ReactDefaultPerf._allMeasurements;
  },

  printExclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Total exclusive time (ms)': roundFloat(item.exclusive),
        'Exclusive time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printInclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printWasted: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
      measurements,
      true
    );
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printDOM: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function(item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result['type'] = item.type;
      result['args'] = JSON.stringify(item.args);
      return result;
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  _recordWrite: function(id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var writes =
      ReactDefaultPerf
        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
        .writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function(moduleName, fnName, func) {
    return function() {var args=Array.prototype.slice.call(arguments,0);
      var totalTime;
      var rv;
      var start;

      if (fnName === '_renderNewRootComponent' ||
          fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push({
          exclusive: {},
          inclusive: {},
          counts: {},
          writes: {},
          displayNames: {},
          totalTime: 0
        });
        start = performanceNow();
        rv = func.apply(this, args);
        ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ].totalTime = performanceNow() - start;
        return rv;
      } else if (moduleName === 'ReactDOMIDOperations' ||
        moduleName === 'ReactComponentBrowserEnvironment') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === 'mountImageIntoNode') {
          var mountID = ReactMount.getID(args[1]);
          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[0].forEach(function(update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.textContent !== null) {
              writeArgs.textContent = update.textContent;
            }
            if (update.markupIndex !== null) {
              writeArgs.markup = args[1][update.markupIndex];
            }
            ReactDefaultPerf._recordWrite(
              update.parentID,
              update.type,
              totalTime,
              writeArgs
            );
          });
        } else {
          // basic format
          ReactDefaultPerf._recordWrite(
            args[0],
            fnName,
            totalTime,
            Array.prototype.slice.call(args, 1)
          );
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (
        fnName === 'mountComponent' ||
        fnName === 'updateComponent' || // TODO: receiveComponent()?
        fnName === '_renderValidatedComponent')) {

        var rootNodeID = fnName === 'mountComponent' ?
          args[0] :
          this._rootNodeID;
        var isRender = fnName === '_renderValidatedComponent';
        var entry = ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ];

        if (isRender) {
          entry.counts[rootNodeID] = entry.counts[rootNodeID] || 0;
          entry.counts[rootNodeID] += 1;
        }

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        var typeOfLog = isRender ? entry.exclusive : entry.inclusive;
        typeOfLog[rootNodeID] = typeOfLog[rootNodeID] || 0;
        typeOfLog[rootNodeID] += totalTime;

        entry.displayNames[rootNodeID] = {
          current: this.constructor.displayName,
          owner: this._owner ? this._owner.constructor.displayName : '<root>'
        };

        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;

},{"./DOMProperty":17,"./ReactDefaultPerfAnalysis":55,"./ReactMount":64,"./ReactPerf":69,"./performanceNow":138}],55:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

var merge = require("./merge");

// Don't try to save users less than 1.2ms (a number I made up)
var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  'mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  TEXT_CONTENT: 'set textContent',
  'updatePropertyByID': 'update attribute',
  'deletePropertyByID': 'delete attribute',
  'updateStylesByID': 'update styles',
  'updateInnerHTMLByID': 'set innerHTML',
  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var id;

    for (id in measurement.writes) {
      measurement.writes[id].forEach(function(write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    }
  }
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = merge(measurement.exclusive, measurement.inclusive);

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        count: 0
      };
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function(a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = merge(measurement.exclusive, measurement.inclusive);
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function(a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var dirtyLeafIDs = Object.keys(measurement.writes);
  var allIDs = merge(measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // For each component that rendered, see if a component that triggerd
    // a DOM op is in its subtree.
    for (var i = 0; i < dirtyLeafIDs.length; i++) {
      if (dirtyLeafIDs[i].indexOf(id) === 0) {
        isDirty = true;
        break;
      }
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;

},{"./merge":130}],56:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

"use strict";

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. To aid debugging with the browser's debugger,
   * this currently simply returns the original function.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    return func;
  }
};

module.exports = ReactErrorUtils;

},{}],57:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventEmitter
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventListener = require("./EventListener");
var EventPluginHub = require("./EventPluginHub");
var EventPluginRegistry = require("./EventPluginRegistry");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactEventEmitterMixin = require("./ReactEventEmitterMixin");
var ViewportMetrics = require("./ViewportMetrics");

var invariant = require("./invariant");
var isEventSupported = require("./isEventSupported");
var merge = require("./merge");

/**
 * Summary of `ReactEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap native browser events. We normalize
 *    and de-duplicate events to account for browser quirks.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 *                   .
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .                         +-----------+
 *       +           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topBlur: 'blur',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topScroll: 'scroll',
  topSelectionChange: 'selectionchange',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  if (mountAt[topListenersIDKey] == null) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {DOMEventTarget} element Element on which to attach listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, handlerBaseName, element) {
  EventListener.listen(
    element,
    handlerBaseName,
    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(
      topLevelType
    )
  );
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {DOMEventTarget} element Element on which to attach listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, handlerBaseName, element) {
  EventListener.capture(
    element,
    handlerBaseName,
    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(
      topLevelType
    )
  );
}

/**
 * `ReactEventEmitter` is used to attach top-level event listeners. For example:
 *
 *   ReactEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactEventEmitter = merge(ReactEventEmitterMixin, {

  /**
   * React references `ReactEventTopLevelCallback` using this property in order
   * to allow dependency injection.
   */
  TopLevelCallbackCreator: null,

  injection: {
    /**
     * @param {function} TopLevelCallbackCreator
     */
    injectTopLevelCallbackCreator: function(TopLevelCallbackCreator) {
      ReactEventEmitter.TopLevelCallbackCreator = TopLevelCallbackCreator;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'setEnabled(...): Cannot toggle event listening in a Worker thread. ' +
      'This is likely a bug in the framework. Please report immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    if (ReactEventEmitter.TopLevelCallbackCreator) {
      ReactEventEmitter.TopLevelCallbackCreator.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      ReactEventEmitter.TopLevelCallbackCreator &&
      ReactEventEmitter.TopLevelCallbackCreator.isEnabled()
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {DOMDocument} contentDocument Document which owns the container
   */
  listenTo: function(registrationName, contentDocument) {
    var mountAt = contentDocument;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.
      registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0, l = dependencies.length; i < l; i++) {
      var dependency = dependencies[i];
      if (!isListening[dependency]) {
        var topLevelType = topLevelTypes[dependency];

        if (topLevelType === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            trapBubbledEvent(
              topLevelTypes.topWheel,
              'DOMMouseScroll',
              mountAt);
          }
        } else if (topLevelType === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
          } else {
            trapBubbledEvent(topLevelTypes.topScroll, 'scroll', window);
          }
        } else if (topLevelType === topLevelTypes.topFocus ||
            topLevelType === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
            trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
            trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping[dependency]) {
          trapBubbledEvent(topLevelType, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function(){
    if (!isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      EventListener.listen(window, 'scroll', refresh);
      EventListener.listen(window, 'resize', refresh);
      isMonitoringScrollValue = true;
    }
  },

  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

  registrationNameModules: EventPluginHub.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners,

  trapBubbledEvent: trapBubbledEvent,

  trapCapturedEvent: trapCapturedEvent

});

module.exports = ReactEventEmitter;

}).call(this,require("qvMYcC"))
},{"./EventConstants":23,"./EventListener":24,"./EventPluginHub":25,"./EventPluginRegistry":26,"./ExecutionEnvironment":29,"./ReactEventEmitterMixin":58,"./ViewportMetrics":95,"./invariant":121,"./isEventSupported":122,"./merge":130,"qvMYcC":146}],58:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventEmitterMixin
 */

"use strict";

var EventPluginHub = require("./EventPluginHub");
var ReactUpdates = require("./ReactUpdates");

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    // Event queue being processed in the same cycle allows `preventDefault`.
    ReactUpdates.batchedUpdates(runEventQueueInBatch, events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":25,"./ReactUpdates":80}],59:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventTopLevelCallback
 * @typechecks static-only
 */

"use strict";

var PooledClass = require("./PooledClass");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");

var getEventTarget = require("./getEventTarget");
var mixInto = require("./mixInto");

/**
 * @type {boolean}
 * @private
 */
var _topLevelListenersEnabled = true;

/**
 * Finds the parent React component of `node`.
 *
 * @param {*} node
 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
 *                           is not nested.
 */
function findParent(node) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  var nodeID = ReactMount.getID(node);
  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
  var container = ReactMount.findReactContainerForID(rootID);
  var parent = ReactMount.getFirstReactDOM(container);
  return parent;
}

/**
 * Calls ReactEventEmitter.handleTopLevel for each node stored in bookKeeping's
 * ancestor list. Separated from createTopLevelCallback to avoid try/finally
 * deoptimization.
 *
 * @param {string} topLevelType
 * @param {DOMEvent} nativeEvent
 * @param {TopLevelCallbackBookKeeping} bookKeeping
 */
function handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping) {
  var topLevelTarget = ReactMount.getFirstReactDOM(
    getEventTarget(nativeEvent)
  ) || window;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = topLevelTarget;
  while (ancestor) {
    bookKeeping.ancestors.push(ancestor);
    ancestor = findParent(ancestor);
  }

  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
    topLevelTarget = bookKeeping.ancestors[i];
    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
    ReactEventEmitter.handleTopLevel(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );
  }
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping() {
  this.ancestors = [];
}
mixInto(TopLevelCallbackBookKeeping, {
  destructor: function() {
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping);

/**
 * Top-level callback creator used to implement event handling using delegation.
 * This is used via dependency injection.
 */
var ReactEventTopLevelCallback = {

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    _topLevelListenersEnabled = !!enabled;
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return _topLevelListenersEnabled;
  },

  /**
   * Creates a callback for the supplied `topLevelType` that could be added as
   * a listener to the document. The callback computes a `topLevelTarget` which
   * should be the root node of a mounted React component where the listener
   * is attached.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @return {function} Callback for handling top-level events.
   */
  createTopLevelCallback: function(topLevelType) {
    return function(nativeEvent) {
      if (!_topLevelListenersEnabled) {
        return;
      }

      var bookKeeping = TopLevelCallbackBookKeeping.getPooled();
      try {
        handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping);
      } finally {
        TopLevelCallbackBookKeeping.release(bookKeeping);
      }
    };
  }

};

module.exports = ReactEventTopLevelCallback;

},{"./PooledClass":32,"./ReactEventEmitter":57,"./ReactInstanceHandles":62,"./ReactMount":64,"./getEventTarget":113,"./mixInto":133}],60:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactInjection
 */

"use strict";

var DOMProperty = require("./DOMProperty");
var EventPluginHub = require("./EventPluginHub");
var ReactComponent = require("./ReactComponent");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactPerf = require("./ReactPerf");
var ReactRootIndex = require("./ReactRootIndex");
var ReactUpdates = require("./ReactUpdates");

var ReactInjection = {
  Component: ReactComponent.injection,
  CompositeComponent: ReactCompositeComponent.injection,
  DOMProperty: DOMProperty.injection,
  EventPluginHub: EventPluginHub.injection,
  DOM: ReactDOM.injection,
  EventEmitter: ReactEventEmitter.injection,
  Perf: ReactPerf.injection,
  RootIndex: ReactRootIndex.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"./DOMProperty":17,"./EventPluginHub":25,"./ReactComponent":36,"./ReactCompositeComponent":38,"./ReactDOM":41,"./ReactEventEmitter":57,"./ReactPerf":69,"./ReactRootIndex":76,"./ReactUpdates":80}],61:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactInputSelection
 */

"use strict";

var ReactDOMSelection = require("./ReactDOMSelection");

var containsNode = require("./containsNode");
var focusNode = require("./focusNode");
var getActiveElement = require("./getActiveElement");

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' ||
      elem.contentEditable === 'true'
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":50,"./containsNode":98,"./focusNode":109,"./getActiveElement":111}],62:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

"use strict";

var ReactRootIndex = require("./ReactRootIndex");

var invariant = require("./invariant");

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + index.toString(36);
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== process.env.NODE_ENV ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== process.env.NODE_ENV ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  for (var i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== process.env.NODE_ENV ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them. If the
 * callback returns `false`, traversal is stopped.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== process.env.NODE_ENV ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== process.env.NODE_ENV ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    var ret;
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      ret = cb(id, traverseUp, arg);
    }
    if (ret === false || id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  /**
   * Constructs a React root ID
   * @return {string} A React root ID.
   */
  createReactRootID: function() {
    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
      var index = id.indexOf(SEPARATOR, 1);
      return index > -1 ? id.substr(0, index) : id;
    }
    return null;
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
   * example, passing `.0.$row-0.1` would result in `cb` getting called
   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseAncestors: function(targetID, cb, arg) {
    traverseParentPath('', targetID, cb, arg, true, false);
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

}).call(this,require("qvMYcC"))
},{"./ReactRootIndex":76,"./invariant":121,"qvMYcC":146}],63:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMarkupChecksum
 */

"use strict";

var adler32 = require("./adler32");

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":97}],64:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMount
 */

"use strict";

var DOMProperty = require("./DOMProperty");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactPerf = require("./ReactPerf");

var containsNode = require("./containsNode");
var getReactRootElementInContainer = require("./getReactRootElementInContainer");
var instantiateReactComponent = require("./instantiateReactComponent");
var invariant = require("./invariant");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== process.env.NODE_ENV) {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

// Used to store breadth-first search state in findComponentRoot.
var findComponentRootReusableArray = [];

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== process.env.NODE_ENV ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== process.env.NODE_ENV ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

var deepestNodeSoFar = null;
function findDeepestCachedAncestorImpl(ancestorID) {
  var ancestor = nodeCache[ancestorID];
  if (ancestor && isValid(ancestor, ancestorID)) {
    deepestNodeSoFar = ancestor;
  } else {
    // This node isn't populated in the cache, so presumably none of its
    // descendants are. Break out of the loop.
    return false;
  }
}

/**
 * Return the deepest cached node whose ID is a prefix of `targetID`.
 */
function findDeepestCachedAncestor(targetID) {
  deepestNodeSoFar = null;
  ReactInstanceHandles.traverseAncestors(
    targetID,
    findDeepestCachedAncestorImpl
  );

  var foundNode = deepestNodeSoFar;
  deepestNodeSoFar = null;
  return foundNode;
}

/**
 * Mounting is the process of initializing a React component by creatings its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.renderComponent(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /** Time spent generating markup. */
  totalInstantiationTime: 0,

  /** Time spent inserting markup into the DOM. */
  totalInjectionTime: 0,

  /** Whether support for touch events should be initialized. */
  useTouchEvents: false,

  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextComponent,
      container,
      callback) {
    var nextProps = nextComponent.props;
    ReactMount.scrollMonitor(container, function() {
      prevComponent.replaceProps(nextProps, callback);
    });

    if ("production" !== process.env.NODE_ENV) {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and starts scroll value
   * monitoring
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ("production" !== process.env.NODE_ENV ? invariant(
      container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
        container.nodeType === DOC_NODE_TYPE
      ),
      '_registerComponent(...): Target container is not a DOM element.'
    ) : invariant(container && (
      container.nodeType === ELEMENT_NODE_TYPE ||
      container.nodeType === DOC_NODE_TYPE
    )));

    ReactEventEmitter.ensureScrollValueMonitoring();

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: ReactPerf.measure(
    'ReactMount',
    '_renderNewRootComponent',
    function(
        nextComponent,
        container,
        shouldReuseMarkup) {

      var componentInstance = instantiateReactComponent(nextComponent);
      var reactRootID = ReactMount._registerComponent(
        componentInstance,
        container
      );
      componentInstance.mountComponentIntoNode(
        reactRootID,
        container,
        shouldReuseMarkup
      );

      if ("production" !== process.env.NODE_ENV) {
        // Record the root element in case it later gets transplanted.
        rootElementsByReactRootID[reactRootID] =
          getReactRootElementInContainer(container);
      }

      return componentInstance;
    }
  ),

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} nextComponent Component instance to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderComponent: function(nextComponent, container, callback) {
    var prevComponent = instancesByReactRootID[getReactRootID(container)];

    if (prevComponent) {
      if (shouldUpdateReactComponent(prevComponent, nextComponent)) {
        return ReactMount._updateRootComponent(
          prevComponent,
          nextComponent,
          container,
          callback
        );
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

    var component = ReactMount._renderNewRootComponent(
      nextComponent,
      container,
      shouldReuseMarkup
    );
    callback && callback.call(component);
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    return ReactMount.renderComponent(constructor(props), container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    var domNode = document.getElementById(id);
    ("production" !== process.env.NODE_ENV ? invariant(
      domNode,
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ) : invariant(domNode));
    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reactRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== process.env.NODE_ENV) {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    instance.unmountComponent();

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== process.env.NODE_ENV) {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== process.env.NODE_ENV ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          console.warn(
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          );
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `targetID` inside of the supplied
   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
   * quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} targetID ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, targetID) {
    var firstChildren = findComponentRootReusableArray;
    var childIndex = 0;

    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

    firstChildren[0] = deepestAncestor.firstChild;
    firstChildren.length = 1;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      var targetChild;

      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          // Even if we find the node we're looking for, we finish looping
          // through its siblings to ensure they're cached so that we don't have
          // to revisit this node again. Otherwise, we make n^2 calls to getID
          // when visiting the many children of a single node in order.

          if (targetID === childID) {
            targetChild = child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
          }

        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }

        child = child.nextSibling;
      }

      if (targetChild) {
        // Emptying firstChildren/findComponentRootReusableArray is
        // not necessary for correctness, but it helps the GC reclaim
        // any nodes that were left at the end of the search.
        firstChildren.length = 0;

        return targetChild;
      }
    }

    firstChildren.length = 0;

    ("production" !== process.env.NODE_ENV ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
      'usually due to forgetting a <tbody> when using tables or nesting <p> ' +
      'or <a> tags. Try inspecting the child nodes of the element with React ' +
      'ID `%s`.',
      targetID,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },


  /**
   * React ID utilities.
   */

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  purgeID: purgeID
};

module.exports = ReactMount;

}).call(this,require("qvMYcC"))
},{"./DOMProperty":17,"./ReactEventEmitter":57,"./ReactInstanceHandles":62,"./ReactPerf":69,"./containsNode":98,"./getReactRootElementInContainer":116,"./instantiateReactComponent":120,"./invariant":121,"./shouldUpdateReactComponent":140,"qvMYcC":146}],65:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMountReady
 */

"use strict";

var PooledClass = require("./PooledClass");

var mixInto = require("./mixInto");

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `ReactMountReady.getPooled()`.
 *
 * @param {?array<function>} initialCollection
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function ReactMountReady(initialCollection) {
  this._queue = initialCollection || null;
}

mixInto(ReactMountReady, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked. This is used
   * to enqueue calls to `componentDidMount` and `componentDidUpdate`.
   *
   * @param {ReactComponent} component Component being rendered.
   * @param {function(DOMElement)} callback Invoked when `notifyAll` is invoked.
   * @internal
   */
  enqueue: function(component, callback) {
    this._queue = this._queue || [];
    this._queue.push({component: component, callback: callback});
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var queue = this._queue;
    if (queue) {
      this._queue = null;
      for (var i = 0, l = queue.length; i < l; i++) {
        var component = queue[i].component;
        var callback = queue[i].callback;
        callback.call(component);
      }
      queue.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._queue = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(ReactMountReady);

module.exports = ReactMountReady;

},{"./PooledClass":32,"./mixInto":133}],66:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var flattenChildren = require("./flattenChildren");
var instantiateReactComponent = require("./instantiateReactComponent");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name)) {
          // The rendered children must be turned into instances as they're
          // mounted.
          var childInstance = instantiateReactComponent(child);
          children[name] = childInstance;
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + name;
          var mountImage = childInstance.mountComponent(
            rootID,
            transaction,
            this._mountDepth + 1
          );
          childInstance._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (shouldUpdateReactComponent(prevChild, nextChild)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextChild, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          // The child must be instantiated before it's mounted.
          var nextChildInstance = instantiateReactComponent(nextChild);
          this._mountChildByNameAtIndex(
            nextChildInstance, name, nextIndex, transaction
          );
        }
        nextIndex++;
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        // TODO: When is this not true?
        if (renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(child, name, index, transaction) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + name;
      var mountImage = child.mountComponent(
        rootID,
        transaction,
        this._mountDepth + 1
      );
      child._mountIndex = index;
      this.createChild(child, mountImage);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      // TODO: When is this not true?
      if (ReactComponent.isValidComponent(child)) {
        this.removeChild(child);
        child._mountIndex = null;
        child.unmountComponent();
        delete this._renderedChildren[name];
      }
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactComponent":36,"./ReactMultiChildUpdateTypes":67,"./flattenChildren":108,"./instantiateReactComponent":120,"./shouldUpdateReactComponent":140}],67:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

"use strict";

var keyMirror = require("./keyMirror");

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"./keyMirror":127}],68:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactOwner
 */

"use strict";

var emptyObject = require("./emptyObject");
var invariant = require("./invariant");

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      object &&
      typeof object.attachRef === 'function' &&
      typeof object.detachRef === 'function'
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to add a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to remove a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.refs[ref] === component) {
      owner.detachRef(ref);
    }
  },

  /**
   * A ReactComponent must mix this in to have refs.
   *
   * @lends {ReactOwner.prototype}
   */
  Mixin: {

    construct: function() {
      this.refs = emptyObject;
    },

    /**
     * Lazily allocates the refs object and stores `component` as `ref`.
     *
     * @param {string} ref Reference name.
     * @param {component} component Component to store as `ref`.
     * @final
     * @private
     */
    attachRef: function(ref, component) {
      ("production" !== process.env.NODE_ENV ? invariant(
        component.isOwnedBy(this),
        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
        ref
      ) : invariant(component.isOwnedBy(this)));
      var refs = this.refs === emptyObject ? (this.refs = {}) : this.refs;
      refs[ref] = component;
    },

    /**
     * Detaches a reference name.
     *
     * @param {string} ref Name to dereference.
     * @final
     * @private
     */
    detachRef: function(ref) {
      delete this.refs[ref];
    }

  }

};

module.exports = ReactOwner;

}).call(this,require("qvMYcC"))
},{"./emptyObject":106,"./invariant":121,"qvMYcC":146}],69:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

"use strict";

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */
var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== process.env.NODE_ENV) {
      var measuredFunc = null;
      return function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],70:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTransferer
 */

"use strict";

var emptyFunction = require("./emptyFunction");
var invariant = require("./invariant");
var joinClasses = require("./joinClasses");
var merge = require("./merge");

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 * NOTE: if you add any more exceptions to this list you should be sure to
 * update `cloneWithProps()` accordingly.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Never transfer the `key` prop.
   */
  key: emptyFunction,
  /**
   * Never transfer the `ref` prop.
   */
  ref: emptyFunction,
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: createTransferStrategy(merge)
};

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  TransferStrategies: TransferStrategies,

  /**
   * Merge two props objects using TransferStrategies.
   *
   * @param {object} oldProps original props (they take precedence)
   * @param {object} newProps new props to merge in
   * @return {object} a new object containing both sets of props merged.
   */
  mergeProps: function(oldProps, newProps) {
    var props = merge(oldProps);

    for (var thisKey in newProps) {
      if (!newProps.hasOwnProperty(thisKey)) {
        continue;
      }

      var transferStrategy = TransferStrategies[thisKey];

      if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
        transferStrategy(props, thisKey, newProps[thisKey]);
      } else if (!props.hasOwnProperty(thisKey)) {
        props[thisKey] = newProps[thisKey];
      }
    }

    return props;
  },

  /**
   * @lends {ReactPropTransferer.prototype}
   */
  Mixin: {

    /**
     * Transfer props from this component to a target component.
     *
     * Props that do not have an explicit transfer strategy will be transferred
     * only if the target component does not already have the prop set.
     *
     * This is usually used to pass down props to a returned root component.
     *
     * @param {ReactComponent} component Component receiving the properties.
     * @return {ReactComponent} The supplied `component`.
     * @final
     * @protected
     */
    transferPropsTo: function(component) {
      ("production" !== process.env.NODE_ENV ? invariant(
        component._owner === this,
        '%s: You can\'t call transferPropsTo() on a component that you ' +
        'don\'t own, %s. This usually means you are calling ' +
        'transferPropsTo() on a component passed in as props or children.',
        this.constructor.displayName,
        component.constructor.displayName
      ) : invariant(component._owner === this));

      component.props = ReactPropTransferer.mergeProps(
        component.props,
        this.props
      );

      return component;
    }

  }
};

module.exports = ReactPropTransferer;

}).call(this,require("qvMYcC"))
},{"./emptyFunction":105,"./invariant":121,"./joinClasses":126,"./merge":130,"qvMYcC":146}],71:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTypeLocationNames
 */

"use strict";

var ReactPropTypeLocationNames = {};

if ("production" !== process.env.NODE_ENV) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],72:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTypeLocations
 */

"use strict";

var keyMirror = require("./keyMirror");

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

},{"./keyMirror":127}],73:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTypes
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");

var warning = require("./warning");
var createObjectFrom = require("./createObjectFrom");

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyLink = React.createClass({
 *     propTypes: {
 *       // An optional string or URI prop named "href".
 *       href: function(props, propName, componentName) {
 *         var propValue = props[propName];
 *         warning(
 *           propValue == null ||
 *           typeof propValue === 'string' ||
 *           propValue instanceof URI,
 *           'Invalid `%s` supplied to `%s`, expected string or URI.',
 *           propName,
 *           componentName
 *         );
 *       }
 *     },
 *     render: function() { ... }
 *   });
 *
 * @internal
 */
var Props = {

  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  shape: createShapeTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  arrayOf: createArrayOfTypeChecker,

  instanceOf: createInstanceTypeChecker,

  renderable: createRenderableTypeChecker(),

  component: createComponentTypeChecker(),

  any: createAnyTypeChecker()
};

var ANONYMOUS = '<<anonymous>>';

function isRenderable(propValue) {
  switch(typeof propValue) {
    case 'number':
    case 'string':
      return true;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isRenderable);
      }
      if (ReactComponent.isValidComponent(propValue)) {
        return true;
      }
      for (var k in propValue) {
        if (!isRenderable(propValue[k])) {
          return false;
        }
      }
      return true;
    default:
      return false;
  }
}

// Equivalent of typeof but with special handling for arrays
function getPropType(propValue) {
  var propType = typeof propValue;
  if (propType === 'object' && Array.isArray(propValue)) {
    return 'array';
  }
  return propType;
}

function createAnyTypeChecker() {
  function validateAnyType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    return true; // is always valid
  }
  return createChainableTypeChecker(validateAnyType);
}

function createPrimitiveTypeChecker(expectedType) {
  function validatePrimitiveType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var propType = getPropType(propValue);
    var isValid = propType === expectedType;
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` of type `%s` supplied to `%s`, expected `%s`.',
        ReactPropTypeLocationNames[location],
        propName,
        propType,
        componentName,
        expectedType
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validatePrimitiveType);
}

function createEnumTypeChecker(expectedValues) {
  var expectedEnum = createObjectFrom(expectedValues);
  function validateEnumType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var isValid = expectedEnum[propValue];
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` supplied to `%s`, expected one of %s.',
        ReactPropTypeLocationNames[location],
        propName,
        componentName,
        JSON.stringify(Object.keys(expectedEnum))
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateEnumType);
}

function createShapeTypeChecker(shapeTypes) {
  function validateShapeType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var propType = getPropType(propValue);
    var isValid = propType === 'object';
    if (isValid) {
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (checker && !checker(propValue, key, componentName, location)) {
          return false;
        }
      }
    }
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` of type `%s` supplied to `%s`, expected `object`.',
        ReactPropTypeLocationNames[location],
        propName,
        propType,
        componentName
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateShapeType);
}

function createInstanceTypeChecker(expectedClass) {
  function validateInstanceType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var isValid = propValue instanceof expectedClass;
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` supplied to `%s`, expected instance of `%s`.',
        ReactPropTypeLocationNames[location],
        propName,
        componentName,
        expectedClass.name || ANONYMOUS
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateInstanceType);
}

function createArrayOfTypeChecker(propTypeChecker) {
  function validateArrayType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var isValid = Array.isArray(propValue);
    if (isValid) {
      for (var i = 0; i < propValue.length; i++) {
        if (!propTypeChecker(propValue, i, componentName, location)) {
          return false;
        }
      }
    }
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` supplied to `%s`, expected an array.',
        ReactPropTypeLocationNames[location],
        propName,
        componentName
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateArrayType);
}

function createRenderableTypeChecker() {
  function validateRenderableType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var isValid = isRenderable(propValue);
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` supplied to `%s`, expected a renderable prop.',
        ReactPropTypeLocationNames[location],
        propName,
        componentName
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateRenderableType);
}

function createComponentTypeChecker() {
  function validateComponentType(
    shouldWarn, propValue, propName, componentName, location
  ) {
    var isValid = ReactComponent.isValidComponent(propValue);
    if (shouldWarn) {
      ("production" !== process.env.NODE_ENV ? warning(
        isValid,
        'Invalid %s `%s` supplied to `%s`, expected a React component.',
        ReactPropTypeLocationNames[location],
        propName,
        componentName
      ) : null);
    }
    return isValid;
  }
  return createChainableTypeChecker(validateComponentType);
}

function createUnionTypeChecker(arrayOfValidators) {
  return function(props, propName, componentName, location) {
    var isValid = false;
    for (var ii = 0; ii < arrayOfValidators.length; ii++) {
      var validate = arrayOfValidators[ii];
      if (typeof validate.weak === 'function') {
        validate = validate.weak;
      }
      if (validate(props, propName, componentName, location)) {
        isValid = true;
        break;
      }
    }
    ("production" !== process.env.NODE_ENV ? warning(
      isValid,
      'Invalid %s `%s` supplied to `%s`.',
      ReactPropTypeLocationNames[location],
      propName,
      componentName || ANONYMOUS
    ) : null);
    return isValid;
  };
}

function createChainableTypeChecker(validate) {
  function checkType(
    isRequired, shouldWarn, props, propName, componentName, location
  ) {
    var propValue = props[propName];
    if (propValue != null) {
      // Only validate if there is a value to check.
      return validate(
        shouldWarn,
        propValue,
        propName,
        componentName || ANONYMOUS,
        location
      );
    } else {
      var isValid = !isRequired;
      if (shouldWarn) {
        ("production" !== process.env.NODE_ENV ? warning(
          isValid,
          'Required %s `%s` was not specified in `%s`.',
          ReactPropTypeLocationNames[location],
          propName,
          componentName || ANONYMOUS
        ) : null);
      }
      return isValid;
    }
  }

  var checker = checkType.bind(null, false, true);
  checker.weak = checkType.bind(null, false, false);
  checker.isRequired = checkType.bind(null, true, true);
  checker.weak.isRequired = checkType.bind(null, true, false);
  checker.isRequired.weak = checker.weak.isRequired;

  return checker;
}

module.exports = Props;

}).call(this,require("qvMYcC"))
},{"./ReactComponent":36,"./ReactPropTypeLocationNames":71,"./createObjectFrom":103,"./warning":143,"qvMYcC":146}],74:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPutListenerQueue
 */

"use strict";

var PooledClass = require("./PooledClass");
var ReactEventEmitter = require("./ReactEventEmitter");

var mixInto = require("./mixInto");

function ReactPutListenerQueue() {
  this.listenersToPut = [];
}

mixInto(ReactPutListenerQueue, {
  enqueuePutListener: function(rootNodeID, propKey, propValue) {
    this.listenersToPut.push({
      rootNodeID: rootNodeID,
      propKey: propKey,
      propValue: propValue
    });
  },

  putListeners: function() {
    for (var i = 0; i < this.listenersToPut.length; i++) {
      var listenerToPut = this.listenersToPut[i];
      ReactEventEmitter.putListener(
        listenerToPut.rootNodeID,
        listenerToPut.propKey,
        listenerToPut.propValue
      );
    }
  },

  reset: function() {
    this.listenersToPut.length = 0;
  },

  destructor: function() {
    this.reset();
  }
});

PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;

},{"./PooledClass":32,"./ReactEventEmitter":57,"./mixInto":133}],75:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

"use strict";

var PooledClass = require("./PooledClass");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactInputSelection = require("./ReactInputSelection");
var ReactMountReady = require("./ReactMountReady");
var ReactPutListenerQueue = require("./ReactPutListenerQueue");
var Transaction = require("./Transaction");

var mixInto = require("./mixInto");

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactEventEmitter` before the
   * reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactEventEmitter.isEnabled();
    ReactEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of `ReactEventEmitter`
   *   before the reconciliation occured. `close` restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a `ReactMountReady` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: function() {
    this.putListenerQueue.putListeners();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = ReactMountReady.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   *   TODO: convert to ReactMountReady
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    ReactMountReady.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


mixInto(ReactReconcileTransaction, Transaction.Mixin);
mixInto(ReactReconcileTransaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./PooledClass":32,"./ReactEventEmitter":57,"./ReactInputSelection":61,"./ReactMountReady":65,"./ReactPutListenerQueue":74,"./Transaction":94,"./mixInto":133}],76:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactRootIndex
 * @typechecks
 */

"use strict";

var ReactRootIndexInjection = {
  /**
   * @param {function} _createReactRootIndex
   */
  injectCreateReactRootIndex: function(_createReactRootIndex) {
    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
  }
};

var ReactRootIndex = {
  createReactRootIndex: null,
  injection: ReactRootIndexInjection
};

module.exports = ReactRootIndex;

},{}],77:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
"use strict";

var ReactComponent = require("./ReactComponent");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactServerRenderingTransaction =
  require("./ReactServerRenderingTransaction");

var instantiateReactComponent = require("./instantiateReactComponent");
var invariant = require("./invariant");

/**
 * @param {ReactComponent} component
 * @return {string} the HTML markup
 */
function renderComponentToString(component) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactComponent.isValidComponent(component),
    'renderComponentToString(): You must pass a valid ReactComponent.'
  ) : invariant(ReactComponent.isValidComponent(component)));

  ("production" !== process.env.NODE_ENV ? invariant(
    !(arguments.length === 2 && typeof arguments[1] === 'function'),
    'renderComponentToString(): This function became synchronous and now ' +
    'returns the generated markup. Please remove the second parameter.'
  ) : invariant(!(arguments.length === 2 && typeof arguments[1] === 'function')));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(false);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(component);
      var markup = componentInstance.mountComponent(id, transaction, 0);
      return ReactMarkupChecksum.addChecksumToMarkup(markup);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

/**
 * @param {ReactComponent} component
 * @return {string} the HTML markup, without the extra React ID and checksum
* (for generating static pages)
 */
function renderComponentToStaticMarkup(component) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactComponent.isValidComponent(component),
    'renderComponentToStaticMarkup(): You must pass a valid ReactComponent.'
  ) : invariant(ReactComponent.isValidComponent(component)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(true);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(component);
      return componentInstance.mountComponent(id, transaction, 0);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

module.exports = {
  renderComponentToString: renderComponentToString,
  renderComponentToStaticMarkup: renderComponentToStaticMarkup
};

}).call(this,require("qvMYcC"))
},{"./ReactComponent":36,"./ReactInstanceHandles":62,"./ReactMarkupChecksum":63,"./ReactServerRenderingTransaction":78,"./instantiateReactComponent":120,"./invariant":121,"qvMYcC":146}],78:[function(require,module,exports){
/**
 * Copyright 2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactServerRenderingTransaction
 * @typechecks
 */

"use strict";

var PooledClass = require("./PooledClass");
var ReactMountReady = require("./ReactMountReady");
var ReactPutListenerQueue = require("./ReactPutListenerQueue");
var Transaction = require("./Transaction");

var emptyFunction = require("./emptyFunction");
var mixInto = require("./mixInto");

/**
 * Provides a `ReactMountReady` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  close: emptyFunction
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: emptyFunction
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  ON_DOM_READY_QUEUEING
];

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.reactMountReady = ReactMountReady.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap proceedures.
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   *   TODO: convert to ReactMountReady
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    ReactMountReady.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


mixInto(ReactServerRenderingTransaction, Transaction.Mixin);
mixInto(ReactServerRenderingTransaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"./PooledClass":32,"./ReactMountReady":65,"./ReactPutListenerQueue":74,"./Transaction":94,"./emptyFunction":105,"./mixInto":133}],79:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactTextComponent
 * @typechecks static-only
 */

"use strict";

var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactComponent = require("./ReactComponent");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var mixInto = require("./mixInto");

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactTextComponent = function(initialText) {
  this.construct({text: initialText});
};

/**
 * Used to clone the text descriptor object before it's mounted.
 *
 * @param {object} props
 * @return {object} A new ReactTextComponent instance
 */
ReactTextComponent.ConvenienceConstructor = function(props) {
  return new ReactTextComponent(props.text);
};

mixInto(ReactTextComponent, ReactComponent.Mixin);
mixInto(ReactTextComponent, ReactBrowserComponentMixin);
mixInto(ReactTextComponent, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, mountDepth) {
    ReactComponent.Mixin.mountComponent.call(
      this,
      rootID,
      transaction,
      mountDepth
    );

    var escapedText = escapeTextForBrowser(this.props.text);

    if (transaction.renderToStaticMarkup) {
      // Normally we'd wrap this in a `span` for the reasons stated above, but
      // since this is a situation where React won't take over (static pages),
      // we can simply return the text as it is.
      return escapedText;
    }

    return (
      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
        escapedText +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {object} nextComponent Contains the next text content.
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextComponent, transaction) {
    var nextProps = nextComponent.props;
    if (nextProps.text !== this.props.text) {
      this.props.text = nextProps.text;
      ReactComponent.BackendIDOperations.updateTextContentByID(
        this._rootNodeID,
        nextProps.text
      );
    }
  }

});

// Expose the constructor on itself and the prototype for consistency with other
// descriptors.
ReactTextComponent.type = ReactTextComponent;
ReactTextComponent.prototype.type = ReactTextComponent;

module.exports = ReactTextComponent;

},{"./DOMPropertyOperations":18,"./ReactBrowserComponentMixin":34,"./ReactComponent":36,"./escapeTextForBrowser":107,"./mixInto":133}],80:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactUpdates
 */

"use strict";

var ReactPerf = require("./ReactPerf");

var invariant = require("./invariant");

var dirtyComponents = [];

var batchingStrategy = null;

function ensureBatchingStrategy() {
  ("production" !== process.env.NODE_ENV ? invariant(batchingStrategy, 'ReactUpdates: must inject a batching strategy') : invariant(batchingStrategy));
}

function batchedUpdates(callback, param) {
  ensureBatchingStrategy();
  batchingStrategy.batchedUpdates(callback, param);
}

/**
 * Array comparator for ReactComponents by owner depth
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountDepthComparator(c1, c2) {
  return c1._mountDepth - c2._mountDepth;
}

function runBatchedUpdates() {
  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.

  dirtyComponents.sort(mountDepthComparator);

  for (var i = 0; i < dirtyComponents.length; i++) {
    // If a component is unmounted before pending changes apply, ignore them
    // TODO: Queue unmounts in the same list to avoid this happening at all
    var component = dirtyComponents[i];
    if (component.isMounted()) {
      // If performUpdateIfNecessary happens to enqueue any new updates, we
      // shouldn't execute the callbacks until the next render happens, so
      // stash the callbacks first
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      component.performUpdateIfNecessary();
      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          callbacks[j].call(component);
        }
      }
    }
  }
}

function clearDirtyComponents() {
  dirtyComponents.length = 0;
}

var flushBatchedUpdates = ReactPerf.measure(
  'ReactUpdates',
  'flushBatchedUpdates',
  function() {
    // Run these in separate functions so the JIT can optimize
    try {
      runBatchedUpdates();
    } finally {
      clearDirtyComponents();
    }
  }
);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component, callback) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !callback || typeof callback === "function",
    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
    'isn\'t callable.'
  ) : invariant(!callback || typeof callback === "function"));
  ensureBatchingStrategy();

  if (!batchingStrategy.isBatchingUpdates) {
    component.performUpdateIfNecessary();
    callback && callback.call(component);
    return;
  }

  dirtyComponents.push(component);

  if (callback) {
    if (component._pendingCallbacks) {
      component._pendingCallbacks.push(callback);
    } else {
      component._pendingCallbacks = [callback];
    }
  }
}

var ReactUpdatesInjection = {
  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== process.env.NODE_ENV ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection
};

module.exports = ReactUpdates;

}).call(this,require("qvMYcC"))
},{"./ReactPerf":69,"./invariant":121,"qvMYcC":146}],81:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SelectEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var ReactInputSelection = require("./ReactInputSelection");
var SyntheticEvent = require("./SyntheticEvent");

var getActiveElement = require("./getActiveElement");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");
var shallowEqual = require("./shallowEqual");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topContextMenu,
      topLevelTypes.topFocus,
      topLevelTypes.topKeyDown,
      topLevelTypes.topMouseDown,
      topLevelTypes.topMouseUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

var activeElement = null;
var activeElementID = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  } else {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown ||
      activeElement == null ||
      activeElement != getActiveElement()) {
    return;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      case topLevelTypes.topSelectionChange:
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent);
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventConstants":23,"./EventPropagators":28,"./ReactInputSelection":61,"./SyntheticEvent":87,"./getActiveElement":111,"./isTextInputElement":124,"./keyOf":128,"./shallowEqual":139}],82:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ServerReactRootIndex
 * @typechecks
 */

"use strict";

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. In the future we need a way to generate GUIDs but for
 * now this will work on a smaller scale.
 */
var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

var ServerReactRootIndex = {
  createReactRootIndex: function() {
    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
  }
};

module.exports = ServerReactRootIndex;

},{}],83:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SimpleEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPluginUtils = require("./EventPluginUtils");
var EventPropagators = require("./EventPropagators");
var SyntheticClipboardEvent = require("./SyntheticClipboardEvent");
var SyntheticEvent = require("./SyntheticEvent");
var SyntheticFocusEvent = require("./SyntheticFocusEvent");
var SyntheticKeyboardEvent = require("./SyntheticKeyboardEvent");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");
var SyntheticDragEvent = require("./SyntheticDragEvent");
var SyntheticTouchEvent = require("./SyntheticTouchEvent");
var SyntheticUIEvent = require("./SyntheticUIEvent");
var SyntheticWheelEvent = require("./SyntheticWheelEvent");

var invariant = require("./invariant");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({onLoad: true}),
      captured: keyOf({onLoadCapture: true})
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({onError: true}),
      captured: keyOf({onErrorCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOut: true}),
      captured: keyOf({onMouseOutCapture: true})
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOver: true}),
      captured: keyOf({onMouseOverCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({onReset: true}),
      captured: keyOf({onResetCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topError:       eventTypes.error,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topLoad:        eventTypes.load,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseOut:    eventTypes.mouseOut,
  topMouseOver:   eventTypes.mouseOver,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topReset:       eventTypes.reset,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

for (var topLevelType in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);
    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topLoad:
      case topLevelTypes.topError:
      case topLevelTypes.topReset:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyPress:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

}).call(this,require("qvMYcC"))
},{"./EventConstants":23,"./EventPluginUtils":27,"./EventPropagators":28,"./SyntheticClipboardEvent":84,"./SyntheticDragEvent":86,"./SyntheticEvent":87,"./SyntheticFocusEvent":88,"./SyntheticKeyboardEvent":89,"./SyntheticMouseEvent":90,"./SyntheticTouchEvent":91,"./SyntheticUIEvent":92,"./SyntheticWheelEvent":93,"./invariant":121,"./keyOf":128,"qvMYcC":146}],84:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function(event) {
    return (
      'clipboardData' in event ?
        event.clipboardData :
        window.clipboardData
    );
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;


},{"./SyntheticEvent":87}],85:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;


},{"./SyntheticEvent":87}],86:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticDragEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = require("./SyntheticMouseEvent");

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"./SyntheticMouseEvent":90}],87:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

"use strict";

var PooledClass = require("./PooledClass");

var emptyFunction = require("./emptyFunction");
var getEventTarget = require("./getEventTarget");
var merge = require("./merge");
var mergeInto = require("./mergeInto");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

mergeInto(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    event.preventDefault ? event.preventDefault() : event.returnValue = false;
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  mergeInto(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = merge(Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"./PooledClass":32,"./emptyFunction":105,"./getEventTarget":113,"./merge":130,"./mergeInto":132}],88:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":92}],89:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

var getEventKey = require("./getEventKey");

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  // Legacy Interface
  'char': null,
  charCode: null,
  keyCode: null,
  which: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":92,"./getEventKey":112}],90:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");
var ViewportMetrics = require("./ViewportMetrics");

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      event.fromElement === event.srcElement ?
        event.toElement :
        event.fromElement
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":92,"./ViewportMetrics":95}],91:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":92}],92:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: null,
  detail: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":87}],93:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = require("./SyntheticMouseEvent");

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0
    );
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":90}],94:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule Transaction
 */

"use strict";

var invariant = require("./invariant");

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Bonus:
 * - Reports timing metrics by method name and wrapper index.
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM upates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    if (!this.timingMetrics) {
      this.timingMetrics = {};
    }
    this.timingMetrics.methodInvocationTime = 0;
    if (!this.timingMetrics.wrapperInitTimes) {
      this.timingMetrics.wrapperInitTimes = [];
    } else {
      this.timingMetrics.wrapperInitTimes.length = 0;
    }
    if (!this.timingMetrics.wrapperCloseTimes) {
      this.timingMetrics.wrapperCloseTimes = [];
    } else {
      this.timingMetrics.wrapperCloseTimes.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var memberStart = Date.now();
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      var memberEnd = Date.now();
      this.methodInvocationTime += (memberEnd - memberStart);
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {
          }
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    var wrapperInitTimes = this.timingMetrics.wrapperInitTimes;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var initStart = Date.now();
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } finally {
        var curInitTime = wrapperInitTimes[i];
        var initEnd = Date.now();
        wrapperInitTimes[i] = (curInitTime || 0) + (initEnd - initStart);

        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {
          }
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function(startIndex) {
    ("production" !== process.env.NODE_ENV ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    var wrapperCloseTimes = this.timingMetrics.wrapperCloseTimes;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var closeStart = Date.now();
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR) {
          wrapper.close && wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        var closeEnd = Date.now();
        var curCloseTime = wrapperCloseTimes[i];
        wrapperCloseTimes[i] = (curCloseTime || 0) + (closeEnd - closeStart);

        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {
          }
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],95:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ViewportMetrics
 */

"use strict";

var getUnboundedScrollPosition = require("./getUnboundedScrollPosition");

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function() {
    var scrollPosition = getUnboundedScrollPosition(window);
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{"./getUnboundedScrollPosition":118}],96:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule accumulate
 */

"use strict";

var invariant = require("./invariant");

/**
 * Accumulates items that must not be null or undefined.
 *
 * This is used to conserve memory by avoiding array allocations.
 *
 * @return {*|array<*>} An accumulation of items.
 */
function accumulate(current, next) {
  ("production" !== process.env.NODE_ENV ? invariant(
    next != null,
    'accumulate(...): Accumulated items must be not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  } else {
    // Both are not empty. Warning: Never call x.concat(y) when you are not
    // certain that x is an Array (x could be a string with concat method).
    var currentIsArray = Array.isArray(current);
    var nextIsArray = Array.isArray(next);
    if (currentIsArray) {
      return current.concat(next);
    } else {
      if (nextIsArray) {
        return [current].concat(next);
      } else {
        return [current, next];
      }
    }
  }
}

module.exports = accumulate;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],97:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

"use strict";

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonable good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],98:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = require("./isTextNode");

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":125}],99:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule copyProperties
 */

/**
 * Copy properties from one or more objects (up to 5) into the first object.
 * This is a shallow copy. It mutates the first object and also returns it.
 *
 * NOTE: `arguments` has a very significant performance penalty, which is why
 * we don't support unlimited arguments.
 */
function copyProperties(obj, a, b, c, d, e, f) {
  obj = obj || {};

  if ("production" !== process.env.NODE_ENV) {
    if (f) {
      throw new Error('Too many arguments passed to copyProperties');
    }
  }

  var args = [a, b, c, d, e];
  var ii = 0, v;
  while (args[ii]) {
    v = args[ii++];
    for (var k in v) {
      obj[k] = v[k];
    }

    // IE ignores toString in object iteration.. See:
    // webreflection.blogspot.com/2007/07/quick-fix-internet-explorer-and.html
    if (v.hasOwnProperty && v.hasOwnProperty('toString') &&
        (typeof v.toString != 'undefined') && (obj.toString !== v.toString)) {
      obj.toString = v.toString;
    }
  }

  return obj;
}

module.exports = copyProperties;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],100:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createArrayFrom
 * @typechecks
 */

var toArray = require("./toArray");

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFrom = require('createArrayFrom');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFrom(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFrom(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFrom;

},{"./toArray":141}],101:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createFullPageComponent
 * @typechecks
 */

"use strict";

// Defeat circular references by requiring this directly.
var ReactCompositeComponent = require("./ReactCompositeComponent");

var invariant = require("./invariant");

/**
 * Create a component that will throw an exception when unmounted.
 *
 * Components like <html> <head> and <body> can't be removed or added
 * easily in a cross-browser way, however it's valuable to be able to
 * take advantage of React's reconciliation for styling and <title>
 * management. So we just document it and throw in dangerous cases.
 *
 * @param {function} componentClass convenience constructor to wrap
 * @return {function} convenience constructor of new component
 */
function createFullPageComponent(componentClass) {
  var FullPageComponent = ReactCompositeComponent.createClass({
    displayName: 'ReactFullPageComponent' + (
      componentClass.componentConstructor.displayName || ''
    ),

    componentWillUnmount: function() {
      ("production" !== process.env.NODE_ENV ? invariant(
        false,
        '%s tried to unmount. Because of cross-browser quirks it is ' +
        'impossible to unmount some top-level components (eg <html>, <head>, ' +
        'and <body>) reliably and efficiently. To fix this, have a single ' +
        'top-level component that never unmounts render these elements.',
        this.constructor.displayName
      ) : invariant(false));
    },

    render: function() {
      return this.transferPropsTo(componentClass(null, this.props.children));
    }
  });

  return FullPageComponent;
}

module.exports = createFullPageComponent;

}).call(this,require("qvMYcC"))
},{"./ReactCompositeComponent":38,"./invariant":121,"qvMYcC":146}],102:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createArrayFrom = require("./createArrayFrom");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== process.env.NODE_ENV ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFrom(scripts).forEach(handleScript);
  }

  var nodes = createArrayFrom(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

}).call(this,require("qvMYcC"))
},{"./ExecutionEnvironment":29,"./createArrayFrom":100,"./getMarkupWrap":114,"./invariant":121,"qvMYcC":146}],103:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createObjectFrom
 */

/**
 * Construct an object from an array of keys
 * and optionally specified value or list of values.
 *
 *  >>> createObjectFrom(['a','b','c']);
 *  {a: true, b: true, c: true}
 *
 *  >>> createObjectFrom(['a','b','c'], false);
 *  {a: false, b: false, c: false}
 *
 *  >>> createObjectFrom(['a','b','c'], 'monkey');
 *  {c:'monkey', b:'monkey' c:'monkey'}
 *
 *  >>> createObjectFrom(['a','b','c'], [1,2,3]);
 *  {a: 1, b: 2, c: 3}
 *
 *  >>> createObjectFrom(['women', 'men'], [true, false]);
 *  {women: true, men: false}
 *
 * @param   Array   list of keys
 * @param   mixed   optional value or value array.  defaults true.
 * @returns object
 */
function createObjectFrom(keys, values /* = true */) {
  if ("production" !== process.env.NODE_ENV) {
    if (!Array.isArray(keys)) {
      throw new TypeError('Must pass an array of keys.');
    }
  }

  var object = {};
  var isArray = Array.isArray(values);
  if (typeof values == 'undefined') {
    values = true;
  }

  for (var ii = keys.length; ii--;) {
    object[keys[ii]] = isArray ? values[ii] : values;
  }
  return object;
}

module.exports = createObjectFrom;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],104:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

"use strict";

var CSSProperty = require("./CSSProperty");

/**
 * Convert a value into the proper css writable value. The `styleName` name
 * name should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} styleName CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(styleName, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || CSSProperty.isUnitlessNumber[styleName]) {
    return '' + value; // cast to string
  }

  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":11}],105:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule emptyFunction
 */

var copyProperties = require("./copyProperties");

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

copyProperties(emptyFunction, {
  thatReturns: makeEmptyFunction,
  thatReturnsFalse: makeEmptyFunction(false),
  thatReturnsTrue: makeEmptyFunction(true),
  thatReturnsNull: makeEmptyFunction(null),
  thatReturnsThis: function() { return this; },
  thatReturnsArgument: function(arg) { return arg; }
});

module.exports = emptyFunction;

},{"./copyProperties":99}],106:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule emptyObject
 */

"use strict";

var emptyObject = {};

if ("production" !== process.env.NODE_ENV) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],107:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule escapeTextForBrowser
 * @typechecks static-only
 */

"use strict";

var ESCAPE_LOOKUP = {
  "&": "&amp;",
  ">": "&gt;",
  "<": "&lt;",
  "\"": "&quot;",
  "'": "&#x27;",
  "/": "&#x2f;"
};

var ESCAPE_REGEX = /[&><"'\/]/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextForBrowser;

},{}],108:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule flattenChildren
 */

"use strict";

var invariant = require("./invariant");
var traverseAllChildren = require("./traverseAllChildren");

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  ("production" !== process.env.NODE_ENV ? invariant(
    !result.hasOwnProperty(name),
    'flattenChildren(...): Encountered two children with the same key, `%s`. ' +
    'Children keys must be unique.',
    name
  ) : invariant(!result.hasOwnProperty(name)));
  if (child != null) {
    result[name] = child;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"./traverseAllChildren":142,"qvMYcC":146}],109:[function(require,module,exports){
/**
 * Copyright 2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule focusNode
 */

"use strict";

/**
 * IE8 throws if an input/textarea is disabled and we try to focus it.
 * Focus only when necessary.
 *
 * @param {DOMElement} node input/textarea to focus
 */
function focusNode(node) {
  if (!node.disabled) {
    node.focus();
  }
}

module.exports = focusNode;

},{}],110:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule forEachAccumulated
 */

"use strict";

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],111:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document body is not yet defined.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

},{}],112:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getEventKey
 * @typechecks static-only
 */

"use strict";

/**
 * Normalization of deprecated HTML5 "key" values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy "which/keyCode" to HTML5 "key"
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  return 'key' in nativeEvent ?
    normalizeKey[nativeEvent.key] || nativeEvent.key :
    translateToKey[nativeEvent.which || nativeEvent.keyCode] || 'Unidentified';
}

module.exports = getEventKey;

},{}],113:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

"use strict";

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],114:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var invariant = require("./invariant");

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'defs': true,
  'g': true,
  'line': true,
  'linearGradient': true,
  'path': true,
  'polygon': true,
  'polyline': true,
  'radialGradient': true,
  'rect': true,
  'stop': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'defs': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'linearGradient': svgWrap,
  'path': svgWrap,
  'polygon': svgWrap,
  'polyline': svgWrap,
  'radialGradient': svgWrap,
  'rect': svgWrap,
  'stop': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

}).call(this,require("qvMYcC"))
},{"./ExecutionEnvironment":29,"./invariant":121,"qvMYcC":146}],115:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getNodeForCharacterOffset
 */

"use strict";

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType == 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],116:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getReactRootElementInContainer
 */

"use strict";

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],117:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getTextContentAccessor
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.createElement('div') ?
      'textContent' :
      'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"./ExecutionEnvironment":29}],118:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],119:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],120:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule instantiateReactComponent
 * @typechecks static-only
 */

"use strict";

var warning = require("./warning");

/**
 * Validate a `componentDescriptor`. This should be exposed publicly in a follow
 * up diff.
 *
 * @param {object} descriptor
 * @return {boolean} Returns true if this is a valid descriptor of a Component.
 */
function isValidComponentDescriptor(descriptor) {
  return (
    typeof descriptor.constructor === 'function' &&
    typeof descriptor.constructor.prototype.construct === 'function' &&
    typeof descriptor.constructor.prototype.mountComponent === 'function' &&
    typeof descriptor.constructor.prototype.receiveComponent === 'function'
  );
}

/**
 * Given a `componentDescriptor` create an instance that will actually be
 * mounted. Currently it just extracts an existing clone from composite
 * components but this is an implementation detail which will change.
 *
 * @param {object} descriptor
 * @return {object} A new instance of componentDescriptor's constructor.
 * @protected
 */
function instantiateReactComponent(descriptor) {
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      isValidComponentDescriptor(descriptor),
      'Only React Components are valid for mounting.'
    ) : null);
    // We use the clone of a composite component instead of the original
    // instance. This allows us to warn you if you're are accessing the wrong
    // instance.
    var instance = descriptor.__realComponentInstance || descriptor;
    instance._descriptor = descriptor;
    return instance;
  }
  // In prod we don't clone, we simply use the same instance for unaffected
  // behavior. We have to keep the descriptor around for comparison later on.
  // This should ideally be accepted in the constructor of the instance but
  // since that is currently overloaded, we just manually attach it here.
  descriptor._descriptor = descriptor;
  return descriptor;
}

module.exports = instantiateReactComponent;

}).call(this,require("qvMYcC"))
},{"./warning":143,"qvMYcC":146}],121:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition) {
  if (!condition) {
    var error = new Error(
      'Minified exception occured; use the non-minified dev environment for ' +
      'the full error message and additional helpful warnings.'
    );
    error.framesToPop = 1;
    throw error;
  }
};

if ("production" !== process.env.NODE_ENV) {
  invariant = function(condition, format, a, b, c, d, e, f) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }

    if (!condition) {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      var error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  };
}

module.exports = invariant;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],122:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isEventSupported
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"./ExecutionEnvironment":29}],123:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    typeof Node === 'function' ? object instanceof Node :
      typeof object === 'object' &&
      typeof object.nodeType === 'number' &&
      typeof object.nodeName === 'string'
  ));
}

module.exports = isNode;

},{}],124:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isTextInputElement
 */

"use strict";

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
    elem.nodeName === 'TEXTAREA'
  );
}

module.exports = isTextInputElement;

},{}],125:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = require("./isNode");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":123}],126:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

"use strict";

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      nextClass && (className += ' ' + nextClass);
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],127:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== process.env.NODE_ENV ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],128:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],129:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

"use strict";

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (cache.hasOwnProperty(string)) {
      return cache[string];
    } else {
      return cache[string] = callback.call(this, string);
    }
  };
}

module.exports = memoizeStringOnly;

},{}],130:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule merge
 */

"use strict";

var mergeInto = require("./mergeInto");

/**
 * Shallow merges two structures into a return value, without mutating either.
 *
 * @param {?object} one Optional object with properties to merge from.
 * @param {?object} two Optional object with properties to merge from.
 * @return {object} The shallow extension of one by two.
 */
var merge = function(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;

},{"./mergeInto":132}],131:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mergeHelpers
 *
 * requiresPolyfills: Array.isArray
 */

"use strict";

var invariant = require("./invariant");
var keyMirror = require("./keyMirror");

/**
 * Maximum number of levels to traverse. Will catch circular structures.
 * @const
 */
var MAX_MERGE_DEPTH = 36;

/**
 * We won't worry about edge cases like new String('x') or new Boolean(true).
 * Functions are considered terminals, and arrays are not.
 * @param {*} o The item/object/value to test.
 * @return {boolean} true iff the argument is a terminal.
 */
var isTerminal = function(o) {
  return typeof o !== 'object' || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  /**
   * Converts null/undefined values into empty object.
   *
   * @param {?Object=} arg Argument to be normalized (nullable optional)
   * @return {!Object}
   */
  normalizeMergeArg: function(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  /**
   * If merging Arrays, a merge strategy *must* be supplied. If not, it is
   * likely the caller's fault. If this function is ever called with anything
   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.
   *
   * @param {*} one Array to merge into.
   * @param {*} two Array to merge from.
   */
  checkMergeArrayArgs: function(one, two) {
    ("production" !== process.env.NODE_ENV ? invariant(
      Array.isArray(one) && Array.isArray(two),
      'Tried to merge arrays, instead got %s and %s.',
      one,
      two
    ) : invariant(Array.isArray(one) && Array.isArray(two)));
  },

  /**
   * @param {*} one Object to merge into.
   * @param {*} two Object to merge from.
   */
  checkMergeObjectArgs: function(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  /**
   * @param {*} arg
   */
  checkMergeObjectArg: function(arg) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !isTerminal(arg) && !Array.isArray(arg),
      'Tried to merge an object, instead got %s.',
      arg
    ) : invariant(!isTerminal(arg) && !Array.isArray(arg)));
  },

  /**
   * Checks that a merge was not given a circular object or an object that had
   * too great of depth.
   *
   * @param {number} Level of recursion to validate against maximum.
   */
  checkMergeLevel: function(level) {
    ("production" !== process.env.NODE_ENV ? invariant(
      level < MAX_MERGE_DEPTH,
      'Maximum deep merge depth exceeded. You may be attempting to merge ' +
      'circular structures in an unsupported way.'
    ) : invariant(level < MAX_MERGE_DEPTH));
  },

  /**
   * Checks that the supplied merge strategy is valid.
   *
   * @param {string} Array merge strategy.
   */
  checkArrayStrategy: function(strategy) {
    ("production" !== process.env.NODE_ENV ? invariant(
      strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
      'You must provide an array strategy to deep merge functions to ' +
      'instruct the deep merge how to resolve merging two arrays.'
    ) : invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies));
  },

  /**
   * Set of possible behaviors of merge algorithms when encountering two Arrays
   * that must be merged together.
   * - `clobber`: The left `Array` is ignored.
   * - `indexByIndex`: The result is achieved by recursively deep merging at
   *   each index. (not yet supported.)
   */
  ArrayStrategies: keyMirror({
    Clobber: true,
    IndexByIndex: true
  })

};

module.exports = mergeHelpers;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"./keyMirror":127,"qvMYcC":146}],132:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mergeInto
 * @typechecks static-only
 */

"use strict";

var mergeHelpers = require("./mergeHelpers");

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;

/**
 * Shallow merges two structures by mutating the first parameter.
 *
 * @param {object} one Object to be merged into.
 * @param {?object} two Optional object with properties to merge from.
 */
function mergeInto(one, two) {
  checkMergeObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;

},{"./mergeHelpers":131}],133:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mixInto
 */

"use strict";

/**
 * Simply copies properties to the prototype.
 */
var mixInto = function(constructor, methodBag) {
  var methodName;
  for (methodName in methodBag) {
    if (!methodBag.hasOwnProperty(methodName)) {
      continue;
    }
    constructor.prototype[methodName] = methodBag[methodName];
  }
};

module.exports = mixInto;

},{}],134:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule monitorCodeUse
 */

"use strict";

var invariant = require("./invariant");

/**
 * Provides open-source compatible instrumentation for monitoring certain API
 * uses before we're ready to issue a warning or refactor. It accepts an event
 * name which may only contain the characters [a-z0-9_] and an optional data
 * object with further information.
 */

function monitorCodeUse(eventName, data) {
  ("production" !== process.env.NODE_ENV ? invariant(
    eventName && !/[^a-z0-9_]/.test(eventName),
    'You must provide an eventName using only the characters [a-z0-9_]'
  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));
}

module.exports = monitorCodeUse;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],135:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule objMap
 */

"use strict";

/**
 * For each key/value pair, invokes callback func and constructs a resulting
 * object which contains, for every key in obj, values that are the result of
 * of invoking the function:
 *
 *   func(value, key, iteration)
 *
 * @param {?object} obj Object to map keys over
 * @param {function} func Invoked for each key/val pair.
 * @param {?*} context
 * @return {?object} Result of mapping or null if obj is falsey
 */
function objMap(obj, func, context) {
  if (!obj) {
    return null;
  }
  var i = 0;
  var ret = {};
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, obj[key], key, i++);
    }
  }
  return ret;
}

module.exports = objMap;

},{}],136:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule objMapKeyVal
 */

"use strict";

/**
 * Behaves the same as `objMap` but invokes func with the key first, and value
 * second. Use `objMap` unless you need this special case.
 * Invokes func as:
 *
 *   func(key, value, iteration)
 *
 * @param {?object} obj Object to map keys over
 * @param {!function} func Invoked for each key/val pair.
 * @param {?*} context
 * @return {?object} Result of mapping or null if obj is falsey
 */
function objMapKeyVal(obj, func, context) {
  if (!obj) {
    return null;
  }
  var i = 0;
  var ret = {};
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, key, obj[key], i++);
    }
  }
  return ret;
}

module.exports = objMapKeyVal;

},{}],137:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule onlyChild
 */
"use strict";

var ReactComponent = require("./ReactComponent");

var invariant = require("./invariant");

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactComponent.isValidComponent(children),
    'onlyChild must be passed a children with exactly one child.'
  ) : invariant(ReactComponent.isValidComponent(children)));
  return children;
}

module.exports = onlyChild;

}).call(this,require("qvMYcC"))
},{"./ReactComponent":36,"./invariant":121,"qvMYcC":146}],138:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule performanceNow
 * @typechecks static-only
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

/**
 * Detect if we can use window.performance.now() and gracefully
 * fallback to Date.now() if it doesn't exist.
 * We need to support Firefox < 15 for now due to Facebook's webdriver
 * infrastructure.
 */
var performance = null;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.webkitPerformance;
}

if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"./ExecutionEnvironment":29}],139:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule shallowEqual
 */

"use strict";

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B'a keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],140:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule shouldUpdateReactComponent
 * @typechecks static-only
 */

"use strict";

/**
 * Given a `prevComponentInstance` and `nextComponent`, determines if
 * `prevComponentInstance` should be updated as opposed to being destroyed or
 * replaced by a new instance. The second argument is a descriptor. Future
 * versions of the reconciler should only compare descriptors to other
 * descriptors.
 *
 * @param {?object} prevComponentInstance
 * @param {?object} nextDescriptor
 * @return {boolean} True if `prevComponentInstance` should be updated.
 * @protected
 */
function shouldUpdateReactComponent(prevComponentInstance, nextDescriptor) {
  // TODO: Remove warning after a release.
  if (prevComponentInstance && nextDescriptor &&
      prevComponentInstance.constructor === nextDescriptor.constructor && (
        (prevComponentInstance.props && prevComponentInstance.props.key) ===
        (nextDescriptor.props && nextDescriptor.props.key)
      )) {
    if (prevComponentInstance._owner === nextDescriptor._owner) {
      return true;
    } else {
      if ("production" !== process.env.NODE_ENV) {
        if (prevComponentInstance.state) {
          console.warn(
            'A recent change to React has been found to impact your code. ' +
            'A mounted component will now be unmounted and replaced by a ' +
            'component (of the same class) if their owners are different. ' +
            'Previously, ownership was not considered when updating.',
            prevComponentInstance,
            nextDescriptor
          );
        }
      }
    }
  }
  return false;
}

module.exports = shouldUpdateReactComponent;

}).call(this,require("qvMYcC"))
},{"qvMYcC":146}],141:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule toArray
 * @typechecks
 */

var invariant = require("./invariant");

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFrom.
 *
 * @param {object|function} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
  // old versions of Safari).
  ("production" !== process.env.NODE_ENV ? invariant(
    !Array.isArray(obj) &&
    (typeof obj === 'object' || typeof obj === 'function'),
    'toArray: Array-like object expected'
  ) : invariant(!Array.isArray(obj) &&
  (typeof obj === 'object' || typeof obj === 'function')));

  ("production" !== process.env.NODE_ENV ? invariant(
    typeof length === 'number',
    'toArray: Object needs a length property'
  ) : invariant(typeof length === 'number'));

  ("production" !== process.env.NODE_ENV ? invariant(
    length === 0 ||
    (length - 1) in obj,
    'toArray: Object should have keys for indices'
  ) : invariant(length === 0 ||
  (length - 1) in obj));

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

module.exports = toArray;

}).call(this,require("qvMYcC"))
},{"./invariant":121,"qvMYcC":146}],142:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule traverseAllChildren
 */

"use strict";

var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactTextComponent = require("./ReactTextComponent");

var invariant = require("./invariant");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR = ':';

/**
 * TODO: Test that:
 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
 * 2. it('should fail when supplied duplicate key', function() {
 * 3. That a single child and an array with one item have the same key pattern.
 * });
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  '.': '=1',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=.:]/g;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  if (component && component.props && component.props.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.props.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} key Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(
    userProvidedKeyEscapeRegex,
    userProvidedKeyEscaper
  );
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
var traverseAllChildrenImpl =
  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
    var subtreeCount = 0;  // Count of children found in the current subtree.
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var child = children[i];
        var nextName = (
          nameSoFar +
          (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
          getComponentKey(child, i)
        );
        var nextIndex = indexSoFar + subtreeCount;
        subtreeCount += traverseAllChildrenImpl(
          child,
          nextName,
          nextIndex,
          callback,
          traverseContext
        );
      }
    } else {
      var type = typeof children;
      var isOnlyChild = nameSoFar === '';
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows
      var storageName =
        isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
      if (children == null || type === 'boolean') {
        // All of the above are perceived as null.
        callback(traverseContext, null, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (children.type && children.type.prototype &&
                 children.type.prototype.mountComponentIntoNode) {
        callback(traverseContext, children, storageName, indexSoFar);
        subtreeCount = 1;
      } else {
        if (type === 'object') {
          ("production" !== process.env.NODE_ENV ? invariant(
            !children || children.nodeType !== 1,
            'traverseAllChildren(...): Encountered an invalid child; DOM ' +
            'elements are not valid children of React components.'
          ) : invariant(!children || children.nodeType !== 1));
          for (var key in children) {
            if (children.hasOwnProperty(key)) {
              subtreeCount += traverseAllChildrenImpl(
                children[key],
                (
                  nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
                  wrapUserProvidedKey(key) + SUBSEPARATOR +
                  getComponentKey(children[key], 0)
                ),
                indexSoFar + subtreeCount,
                callback,
                traverseContext
              );
            }
          }
        } else if (type === 'string') {
          var normalizedText = new ReactTextComponent(children);
          callback(traverseContext, normalizedText, storageName, indexSoFar);
          subtreeCount += 1;
        } else if (type === 'number') {
          var normalizedNumber = new ReactTextComponent('' + children);
          callback(traverseContext, normalizedNumber, storageName, indexSoFar);
          subtreeCount += 1;
        }
      }
    }
    return subtreeCount;
  };

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children !== null && children !== undefined) {
    traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
  }
}

module.exports = traverseAllChildren;

}).call(this,require("qvMYcC"))
},{"./ReactInstanceHandles":62,"./ReactTextComponent":79,"./invariant":121,"qvMYcC":146}],143:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = require("./emptyFunction");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== process.env.NODE_ENV) {
  warning = function(condition, format ) {var args=Array.prototype.slice.call(arguments,2);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (!condition) {
      var argIndex = 0;
      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
    }
  };
}

module.exports = warning;

}).call(this,require("qvMYcC"))
},{"./emptyFunction":105,"qvMYcC":146}],144:[function(require,module,exports){
module.exports = require('./lib/React');

},{"./lib/React":33}],145:[function(require,module,exports){
// TinyTinyColor v0.0.0
// https://github.com/autopulated/TinyTinyColor
// 2013-08-10, Brian Grinstead, MIT License
// 2014, James Crosby, MIT License
//
// Like TinyColor, but even smaller (who uses named colours anyway)

(function() {

var trimLeft = /^[\s,#]+/,
    trimRight = /\s+$/,
    tinyCounter = 0,
    math = Math,
    mathRound = math.round,
    mathMin = math.min,
    mathMax = math.max;

var tinycolor = function tinycolor (color, opts) {

    color = (color) ? color : '';
    opts = opts || { };

    // If input is already a tinycolor, return itself
    if (color instanceof tinycolor) {
       return color;
    }
    // If we are called as a function, call using new instead
    if (!(this instanceof tinycolor)) {
        return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._r = rgb.r,
    this._g = rgb.g,
    this._b = rgb.b,
    this._a = rgb.a,
    this._roundA = mathRound(100*this._a) / 100,
    this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;

    // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by `inputToRgb`
    if (this._r < 1) { this._r = mathRound(this._r); }
    if (this._g < 1) { this._g = mathRound(this._g); }
    if (this._b < 1) { this._b = mathRound(this._b); }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
};

tinycolor.prototype = {
    getAlpha: function() {
        return this._a;
    },
    setAlpha: function(value) {
        this._a = boundAlpha(value);
        this._roundA = mathRound(100*this._a) / 100;
    },
    toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
    },
    toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return (this._a == 1) ?
          "hsv("  + h + ", " + s + "%, " + v + "%)" :
          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
    },
    toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
    },
    toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return (this._a == 1) ?
          "hsl("  + h + ", " + s + "%, " + l + "%)" :
          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
    },
    toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function(allow3Char) {
        return '#' + this.toHex(allow3Char);
    },
    toHex8: function() {
        return rgbaToHex(this._r, this._g, this._b, this._a);
    },
    toHex8String: function() {
        return '#' + this.toHex8();
    },
    toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
    },
    toRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toFilter: function(secondColor) {
        var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";

        if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = s.toHex8String();
        }

        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
    }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function(color, opts) {
    if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
            if (color.hasOwnProperty(i)) {
                if (i === "a") {
                    newColor[i] = color[i];
                }
                else {
                    newColor[i] = convertToPercentage(color[i]);
                }
            }
        }
        color = newColor;
    }

    return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {

    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
        color = stringInputToObject(color);
    }

    if (typeof color == "object") {
        if (color.hasOwnProperty("r") && color.hasOwnProperty("g") && color.hasOwnProperty("b")) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        }
        else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("v")) {
            color.s = convertToPercentage(color.s);
            color.v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, color.s, color.v);
            ok = true;
            format = "hsv";
        }
        else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("l")) {
            color.s = convertToPercentage(color.s);
            color.l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, color.s, color.l);
            ok = true;
            format = "hsl";
        }

        if (color.hasOwnProperty("a")) {
            a = color.a;
        }
    }

    a = boundAlpha(a);

    return {
        ok: ok,
        format: color.format || format,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a: a
    };
}


// Conversion Functions
// --------------------

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b){
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
    };
}

// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, l = (max + min) / 2;

    if(max == min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
    }

    return { h: h, s: s, l: l };
}

// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
    var r, g, b;

    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    if(s === 0) {
        r = g = b = l; // achromatic
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1/3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1/3);
    }

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, v = max;

    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if(max == min) {
        h = 0; // achromatic
    }
    else {
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
 function hsvToRgb(h, s, v) {

    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);

    var i = math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    // Return a 3 character hex if possible
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
}
    // `rgbaToHex`
    // Converts an RGBA color plus alpha transparency to hex
    // Assumes r, g, b and a are contained in the set [0, 255]
    // Returns an 8 character hex
    function rgbaToHex(r, g, b, a) {

        var hex = [
            pad2(convertDecimalToHex(a)),
            pad2(mathRound(r).toString(16)),
            pad2(mathRound(g).toString(16)),
            pad2(mathRound(b).toString(16))
        ];

        return hex.join("");
    }

// `equals`
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) { return false; }
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};


// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

tinycolor.desaturate = function (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
};
tinycolor.saturate = function (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
};
tinycolor.greyscale = function(color) {
    return tinycolor.desaturate(color, 100);
};
tinycolor.lighten = function(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
};
tinycolor.darken = function (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
};
tinycolor.complement = function(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
};


// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

tinycolor.triad = function(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
    ];
};
tinycolor.tetrad = function(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
    ];
};
tinycolor.splitcomplement = function(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
    ];
};
tinycolor.analogous = function(color, results, slices) {
    results = results || 6;
    slices = slices || 30;

    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor(hsl));
    }
    return ret;
};
tinycolor.monochromatic = function(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
        ret.push(tinycolor({ h: h, s: s, v: v}));
        v = (v + modification) % 1;
    }

    return ret;
};


// Utilities
// ---------


// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }

    return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
    if (isOnePointZero(n)) { n = "100%"; }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n)));

    // Automatically convert percentage into number
    if (processPercent) {
        n = parseInt(n * max, 10) / 100;
    }

    // Handle floating point rounding errors
    if ((math.abs(n - max) < 0.000001)) {
        return 1;
    }

    // Convert into [0, 1] range if it isn't already
    return (n % max) / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
    return mathMin(1, mathMax(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
    return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
    if (n <= 1) {
        n = (n * 100) + "%";
    }

    return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
    return (parseIntFromHex(h) / 255);
}

var matchers = (function() {

    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?";

    // <http://www.w3.org/TR/css3-values/#number-value>
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

    // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

    return {
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
})();

// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function stringInputToObject(color) {

    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();

    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match;
    if ((match = matchers.rgb.exec(color))) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    if ((match = matchers.rgba.exec(color))) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    if ((match = matchers.hsl.exec(color))) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    if ((match = matchers.hsla.exec(color))) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    if ((match = matchers.hsv.exec(color))) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            a: convertHexToDecimal(match[1]),
            r: parseIntFromHex(match[2]),
            g: parseIntFromHex(match[3]),
            b: parseIntFromHex(match[4]),
            format: "hex8"
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: "hex"
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: "hex"
        };
    }

    return false;
}

// Node: Export function
if (typeof module !== "undefined" && module.exports) {
    module.exports = tinycolor;
}
// AMD/requirejs: Define the module
else if (typeof define === 'function' && define.amd) {
    define(function () {return tinycolor;});
}
// Browser: Expose to window
else {
    window.tinytinycolor = tinycolor;
}

})();

},{}],146:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}]},{},[1])